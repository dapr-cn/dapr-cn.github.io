<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr 文档库 – IDE 支持</title><link>https://docs.dapr.io/developing-applications/ides/</link><description>Recent content in IDE 支持 on Dapr 文档库</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.dapr.io/developing-applications/ides/index.xml" rel="self" type="application/rss+xml"/><item><title>Developing-Applications: Visual Studio Code与 Dapr 集成</title><link>https://docs.dapr.io/developing-applications/ides/vscode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/developing-applications/ides/vscode/</guid><description>
&lt;h2 id="扩展">扩展&lt;/h2>
&lt;p>Dapr提供了一个&lt;em>预览版&lt;/em> &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-dapr">的Dapr Visual Studio Code扩展&lt;/a> ，用于您的Dapr应用程序的本地开发和调试。&lt;/p>
&lt;p>&lt;a href="vscode:extension/ms-azuretools.vscode-dapr" class="btn btn-primary" role="button">在 VSCode 中打开&lt;/a>&lt;/p>
&lt;h3 id="功能概述">功能概述&lt;/h3>
&lt;ul>
&lt;li>脚手架Dapr任务、启动和组件资产 &lt;br />&lt;img src="https://docs.dapr.io/images/vscode-extension-scaffold.png" alt="Dapr VSCode 扩展 scaffold 选项的截图" width="800" />&lt;/li>
&lt;li>查看正在运行的 Dapr 应用程序 &lt;br />&lt;img src="https://docs.dapr.io/images/vscode-extension-view.png" alt="Dapr VSCode 扩展视图运行应用程序选项的截图" width="800" />&lt;/li>
&lt;li>调用 Dapr 应用的方法 &lt;br />&lt;img src="https://docs.dapr.io/images/vscode-extension-invoke.png" alt="Dapr VSCode 扩展调用选项的截图" width="800" />&lt;/li>
&lt;li>发布事件到 Dapr 应用程序 &lt;br />&lt;img src="https://docs.dapr.io/images/vscode-extension-publish.png" alt="Dapr VSCode 扩展发布选项的截图" width="800" />&lt;/li>
&lt;/ul>
&lt;h4 id="example">Example&lt;/h4>
&lt;p>观看有关如何使用 Dapr VS 代码扩展的 &lt;a href="https://www.bilibili.com/video/BV1QK4y1p7fn?p=9&amp;amp;t=85">视频&lt;/a>: &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/OtbYCBt9C34?start=85" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/p>
&lt;h2 id="远程开发容器">远程开发容器&lt;/h2>
&lt;p>Visual Studio Code Remote Containers扩展允许您使用Docker容器作为功能齐全的开发环境，使您可以&lt;a href="https://code.visualstudio.com/docs/remote/containers">在容器中进行开发&lt;/a>，而无需在本地文件系统中安装任何额外的框架或包。&lt;/p>
&lt;p>Dapr 为每种语言的 SDK 预先构建了Docker 远程容器。 您可以选择您的一个选择来选择一个随时制作的环境。 注意这些预制容器自动更新到最新的 Dapr 版本。&lt;/p>
&lt;h3 id="设置远程开发容器">设置远程开发容器&lt;/h3>
&lt;h4 id="先决条件">先决条件&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.docker.com/products/docker-desktop">Docker Desktop&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aka.ms/vscode-remote/download/extension">VSCode 远程开发扩展包&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="创建远程-dapr-容器">创建远程 Dapr 容器&lt;/h4>
&lt;ol>
&lt;li>在 VS 代码中打开您的应用程序工作区（workspace）&lt;/li>
&lt;li>在 command palette 中 (ctrl+shift+p) 输入并选择 &lt;code>Remote-Containers: Add Development Container Configuration Files...&lt;/code> &lt;br />&lt;img src="https://docs.dapr.io/images/vscode-remotecontainers-addcontainer.png" alt="添加远程容器的截图" width="700" />&lt;/li>
&lt;li>输入 &lt;code>dapr&lt;/code> 来过滤列表到可用的 Dapr 远程容器，并选择符合您应用程序的语言容器。 请注意，您可能需要选择 &lt;code>Show All Definitions...&lt;/code> &lt;br />&lt;img src="https://docs.dapr.io/images/vscode-remotecontainers-daprcontainers.png" alt="添加 dapr 容器的截图" width="700" />&lt;/li>
&lt;li>Follow the prompts to rebuild your application in container. &lt;br />&lt;img src="https://docs.dapr.io/images/vscode-remotecontainers-reopen.png" alt="在开发容器中重新打开应用程序的截图" width="700" />&lt;/li>
&lt;/ol>
&lt;h4 id="example-1">Example&lt;/h4>
&lt;p>观看有关如何使用应用程序的 Dapr VS 代码远程容器的 &lt;a href="https://www.bilibili.com/video/BV1QK4y1p7fn?p=8&amp;amp;t=120">视频&lt;/a>。 &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/D2dO4aGpHcg?start=120" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/p>
&lt;h2 id="疑难解答">疑难解答&lt;/h2>
&lt;h3 id="同时调试多个dapr应用程序">同时调试多个Dapr应用程序&lt;/h3>
&lt;p>使用 VS Code extension，您可以通过&lt;a href="https://code.visualstudio.com/docs/editor/debugging#_multitarget-debugging">Multi-target debugging&lt;/a>同时调试多个Dapr应用程序&lt;/p>
&lt;h3 id="手动配置-visual-studio-code-调试-daprd">手动配置 Visual Studio Code 调试 daprd&lt;/h3>
&lt;p>如果你想要通过 &lt;a href="https://code.visualstudio.com/Docs/editor/tasks">tasks.json&lt;/a> 和 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">launch.json&lt;/a> 文件配置一个项目使用Dapr而又不想使用 Dapr VS Code extension，这里有一些手动步骤说明。&lt;/p>
&lt;p>开发 Dapr应用程序时，您通常使用 dapr cli 来启动你自定义的dapr服务，就像这样：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --app-id nodeapp --app-port &lt;span style="color:#ae81ff">3000&lt;/span> --dapr-http-port &lt;span style="color:#ae81ff">3500&lt;/span> app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这将生成组件的 yaml 文件(如果它们不存在)，以便您的服务能够与本地的redis 容器交互。 作为一个入门方法这很好用，但是如果你想要附加一个调试器到你的服务来进行代码调试呢？ 您可以在这里使用 dapr 运行时(daprd) 来帮助实现这一点。&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Dapr runtime (daprd) 不会自动生成用于 Redis 的组件的 yaml 文件。 这些将需要手动创建，否则您需要运行 dapr cli (dapr) 来自动创建它们。
&lt;/div>
&lt;p>将调试器附加到您的服务中的一种方法是先从命令行中运行符合正确参数的 daprd，然后启动您的代码并附加调试器。 虽然这完全是一个可以接受的解决方案，但它也需要一些额外的步骤，以及对那些可能想要克隆你的仓库并点击 &amp;ldquo;play &amp;ldquo;按钮开始调试的开发人员进行一些指导。&lt;/p>
&lt;p>使用 &lt;a href="https://code.visualstudio.com/Docs/editor/tasks">tasks.json&lt;/a> 和 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">launch.json&lt;/a> 文件在 Visual Studio 代码中 您可以简化过程并要求 VS Code 在启动调试器之前启动 daprd 进程。&lt;/p>
&lt;p>让我们开始吧！&lt;/p>
&lt;h4 id="修改-launchjson-配置以包含一个-prelaunchtask">修改 launch.json 配置以包含一个 preLaunchTask&lt;/h4>
&lt;p>在您的 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">launch.json&lt;/a> 文件中，为您想要 daprd 启动的每个配置添加一个 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTask&lt;/a>。 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTask&lt;/a> 将引用您在 tasks.json 文件中定义的任务。 这里是 Node 和 .NET Core 的一个例子。 注意 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTasks&lt;/a> 参考：daprd-web 和 daprd-leadboard。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0.2.0&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;configurations&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;node&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;launch&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Node Launch w/Dapr (Web)&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;preLaunchTask&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-web&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;program&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Web/server.js&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;skipFiles&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;&amp;lt;node_internals&amp;gt;/**&amp;#34;&lt;/span>
]
},
{
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;coreclr&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;launch&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;.NET Core Launch w/Dapr (LeaderboardService)&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;preLaunchTask&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-leaderboard&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;program&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Services/LeaderboardService/bin/Debug/netcoreapp3.0/LeaderboardService.dll&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [],
&lt;span style="color:#f92672">&amp;#34;cwd&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Services/LeaderboardService&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;stopAtEntry&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;serverReadyAction&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;action&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;openExternally&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;pattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^\\s*Now listening on:\\s+(https?://\\S+)&amp;#34;&lt;/span>
},
&lt;span style="color:#f92672">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;ASPNETCORE_ENVIRONMENT&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Development&amp;#34;&lt;/span>
},
&lt;span style="color:#f92672">&amp;#34;sourceFileMap&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;/Views&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Views&amp;#34;&lt;/span>
}
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="添加-daprd-任务到-tasksjson">添加 daprd 任务到 tasks.json&lt;/h4>
&lt;p>您需要在您的 &lt;a href="https://code.visualstudio.com/Docs/editor/tasks">tasks.json&lt;/a> 文件中定义一个 daprd 任务和问题匹配器（problem matcher）。 这里有两个示例(均通过上述 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTask&lt;/a> 成员引用。 注意，在 .NET Core daprd 任务(dpred -leaderboard)的情况下，还有一个&lt;a href="https://code.visualstudio.com/Docs/editor/tasks#_compound-tasks">dependsOn&lt;/a>成员，它引用构建任务，以确保最新的代码正在运行/调试。 用了 &lt;a href="https://code.visualstudio.com/Docs/editor/tasks#_defining-a-problem-matcher">problemMatcher&lt;/a>，这样当 daprd 进程启动和运行时，VSCode 就能够知道。&lt;/p>
&lt;p>让我们大概看看正在传递到 daprd 命令的参数吧。&lt;/p>
&lt;ul>
&lt;li>-app-id - 您微服务的 id (您将如何通过服务调用来定位它)&lt;/li>
&lt;li>-app-port &amp;ndash; 您的应用程序代码正在监听的端口号&lt;/li>
&lt;li>-dapr-http-port &amp;ndash; Dapr api的 http 端口&lt;/li>
&lt;li>-dapr-grpc-port &amp;ndash; Dapr api的 grpc 端口&lt;/li>
&lt;li>-placement-host-address &amp;ndash; 放置服务的位置(这应该在docker中运行，因为它是当你安装了dapr 并运行&lt;code>dapr init&lt;/code>的时候创建) &amp;gt; 注意: 您将需要确保您为您创建的每个dapr-grpc (-dapr-http-port 和 -dapr-grpc-port) 指定不同的 http/grpc 端口， 否则，当您尝试启动第二个配置时将端口冲突。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>注意: 您将需要确保您为您创建的每个dapr-grpc (-dapr-http-port 和 -dapr-grpc-port) 指定不同的 http/grpc 端口， 否则，当您尝试启动第二个配置时将端口冲突。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.0.0&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;tasks&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;label&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;dotnet&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;process&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Services/LeaderboardService/LeaderboardService.csproj&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;/property:GenerateFullPaths=true&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;/consoleloggerparameters:NoSummary&amp;#34;&lt;/span>
],
&lt;span style="color:#f92672">&amp;#34;problemMatcher&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;$msCompile&amp;#34;&lt;/span>
},
{
&lt;span style="color:#f92672">&amp;#34;label&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-web&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;-app-id&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;whac-a-mole--web&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-app-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;3000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-http-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;51000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-grpc-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;52000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-placement-host-address&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;localhost:50005&amp;#34;&lt;/span>
],
&lt;span style="color:#f92672">&amp;#34;isBackground&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;problemMatcher&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;pattern&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;regexp&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;file&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
}
],
&lt;span style="color:#f92672">&amp;#34;background&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;beginsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*starting Dapr Runtime.*&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;endsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*waiting on port.*&amp;#34;&lt;/span>
}
}
},
{
&lt;span style="color:#f92672">&amp;#34;label&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-leaderboard&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;-app-id&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;whac-a-mole--leaderboard&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-app-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;5000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-http-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;51001&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-grpc-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;52001&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-placement-host-address&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;localhost:50005&amp;#34;&lt;/span>
],
&lt;span style="color:#f92672">&amp;#34;isBackground&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;problemMatcher&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;pattern&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;regexp&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;file&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
}
],
&lt;span style="color:#f92672">&amp;#34;background&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;beginsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*starting Dapr Runtime.*&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;endsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*waiting on port.*&amp;#34;&lt;/span>
}
},
&lt;span style="color:#f92672">&amp;#34;dependsOn&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="收尾">收尾&lt;/h4>
&lt;p>一旦您进行了所需的更改， 您应该能够在 VSCode 中切换到 &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">debug&lt;/a> 视图，然后点击“play”按钮来启动您的调试配置。 如果所有配置正确， 您应该在 VSCode 终端窗口中看到数据启动， &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">debugger&lt;/a> 应该附加到您的应用程序(您应该在调试窗口中看到它的输出)。&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
因为您没有使用 &lt;strong>&lt;em>dapr&lt;/em> run&lt;/strong>* cli 命令， 但通过运行 **daprd ***list****** 命令将不会显示当前正在运行的应用列表。
&lt;/div></description></item><item><title>Developing-Applications: IntelliJ</title><link>https://docs.dapr.io/developing-applications/ides/intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/developing-applications/ides/intellij/</guid><description>
&lt;p>开发 Dapr应用程序时，你通常使用 Dapr CLI 来启动你的 Dapr 服务，就像这样：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --app-id nodeapp --app-port &lt;span style="color:#ae81ff">3000&lt;/span> --dapr-http-port &lt;span style="color:#ae81ff">3500&lt;/span> app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这使用了默认的组件yaml文件（在&lt;code>dapr init&lt;/code>上创建），这样你的服务就可以与本地Redis容器交互。 作为一个入门方法这很好用，但是如果你想要附加一个调试器到你的服务来进行代码调试呢？ 在这里你可以使用dapr cli而不需要调用app。&lt;/p>
&lt;p>将调试器附加到服务中的一种方法是首先从命令行运行&lt;code>dapr run --&lt;/code>，然后运行你的代码并附加调试器。 虽然这完全是一个可以接受的解决方案，但它也需要一些额外的步骤（比如在终端和IDE之间进行切换），以及对那些可能想要克隆你的仓库并点击 &amp;ldquo;play &amp;ldquo;按钮开始调试的开发人员进行一些指导。&lt;/p>
&lt;p>本文档介绍了如何从IntelliJ中直接使用&lt;code>dapr&lt;/code>。 作为前提条件，要确保你已经通过&lt;code>dapr init&lt;/code>初始化了Dapr的开发环境。&lt;/p>
&lt;p>让我们开始吧！&lt;/p>
&lt;h2 id="添加dapr作为-external-tool">添加Dapr作为 &amp;ldquo;External Tool&amp;rdquo;&lt;/h2>
&lt;p>首先，退出IntelliJ后再修改配置文件。&lt;/p>
&lt;h3 id="intellij配置文件位置">IntelliJ配置文件位置&lt;/h3>
&lt;p>对于&lt;a href="https://www.jetbrains.com/help/idea/2020.1/tuning-the-ide.html#config-directory">2020.1&lt;/a>及以上版本，工具的配置文件应该位于：&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">&lt;li class="nav-item">&lt;a class="nav-link active"
id="tabs-0-windows-tab" data-toggle="tab" href="#tabs-0-windows" role="tab"
aria-controls="tabs-0-windows" aria-selected="true">
Windows
&lt;/a>
&lt;/li>&lt;li class="nav-item">&lt;a class="nav-link"
id="tabs-0-linux-tab" data-toggle="tab" href="#tabs-0-linux" role="tab"
aria-controls="tabs-0-linux" aria-selected="false">
Linux
&lt;/a>
&lt;/li>&lt;li class="nav-item">&lt;a class="nav-link"
id="tabs-0-macos-tab" data-toggle="tab" href="#tabs-0-macos" role="tab"
aria-controls="tabs-0-macos" aria-selected="false">
MacOS
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">
&lt;div class="tab-pane fade show active" id="tabs-0-windows" role="tabpanel" aria-labelled-by="tabs-0-windows-tab">
&lt;br />&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="color:#66d9ef">%&lt;/span>USERPROFILE%\AppData\Roaming\JetBrains\IntelliJIdea2020.1\tools\
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade" id="tabs-0-linux" role="tabpanel" aria-labelled-by="tabs-0-linux-tab">
&lt;br />&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$HOME/.config/JetBrains/IntelliJIdea2020.1/tools/
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade" id="tabs-0-macos" role="tabpanel" aria-labelled-by="tabs-0-macos-tab">
&lt;br />&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">~/Library/Application Support/JetBrains/IntelliJIdea2020.1/tools/
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>2019.3或更早版本的配置文件位置不同， 更多详情请参见&lt;a href="https://www.jetbrains.com/help/idea/2019.3/tuning-the-ide.html#config-directory">这里&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;p>如有需要，请更改路径中的IntelliJ版本。&lt;/p>
&lt;p>创建或编辑&lt;code>&amp;lt;CONFIG PATH&amp;gt;/tools/External\ Tools.xml&lt;/code>中的文件（如有需要，请更改路径中的IntelliJ版本）。 如上所述，&lt;code>&amp;lt;CONFIG PATH&amp;gt;&lt;/code>是操作系统依赖的。&lt;/p>
&lt;p>添加一个新的 &lt;code>&amp;lt;tool&amp;gt;&amp;lt;/tool&amp;gt;&lt;/code>条目:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#f92672">&amp;lt;toolSet&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;External Tools&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
...
&lt;span style="color:#75715e">&amp;lt;!-- 1. Each tool has its own app-id, so create one per application to be debugged --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;tool&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dapr for DemoService in examples&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Dapr sidecar&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInMainMenu=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInEditor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInProject=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInSearchPopup=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">disabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">useConsole=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdOut=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdErr=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">synchronizeAfterRun=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;exec&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 2. For Linux or MacOS use: /usr/local/bin/dapr --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMMAND&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;C:\dapr\dapr.exe&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 3. Choose app, http and grpc ports that do not conflict with other daprd command entries (placement address should not change). --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PARAMETERS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;run -app-id demoservice -app-port 3000 -dapr-http-port 3005 -dapr-grpc-port 52000&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 4. Use the folder where the `components` folder is located --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WORKING_DIRECTORY&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;C:/Code/dapr/java-sdk/examples&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/exec&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/tool&amp;gt;&lt;/span>
...
&lt;span style="color:#f92672">&amp;lt;/toolSet&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>你也可以为一个可以在多个项目中复用的sidecar工具创建一个新条目:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#f92672">&amp;lt;toolSet&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;External Tools&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
...
&lt;span style="color:#75715e">&amp;lt;!-- 1. Reusable entry for apps with app port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;tool&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dapr with app-port&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Dapr sidecar&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInMainMenu=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInEditor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInProject=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInSearchPopup=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">disabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">useConsole=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdOut=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdErr=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">synchronizeAfterRun=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;exec&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 2. For Linux or MacOS use: /usr/local/bin/dapr --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMMAND&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;c:\dapr\dapr.exe&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 3. Prompts user 4 times (in order): app id, app port, Dapr&amp;#39;s http port, Dapr&amp;#39;s grpc port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PARAMETERS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;run --app-id $Prompt$ --app-port $Prompt$ --dapr-http-port $Prompt$ --dapr-grpc-port $Prompt$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 4. Use the folder where the `components` folder is located --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WORKING_DIRECTORY&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;$ProjectFileDir$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/exec&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/tool&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 1. Reusable entry for apps without app port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;tool&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dapr without app-port&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Dapr sidecar&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInMainMenu=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInEditor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInProject=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInSearchPopup=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">disabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">useConsole=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdOut=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdErr=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">synchronizeAfterRun=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;exec&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 2. For Linux or MacOS use: /usr/local/bin/dapr --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMMAND&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;c:\dapr\dapr.exe&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 3. Prompts user 3 times (in order): app id, Dapr&amp;#39;s http port, Dapr&amp;#39;s grpc port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PARAMETERS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;run --app-id $Prompt$ --dapr-http-port $Prompt$ --dapr-grpc-port $Prompt$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 4. Use the folder where the `components` folder is located --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WORKING_DIRECTORY&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;$ProjectFileDir$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/exec&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/tool&amp;gt;&lt;/span>
...
&lt;span style="color:#f92672">&amp;lt;/toolSet&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建或编辑运行配置">创建或编辑运行配置&lt;/h2>
&lt;p>现在，为要调试的应用程序创建或编辑运行配置。 它可以在&lt;code>main()&lt;/code>函数旁边的菜单中找到。&lt;/p>
&lt;p>&lt;img src="https://docs.dapr.io/images/intellij_debug_menu.png" alt="编辑运行的配置菜单">&lt;/p>
&lt;p>现在，添加程序参数和环境变量: 这些端口需要与上面 &amp;ldquo;External Tool &amp;ldquo;条目中定义的端口相匹配。&lt;/p>
&lt;ul>
&lt;li>本例的命令行参数：&lt;code>-p 3000&lt;/code>&lt;/li>
&lt;li>本例的环境变量：&lt;code>DAPR_HTTP_PORT=3005;DAPR_GRPC_PORT=52000&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://docs.dapr.io/images/intellij_edit_run_configuration.png" alt="编辑运行配置">&lt;/p>
&lt;h2 id="开始调试">开始调试&lt;/h2>
&lt;p>以上一次性配置完成后，在IntelliJ中使用Dapr调试Java应用程序需要两个步骤：&lt;/p>
&lt;ol>
&lt;li>通过 IntelliJ 中的 &lt;code>Tools&lt;/code> -&amp;gt; &lt;code>External Tool&lt;/code> 启动 &lt;code>dapr&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://docs.dapr.io/images/intellij_start_dapr.png" alt="作为“外部工具”运行 Dapr">&lt;/p>
&lt;ol start="2">
&lt;li>在调试模式下启动你的应用程序。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://docs.dapr.io/images/intellij_debug_app.png" alt="在调试模式下启动应用程序">&lt;/p>
&lt;h2 id="收尾">收尾&lt;/h2>
&lt;p>调试之后，你要确保同时停止了&lt;code>dapr&lt;/code>和你在IntelliJ中的应用。&lt;/p>
&lt;blockquote>
&lt;p>由于你使用 &lt;strong>dapr&lt;/strong> &lt;em>&lt;strong>run&lt;/strong>&lt;/em> CLI 命令启动服务。 &lt;strong>dapr&lt;/strong> &lt;em>&lt;strong>list&lt;/strong>&lt;/em>命令将在当前使用Dapr运行的应用程序列表中显示IntelliJ的运行情况。&lt;/p>
&lt;/blockquote>
&lt;p>调试愉快!&lt;/p>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://intellij-support.jetbrains.com/hc/en-us/articles/206544519-Directories-used-by-the-IDE-to-store-settings-caches-plugins-and-logs">https://intellij-support.jetbrains.com/hc/en-us/articles/206544519-Directories-used-by-the-IDE-to-store-settings-caches-plugins-and-logs&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Developing-Applications: 使用 GitHub Codespaces 开发</title><link>https://docs.dapr.io/developing-applications/ides/codespaces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/developing-applications/ides/codespaces/</guid><description>
&lt;p>&lt;a href="https://github.com/features/codespaces">GitHub Codespaces&lt;/a> 是启动和运行 Dapr 环境最简单的方式。 只需点击一下，您就可以在浏览器中准备好环境、包、代码、示例和文档。&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Private Beta&lt;/h4>
GitHub Codespaces目前处于内测阶段。 在 &lt;a href="https://github.com/features/codespaces/signup">这里&lt;/a> 注册。
&lt;/div>
&lt;h2 id="特性">特性&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>单击并运行&lt;/strong>: 获得一个专用和沙盒化的环境，并且所有所需的框架和包件已准备就绪。&lt;/li>
&lt;li>&lt;strong>基于使用情况的计费&lt;/strong>: 只为您在 Codespace 上花费的开发时间支付费用。 环境在不使用时自动关闭。&lt;/li>
&lt;li>&lt;strong>便携&lt;/strong>: 在您的浏览器或 Visual Studio Code 中运行&lt;/li>
&lt;/ul>
&lt;h2 id="在-codespace-中打开-dapr">在 Codespace 中打开 Dapr&lt;/h2>
&lt;p>要在 Codespace 中打开一个Dapr 仓库，只需从repo 主页中选择&amp;quot;Code&amp;quot;和&amp;quot;Open with Codespaces&amp;quot;：&lt;/p>
&lt;p>&lt;img src="https://docs.dapr.io/images/codespaces-create.png" alt="创建 Dapr Codespace 的截图" width="300" />&lt;/p>
&lt;h3 id="支持的-repo">支持的 Repo&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dapr/python-sdk">Python SDK&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/en/github/developing-online-with-codespaces/about-codespaces">GitHub 文档&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>