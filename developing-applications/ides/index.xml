<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr 中文文档 – IDE support</title><link>https://dapr-cn.github.io/docs/developing-applications/ides/</link><description>Recent content in IDE support on Dapr 中文文档</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dapr-cn.github.io/docs/developing-applications/ides/index.xml" rel="self" type="application/rss+xml"/><item><title>Developing-Applications: Visual Studio Code integrations with Dapr</title><link>https://dapr-cn.github.io/docs/developing-applications/ides/vscode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dapr-cn.github.io/docs/developing-applications/ides/vscode/</guid><description>
&lt;h2 id="extension">Extension&lt;/h2>
&lt;p>Dapr offers a &lt;em>preview&lt;/em> &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-dapr">Dapr Visual Studio Code extension&lt;/a> for local development and debugging of your Dapr applications.&lt;/p>
&lt;p>&lt;a href="vscode:extension/ms-azuretools.vscode-dapr" class="btn btn-primary" role="button">Open in VSCode&lt;/a>&lt;/p>
&lt;h3 id="feature-overview">Feature overview&lt;/h3>
&lt;ul>
&lt;li>Scaffold Dapr task, launch, and component assets &lt;br />&lt;img src="https://dapr-cn.github.io/docs/images/vscode-extension-scaffold.png" alt="Screenshot of the Dapr VSCode extension scaffold option" width="800" />&lt;/li>
&lt;li>View running Dapr applications &lt;br />&lt;img src="https://dapr-cn.github.io/docs/images/vscode-extension-view.png" alt="Screenshot of the Dapr VSCode extension view running applications option" width="800" />&lt;/li>
&lt;li>Invoke Dapr application methods &lt;br />&lt;img src="https://dapr-cn.github.io/docs/images/vscode-extension-invoke.png" alt="Screenshot of the Dapr VSCode extension invoke option" width="800" />&lt;/li>
&lt;li>Publish events to Dapr applications &lt;br />&lt;img src="https://dapr-cn.github.io/docs/images/vscode-extension-publish.png" alt="Screenshot of the Dapr VSCode extension publish option" width="800" />&lt;/li>
&lt;/ul>
&lt;h4 id="example">Example&lt;/h4>
&lt;p>Watch this &lt;a href="https://www.youtube.com/watch?v=OtbYCBt9C34&amp;amp;t=85">video&lt;/a> on how to use the Dapr VS Code extension: &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/OtbYCBt9C34?start=85" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/p>
&lt;h2 id="remote-dev-containers">Remote Dev Containers&lt;/h2>
&lt;p>The Visual Studio Code Remote Containers extension lets you use a Docker container as a full-featured development environment enabling you to &lt;a href="https://code.visualstudio.com/docs/remote/containers">develop inside a container&lt;/a> without installing any additional frameworks or packages to your local filesystem.&lt;/p>
&lt;p>Dapr has pre-built Docker remote containers for each of the language SDKs. You can pick the one of your choice for a ready made environment. Note these pre-built containers automatically update to the latest Dapr release.&lt;/p>
&lt;h3 id="setup-a-remote-dev-container">Setup a remote dev container&lt;/h3>
&lt;h4 id="prerequisites">Prerequisites&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.docker.com/products/docker-desktop">Docker Desktop&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aka.ms/vscode-remote/download/extension">VSCode Remote Development extension pack&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="create-remote-dapr-container">Create remote Dapr container&lt;/h4>
&lt;ol>
&lt;li>Open your application workspace in VS Code&lt;/li>
&lt;li>In the command command palette (ctrl+shift+p) type and select &lt;code>Remote-Containers: Add Development Container Configuration Files...&lt;/code> &lt;br />&lt;img src="https://dapr-cn.github.io/docs/images/vscode-remotecontainers-addcontainer.png" alt="Screenshot of adding a remote container" width="700" />&lt;/li>
&lt;li>Type &lt;code>dapr&lt;/code> to filter the list to available Dapr remote containers and choose the language container that matches your application. Note you may need to select &lt;code>Show All Definitions...&lt;/code> &lt;br />&lt;img src="https://dapr-cn.github.io/docs/images/vscode-remotecontainers-daprcontainers.png" alt="Screenshot of adding a Dapr container" width="700" />&lt;/li>
&lt;li>Follow the prompts to rebuild your application in container. &lt;br />&lt;img src="https://dapr-cn.github.io/docs/images/vscode-remotecontainers-reopen.png" alt="Screenshot of reopening an application in the dev container" width="700" />&lt;/li>
&lt;/ol>
&lt;h4 id="example-1">Example&lt;/h4>
&lt;p>Watch this &lt;a href="https://www.youtube.com/watch?v=D2dO4aGpHcg&amp;amp;t=120">video&lt;/a> on how to use the Dapr VS Code Remote Containers with your application. &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/D2dO4aGpHcg?start=120" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="debugging-multiple-dapr-applications-at-the-same-time">Debugging multiple Dapr applications at the same time&lt;/h3>
&lt;p>Using the VS Code extension you can debug multiple Dapr applications at the same time with &lt;a href="https://code.visualstudio.com/docs/editor/debugging#_multitarget-debugging">Multi-target debugging&lt;/a>&lt;/p>
&lt;h3 id="manually-configuring-visual-studio-code-for-debugging-with-daprd">Manually configuring Visual Studio Code for debugging with daprd&lt;/h3>
&lt;p>If instead of using the Dapr VS Code extension you wish to configure a project to use Dapr in the &lt;a href="https://code.visualstudio.com/Docs/editor/tasks">tasks.json&lt;/a> and &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">launch.json&lt;/a> files these are the manual steps.&lt;/p>
&lt;p>When developing Dapr applications, you typically use the dapr cli to start your daprized service similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --app-id nodeapp --app-port &lt;span style="color:#ae81ff">3000&lt;/span> --dapr-http-port &lt;span style="color:#ae81ff">3500&lt;/span> app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will generate the components yaml files (if they don&amp;rsquo;t exist) so that your service can interact with the local redis container. This is great when you are just getting started but what if you want to attach a debugger to your service and step through the code? This is where you can use the dapr runtime (daprd) to help facilitate this.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The dapr runtime (daprd) will not automatically generate the components yaml files for Redis. These will need to be created manually or you will need to run the dapr cli (dapr) once in order to have them created automatically.
&lt;/div>
&lt;p>One approach to attaching the debugger to your service is to first run daprd with the correct arguments from the command line and then launch your code and attach the debugger. While this is a perfectly acceptable solution, it does require a few extra steps and some instruction to developers who might want to clone your repo and hit the &amp;ldquo;play&amp;rdquo; button to begin debugging.&lt;/p>
&lt;p>Using the &lt;a href="https://code.visualstudio.com/Docs/editor/tasks">tasks.json&lt;/a> and &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">launch.json&lt;/a> files in Visual Studio Code, you can simplify the process and request that VS Code kick off the daprd process prior to launching the debugger.&lt;/p>
&lt;p>Let&amp;rsquo;s get started!&lt;/p>
&lt;h4 id="modifying-launchjson-configurations-to-include-a-prelaunchtask">Modifying launch.json configurations to include a preLaunchTask&lt;/h4>
&lt;p>In your &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">launch.json&lt;/a> file add a &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTask&lt;/a> for each configuration that you want daprd launched. The &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTask&lt;/a> will reference tasks that you define in your tasks.json file. Here is an example for both Node and .NET Core. Notice the &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTasks&lt;/a> referenced: daprd-web and daprd-leaderboard.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0.2.0&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;configurations&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;node&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;launch&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Node Launch w/Dapr (Web)&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;preLaunchTask&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-web&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;program&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Web/server.js&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;skipFiles&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;&amp;lt;node_internals&amp;gt;/**&amp;#34;&lt;/span>
]
},
{
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;coreclr&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;launch&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;.NET Core Launch w/Dapr (LeaderboardService)&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;preLaunchTask&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-leaderboard&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;program&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Services/LeaderboardService/bin/Debug/netcoreapp3.0/LeaderboardService.dll&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [],
&lt;span style="color:#f92672">&amp;#34;cwd&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Services/LeaderboardService&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;stopAtEntry&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;serverReadyAction&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;action&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;openExternally&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;pattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^\\s*Now listening on:\\s+(https?://\\S+)&amp;#34;&lt;/span>
},
&lt;span style="color:#f92672">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;ASPNETCORE_ENVIRONMENT&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Development&amp;#34;&lt;/span>
},
&lt;span style="color:#f92672">&amp;#34;sourceFileMap&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;/Views&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Views&amp;#34;&lt;/span>
}
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="adding-daprd-tasks-to-tasksjson">Adding daprd tasks to tasks.json&lt;/h4>
&lt;p>You will need to define a task and problem matcher for daprd in your &lt;a href="https://code.visualstudio.com/Docs/editor/tasks">tasks.json&lt;/a> file. Here are two examples (both referenced via the &lt;a href="https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes">preLaunchTask&lt;/a> members above). Notice that in the case of the .NET Core daprd task (daprd-leaderboard) there is also a &lt;a href="https://code.visualstudio.com/Docs/editor/tasks#_compound-tasks">dependsOn&lt;/a> member that references the build task to ensure the latest code is being run/debugged. The &lt;a href="https://code.visualstudio.com/Docs/editor/tasks#_defining-a-problem-matcher">problemMatcher&lt;/a> is used so that VSCode can understand when the daprd process is up and running.&lt;/p>
&lt;p>Let&amp;rsquo;s take a quick look at the args that are being passed to the daprd command.&lt;/p>
&lt;ul>
&lt;li>-app-id &amp;ndash; the id (how you will locate it via service invocation) of your microservice&lt;/li>
&lt;li>-app-port &amp;ndash; the port number that your application code is listening on&lt;/li>
&lt;li>-dapr-http-port &amp;ndash; the http port for the dapr api&lt;/li>
&lt;li>-dapr-grpc-port &amp;ndash; the grpc port for the dapr api&lt;/li>
&lt;li>-placement-host-address &amp;ndash; the location of the placement service (this should be running in docker as it was created when you installed dapr and ran &lt;code>dapr init&lt;/code>)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Note: You will need to ensure that you specify different http/grpc (-dapr-http-port and -dapr-grpc-port) ports for each daprd task that you create, otherwise you will run into port conflicts when you attempt to launch the second configuration.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.0.0&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;tasks&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;label&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;dotnet&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;process&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;${workspaceFolder}/Game/Services/LeaderboardService/LeaderboardService.csproj&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;/property:GenerateFullPaths=true&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;/consoleloggerparameters:NoSummary&amp;#34;&lt;/span>
],
&lt;span style="color:#f92672">&amp;#34;problemMatcher&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;$msCompile&amp;#34;&lt;/span>
},
{
&lt;span style="color:#f92672">&amp;#34;label&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-web&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;-app-id&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;whac-a-mole--web&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-app-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;3000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-http-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;51000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-grpc-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;52000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-placement-host-address&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;localhost:50005&amp;#34;&lt;/span>
],
&lt;span style="color:#f92672">&amp;#34;isBackground&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;problemMatcher&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;pattern&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;regexp&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;file&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
}
],
&lt;span style="color:#f92672">&amp;#34;background&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;beginsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*starting Dapr Runtime.*&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;endsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*waiting on port.*&amp;#34;&lt;/span>
}
}
},
{
&lt;span style="color:#f92672">&amp;#34;label&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd-leaderboard&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;daprd&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [
&lt;span style="color:#e6db74">&amp;#34;-app-id&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;whac-a-mole--leaderboard&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-app-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;5000&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-http-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;51001&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-dapr-grpc-port&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;52001&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;-placement-host-address&amp;#34;&lt;/span>,
&lt;span style="color:#e6db74">&amp;#34;localhost:50005&amp;#34;&lt;/span>
],
&lt;span style="color:#f92672">&amp;#34;isBackground&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;problemMatcher&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;pattern&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;regexp&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;file&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
}
],
&lt;span style="color:#f92672">&amp;#34;background&amp;#34;&lt;/span>: {
&lt;span style="color:#f92672">&amp;#34;beginsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*starting Dapr Runtime.*&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;endsPattern&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^.*waiting on port.*&amp;#34;&lt;/span>
}
},
&lt;span style="color:#f92672">&amp;#34;dependsOn&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="wrapping-up">Wrapping up&lt;/h4>
&lt;p>Once you have made the required changes, you should be able to switch to the &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">debug&lt;/a> view in VSCode and launch your daprized configurations by clicking the &amp;ldquo;play&amp;rdquo; button. If everything was configured correctly, you should see daprd launch in the VSCode terminal window and the &lt;a href="https://code.visualstudio.com/Docs/editor/debugging">debugger&lt;/a> should attach to your application (you should see it&amp;rsquo;s output in the debug window).&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Since you didn&amp;rsquo;t launch the service(s) using the &lt;strong>dapr&lt;/strong> &lt;em>&lt;strong>run&lt;/strong>&lt;/em> cli command, but instead by running &lt;strong>daprd&lt;/strong>, the &lt;strong>dapr&lt;/strong> &lt;em>&lt;strong>list&lt;/strong>&lt;/em> command will not show a list of apps that are currently running.
&lt;/div></description></item><item><title>Developing-Applications: IntelliJ</title><link>https://dapr-cn.github.io/docs/developing-applications/ides/intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dapr-cn.github.io/docs/developing-applications/ides/intellij/</guid><description>
&lt;p>When developing Dapr applications, you typically use the Dapr CLI to start your &amp;lsquo;Daprized&amp;rsquo; service similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --app-id nodeapp --app-port &lt;span style="color:#ae81ff">3000&lt;/span> --dapr-http-port &lt;span style="color:#ae81ff">3500&lt;/span> app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This uses the default components yaml files (created on &lt;code>dapr init&lt;/code>) so that your service can interact with the local Redis container. This is great when you are just getting started but what if you want to attach a debugger to your service and step through the code? This is where you can use the dapr cli without invoking an app.&lt;/p>
&lt;p>One approach to attaching the debugger to your service is to first run &lt;code>dapr run --&lt;/code> from the command line and then launch your code and attach the debugger. While this is a perfectly acceptable solution, it does require a few extra steps (like switching between terminal and IDE) and some instruction to developers who might want to clone your repo and hit the &amp;ldquo;play&amp;rdquo; button to begin debugging.&lt;/p>
&lt;p>This document explains how to use &lt;code>dapr&lt;/code> directly from IntelliJ. As a pre-requisite, make sure you have initialized the Dapr&amp;rsquo;s dev environment via &lt;code>dapr init&lt;/code>.&lt;/p>
&lt;p>Let&amp;rsquo;s get started!&lt;/p>
&lt;h2 id="add-dapr-as-an-external-tool">Add Dapr as an &amp;lsquo;External Tool&amp;rsquo;&lt;/h2>
&lt;p>First, quit IntelliJ.&lt;/p>
&lt;p>Create or edit the file in &lt;code>$HOME/.IdeaIC2019.3/config/tools/External\ Tools.xml&lt;/code> (change IntelliJ version in path if needed) to add a new &lt;code>&amp;lt;tool&amp;gt;&amp;lt;/tool&amp;gt;&lt;/code> entry:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#f92672">&amp;lt;toolSet&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;External Tools&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
...
&lt;span style="color:#75715e">&amp;lt;!-- 1. Each tool has its own app-id, so create one per application to be debugged --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;tool&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dapr for DemoService in examples&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Dapr sidecar&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInMainMenu=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInEditor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInProject=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInSearchPopup=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">disabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">useConsole=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdOut=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdErr=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">synchronizeAfterRun=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;exec&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 2. For Linux or MacOS use: /usr/local/bin/daprd --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMMAND&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;C:\dapr\daprd.exe&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 3. Choose app, http and grpc ports that do not conflict with other daprd command entries (placement address should not change). --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PARAMETERS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-app-id demoservice -app-port 3000 -dapr-http-port 3005 -dapr-grpc-port 52000 -placement-host-address localhost:50005&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 4. Use the folder where the `components` folder is located --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WORKING_DIRECTORY&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;C:/Code/dapr/java-sdk/examples&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/exec&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/tool&amp;gt;&lt;/span>
...
&lt;span style="color:#f92672">&amp;lt;/toolSet&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Optionally, you may also create a new entry for a sidecar tool that can be reused accross many projects:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#f92672">&amp;lt;toolSet&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;External Tools&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
...
&lt;span style="color:#75715e">&amp;lt;!-- 1. Reusable entry for apps with app port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;tool&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dapr with app-port&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Dapr sidecar&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInMainMenu=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInEditor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInProject=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInSearchPopup=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">disabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">useConsole=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdOut=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdErr=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">synchronizeAfterRun=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;exec&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 2. For Linux or MacOS use: /usr/bin/dapr --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMMAND&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;c:\dapr\dapr.exe&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 3. Prompts user 4 times (in order): app id, app port, Dapr&amp;#39;s http port, Dapr&amp;#39;s grpc port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PARAMETERS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;run --app-id $Prompt$ --app-port $Prompt$ --dapr-http-port $Prompt$ --dapr-grpc-port $Prompt$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 4. Use the folder where the `components` folder is located --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WORKING_DIRECTORY&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;$ProjectFileDir$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/exec&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/tool&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 1. Reusable entry for apps without app port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;tool&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dapr without app-port&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Dapr sidecar&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInMainMenu=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInEditor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInProject=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showInSearchPopup=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">disabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">useConsole=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdOut=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">showConsoleOnStdErr=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">synchronizeAfterRun=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;exec&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 2. For Linux or MacOS use: /usr/bin/dapr --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMMAND&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;c:\dapr\dapr.exe&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 3. Prompts user 3 times (in order): app id, Dapr&amp;#39;s http port, Dapr&amp;#39;s grpc port. --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PARAMETERS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;run --app-id $Prompt$ --dapr-http-port $Prompt$ --dapr-grpc-port $Prompt$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#75715e">&amp;lt;!-- 4. Use the folder where the `components` folder is located --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;option&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WORKING_DIRECTORY&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;$ProjectFileDir$&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/exec&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/tool&amp;gt;&lt;/span>
...
&lt;span style="color:#f92672">&amp;lt;/toolSet&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-or-edit-run-configuration">Create or edit run configuration&lt;/h2>
&lt;p>Now, create or edit the run configuration for the application to be debugged. It can be found in the menu next to the &lt;code>main()&lt;/code> function.&lt;/p>
&lt;p>&lt;img src="https://dapr-cn.github.io/docs/images/intellij_debug_menu.png" alt="Edit run configuration menu">&lt;/p>
&lt;p>Now, add the program arguments and environment variables. These need to match the ports defined in the entry in &amp;lsquo;External Tool&amp;rsquo; above.&lt;/p>
&lt;ul>
&lt;li>Command line arguments for this example: &lt;code>-p 3000&lt;/code>&lt;/li>
&lt;li>Environment variables for this example: &lt;code>DAPR_HTTP_PORT=3005;DAPR_GRPC_PORT=52000&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://dapr-cn.github.io/docs/images/intellij_edit_run_configuration.png" alt="Edit run configuration">&lt;/p>
&lt;h2 id="start-debugging">Start debugging&lt;/h2>
&lt;p>Once the one-time config above is done, there are two steps required to debug a Java application with Dapr in IntelliJ:&lt;/p>
&lt;ol>
&lt;li>Start &lt;code>dapr&lt;/code> via &lt;code>Tools&lt;/code> -&amp;gt; &lt;code>External Tool&lt;/code> in IntelliJ.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://dapr-cn.github.io/docs/images/intellij_start_dapr.png" alt="Run dapr as &amp;lsquo;External Tool&amp;rsquo;">&lt;/p>
&lt;ol start="2">
&lt;li>Start your application in debug mode.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://dapr-cn.github.io/docs/images/intellij_debug_app.png" alt="Start application in debug mode">&lt;/p>
&lt;h2 id="wrapping-up">Wrapping up&lt;/h2>
&lt;p>After debugging, make sure you stop both &lt;code>dapr&lt;/code> and your app in IntelliJ.&lt;/p>
&lt;blockquote>
&lt;p>Note: Since you launched the service(s) using the &lt;strong>dapr&lt;/strong> &lt;em>&lt;strong>run&lt;/strong>&lt;/em> CLI command, the &lt;strong>dapr&lt;/strong> &lt;em>&lt;strong>list&lt;/strong>&lt;/em> command will show runs from IntelliJ in the list of apps that are currently running with Dapr.&lt;/p>
&lt;/blockquote>
&lt;p>Happy debugging!&lt;/p></description></item></channel></rss>