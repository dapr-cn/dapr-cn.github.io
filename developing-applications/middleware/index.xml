<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr 文档库 – 中间件</title><link>https://docs.dapr.io/developing-applications/middleware/</link><description>Recent content in 中间件 on Dapr 文档库</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.dapr.io/developing-applications/middleware/index.xml" rel="self" type="application/rss+xml"/><item><title>Developing-Applications: 概述</title><link>https://docs.dapr.io/developing-applications/middleware/middleware-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/developing-applications/middleware/middleware-overview/</guid><description>
&lt;p>Dapr 允许通过链接一系列中间件组件来定义自定义处理管道。 Dapr配置文件中定义了中件管道。 与其他&lt;a href="https://docs.dapr.io/operations/components/component-schema/">构建块组件&lt;/a>一样，中间件组件是可扩展的，可以在&lt;a href="https://github.com/dapr/components-contrib/tree/master/middleware/http">components-contrib repo&lt;/a>中找到。&lt;/p>
&lt;p>Dapr中的中间件使用&lt;code>Component&lt;/code>文件描述，其schema如下:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Component&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;COMPONENT NAME&amp;gt;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;NAMESPACE&amp;gt;&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">middleware.http.&amp;lt;MIDDLEWARE TYPE&amp;gt;&lt;/span>
&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;KEY&amp;gt;&lt;/span>
&lt;span style="color:#f92672">value&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;VALUE&amp;gt;&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;KEY&amp;gt;&lt;/span>
&lt;span style="color:#f92672">value&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;VALUE&amp;gt;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>中间件类型由 &lt;code>type&lt;/code> 字段决定。 组件设置值，如速率限制，OAuth 凭据和其他设置被放入 &lt;code>metadata&lt;/code> 部分。 即使元数据值可以在纯文本中包含密钥，但建议您使用一个 &lt;a href="https://docs.dapr.io/operations/components/component-secrets/">密钥存储&lt;/a>。&lt;/p>
&lt;p>接下来，一个 Dapr &lt;a href="https://docs.dapr.io/operations/configuration/configuration-overview/">配置&lt;/a> 定义了您应用程序的中间件组件管道.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">httpPipeline&lt;/span>:
&lt;span style="color:#f92672">handlers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;COMPONENT NAME&amp;gt;&lt;/span>
&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">middleware.http.&amp;lt;MIDDLEWARE TYPE&amp;gt;&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;COMPONENT NAME&amp;gt;&lt;/span>
&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">middleware.http.&amp;lt;MIDDLEWARE TYPE&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编写自定义中间件">编写自定义中间件&lt;/h2>
&lt;p>Dapr 使用 &lt;a href="https://github.com/valyala/fasthttp">FastHTTP&lt;/a> 来实现其的 HTTP 服务器。 因此，您的 HTTP 中间件也需要编写为 FastHTTP handler。 您的中间件需要实现 Middleware 接口，该接口定义 &lt;strong>GetHandler&lt;/strong> 方法，该方法返回 &lt;strong>fasthttp.RequestHandler&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Middleware&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;span style="color:#a6e22e">GetHandler&lt;/span>(&lt;span style="color:#a6e22e">metadata&lt;/span> &lt;span style="color:#a6e22e">Metadata&lt;/span>) (&lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">h&lt;/span> &lt;span style="color:#a6e22e">fasthttp&lt;/span>.&lt;span style="color:#a6e22e">RequestHandler&lt;/span>) &lt;span style="color:#a6e22e">fasthttp&lt;/span>.&lt;span style="color:#a6e22e">RequestHandler&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>您的 handler 实现可以包含任何入站（inbound）逻辑和出站（outbound）逻辑或两者兼有：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">GetHandler&lt;/span>(&lt;span style="color:#a6e22e">metadata&lt;/span> &lt;span style="color:#a6e22e">Metadata&lt;/span>) &lt;span style="color:#a6e22e">fasthttp&lt;/span>.&lt;span style="color:#a6e22e">RequestHandler&lt;/span> {
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">h&lt;/span> &lt;span style="color:#a6e22e">fasthttp&lt;/span>.&lt;span style="color:#a6e22e">RequestHandler&lt;/span>) &lt;span style="color:#a6e22e">fasthttp&lt;/span>.&lt;span style="color:#a6e22e">RequestHandler&lt;/span> {
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">fasthttp&lt;/span>.&lt;span style="color:#a6e22e">RequestCtx&lt;/span>) {
&lt;span style="color:#75715e">// inboud logic
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">h&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>) &lt;span style="color:#75715e">// call the downstream handler
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// outbound logic
&lt;/span>&lt;span style="color:#75715e">&lt;/span> }
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加新的中间件组件">添加新的中间件组件&lt;/h2>
&lt;p>您的中间件组件可以贡献到 &lt;a href="https://github.com/dapr/components-contrib/tree/master/middleware">components-contrib 仓库&lt;/a>。&lt;/p>
&lt;p>在接受了 components-contrib 变更后，针对 &lt;a href="https://github.com/dapr/dapr">Dapr 运行时仓库&lt;/a> 提交另一个 pull 请求，以注册新的中间件类型。 您需要修改&lt;a href="https://github.com/dapr/dapr/blob/f4d50b1369e416a8f7b93e3e226c4360307d1313/cmd/daprd/main.go#L394-L424">runtime.WithHTTPMiddleware&lt;/a>&lt;/strong>方法中的**&lt;a href="https://github.com/dapr/dapr/blob/master/cmd/daprd/main.go">cmd/daprd/main.go&lt;/a>方法，将您的中间件注册到Dapr的运行时。&lt;/p>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/concepts/middleware-concept/">中件管道概念&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/operations/components/component-schema/">组件schema&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/operations/configuration/configuration-overview/">配置概览&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dapr/quickstarts/tree/master/middleware">中间件快速入门&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Developing-Applications: 支持的中间件</title><link>https://docs.dapr.io/developing-applications/middleware/supported-middleware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/developing-applications/middleware/supported-middleware/</guid><description>
&lt;h3 id="http">HTTP&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>状态 （Status）&lt;/th>
&lt;th>组件版本(Component version)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-rate-limit/">Rate limit&lt;/a>&lt;/td>
&lt;td>限制每秒允许的 HTTP 请求的最大数量&lt;/td>
&lt;td>Alpha&lt;/td>
&lt;td>v1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-oauth2/">OAuth2&lt;/a>&lt;/td>
&lt;td>在Web API上启用&lt;a href="https://tools.ietf.org/html/rfc6749#section-4.1">OAuth2授权授权流程&lt;/a>&lt;/td>
&lt;td>Alpha&lt;/td>
&lt;td>v1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-oauth2clientcredentials/">OAuth2 client credentials&lt;/a>&lt;/td>
&lt;td>在Web API上启用&lt;a href="https://tools.ietf.org/html/rfc6749#section-4.4">OAuth2客户端凭证授予流程&lt;/a>&lt;/td>
&lt;td>Alpha&lt;/td>
&lt;td>v1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-bearer/">Bearer&lt;/a>&lt;/td>
&lt;td>使用 &lt;a href="https://tools.ietf.org/html/rfc6750">OpenID Connect&lt;/a>在 Web API 上验证 &lt;a href="https://openid.net/connect/">Bearer Token&lt;/a>&lt;/td>
&lt;td>Alpha&lt;/td>
&lt;td>v1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-opa/">Open Policy Agent&lt;/a>&lt;/td>
&lt;td>将&lt;a href="https://www.openpolicyagent.org/">Rego/OPA策略&lt;/a>应用到传入的Dapr HTTP请求中&lt;/td>
&lt;td>Alpha&lt;/td>
&lt;td>v1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-uppercase/">Uppercase&lt;/a>&lt;/td>
&lt;td>将请求的正文转换为大写字母&lt;/td>
&lt;td>GA (For local development)&lt;/td>
&lt;td>v1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item></channel></rss>