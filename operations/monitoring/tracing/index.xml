<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr 文档库 – Tracing（调用链追踪）</title><link>https://docs.dapr.io/operations/monitoring/tracing/</link><description>Recent content in Tracing（调用链追踪） on Dapr 文档库</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.dapr.io/operations/monitoring/tracing/index.xml" rel="self" type="application/rss+xml"/><item><title>Operations: Configure Dapr to send distributed tracing data</title><link>https://docs.dapr.io/operations/monitoring/tracing/setup-tracing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/monitoring/tracing/setup-tracing/</guid><description>
&lt;p>It is recommended to run Dapr with tracing enabled for any production scenario. You can configure Dapr to send tracing and telemetry data to many backends based on your environment, whether it is running in the cloud or on-premises.&lt;/p>
&lt;h2 id="tracing-configuration">Tracing configuration&lt;/h2>
&lt;p>&lt;code>Configuration&lt;/code> sepc下的 &lt;code>tracing&lt;/code> 部分包含以下属性：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">zipkin&lt;/span>:
&lt;span style="color:#f92672">endpointAddress&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://...&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的表格给出了调用链追踪功能可配置的属性&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>samplingRate&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>设置采样率，可以用来控制追踪功能是否开启。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>zipkin.endpointAddress&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>设置 Zipkin 服务器地址。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="zipkin-in-self-hosted-mode">Zipkin in self hosted mode&lt;/h2>
&lt;p>The following steps show you how to configure Dapr to send distributed tracing data to Zipkin running as a container on your local machine and view them.&lt;/p>
&lt;p>For self hosted mode, create a Dapr configuration file locally and reference it with the Dapr CLI.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create the following &lt;code>config.yaml&lt;/code> YAML file:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">zipkin&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">zipkin&lt;/span>:
&lt;span style="color:#f92672">endpointAddress&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;http://localhost:9411/api/v2/spans&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Launch Zipkin using Docker:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker run -d -p 9411:9411 openzipkin/zipkin
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Launch Dapr with the &lt;code>--config&lt;/code> param with the path for where the &lt;code>config.yaml&lt;/code> is saved :&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --app-id mynode --app-port &lt;span style="color:#ae81ff">3000&lt;/span> --config ./config.yaml node app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="zipkin-in-kubernetes-mode">Zipkin in Kubernetes mode&lt;/h2>
&lt;p>The following steps show you how to configure Dapr to send distributed tracing data to Zipkin running as a container in your Kubernetes cluster, and how to view them.&lt;/p>
&lt;h3 id="设置">设置&lt;/h3>
&lt;p>First, deploy Zipkin:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl create deployment zipkin --image openzipkin/zipkin
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a Kubernetes Service for the Zipkin pod:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl expose deployment zipkin --type ClusterIP --port &lt;span style="color:#ae81ff">9411&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来，在本地创建以下YAML文件：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">zipkin&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">zipkin&lt;/span>:
&lt;span style="color:#f92672">endpointAddress&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;http://zipkin.default.svc.cluster.local:9411/api/v2/spans&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, deploy the Dapr configuration:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f config.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为了启用您的 Dapr sidecar 的配置，请在您的pod spec模板中添加以下注释：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;zipkin&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>就这么简单！ Your sidecar is now configured for use with Zipkin.&lt;/p>
&lt;h3 id="查看追踪数据">查看追踪数据&lt;/h3>
&lt;p>To view traces, connect to the Zipkin service and open the UI:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl port-forward svc/zipkin 9411:9411
&lt;/code>&lt;/pre>&lt;/div>&lt;p>On your browser, go to &lt;code>http://localhost:9411&lt;/code> and you should see the Zipkin UI.&lt;/p>
&lt;p>&lt;img src="https://docs.dapr.io/images/zipkin_ui.png" alt="zipkin">&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zipkin.io/">Zipkin for distributed tracing&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: 使用 OpenTelemetry Collector 来收集应用痕迹</title><link>https://docs.dapr.io/operations/monitoring/tracing/open-telemetry-collector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/monitoring/tracing/open-telemetry-collector/</guid><description>
&lt;p>当 OpenTelemetry 项目进入到 GA（General Availability, 正式发布的版本）阶段时，Dapr 将会以 OpenTelemetry 的格式规范导出应用的痕迹信息。 同时，可以使用 Zipkin 要求的格式导出应用痕迹信息。 与 &lt;a href="https://github.com/open-telemetry/opentelemetry-collector">OpenTelemetry Collector&lt;/a> 结合一起使用，你可以将应用的痕迹信息发送到许多流行的分布式追踪后端程序中（例如 Azure AppInsights，AWS X-Ray ，StackDriver 等）&lt;/p>
&lt;p>&lt;img src="https://docs.dapr.io/images/open-telemetry-collector.png" alt="使用 OpenTelemetry 收集器与别的后端进行集成">&lt;/p>
&lt;h2 id="必备条件">必备条件&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>在 Kubernetes 上安装 Dapr&lt;/p>
&lt;/li>
&lt;li>
&lt;p>您已经设置好了分布式追踪后端程序用以接受应用痕迹信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击 &lt;a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter">这里&lt;/a> 和 &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter">这里&lt;/a> 去查看你的分布式追踪程序是否支持 OpenTelemetry Collector。 在这些外链的页面上，找到您要使用的应用痕迹导出工具，并阅读其文档以查找所需的参数。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="使用-opentelemetry-collector">使用 OpenTelemetry Collector&lt;/h2>
&lt;h3 id="运行-opentelemetry-collector-推送到您的分布式应用跟踪后端程序">运行 OpenTelemetry Collector 推送到您的分布式应用跟踪后端程序&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>签出这个文件 &lt;a href="https://docs.dapr.io/docs/open-telemetry-collector/open-telemetry-collector-generic.yaml">open-telemetry-collector-generic.yaml&lt;/a> 并将标记为 &lt;code>&amp;lt;your-exporter-here&amp;gt;&lt;/code> 的部分替换成您正在正确使用的追踪导出器的设置。 再次提醒，请参阅前提条件中的关于 OpenTelemetry Collector 的链接以确定您的设置是正确的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>kubectl apply -f open-telemetry-collector-generic.yaml&lt;/code> 来应用配置。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="设置-dapr-从而将应用痕迹信息发送到-opentelemetry-collector">设置 Dapr 从而将应用痕迹信息发送到 OpenTelemetry Collector&lt;/h2>
&lt;h3 id="在-dapr-中启用应用痕迹追踪功能">在 Dapr 中启用应用痕迹追踪功能&lt;/h3>
&lt;p>接下来，设置 Dapr 的配置文件以启用应用分布式追踪并部署一个使用 OpenTelemetry Collector 的应用追踪信息导出组件。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>创建具有&lt;a href="https://docs.dapr.io/docs/open-telemetry-collector/collector-config.yaml">此内容的&lt;/a> 的 collector-config.yaml 文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>kubectl apply -f collector-config.yaml&lt;/code>来应用配置&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="部署你的应用并启用应用跟踪功能">部署你的应用，并启用应用跟踪功能&lt;/h3>
&lt;p>在 Kubernetes 模式下运行时，通过将&lt;code>dapr.io/config&lt;/code>注解添加到要参与分布式跟踪的容器中，从而来应用&lt;code>appconfig&lt;/code>配置，示例配置如下所示&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#ae81ff">...&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#ae81ff">...&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#ae81ff">...&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;MyApp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;8080&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;appconfig&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一些快速入门案例，例如&lt;a href="https://github.com/dapr/quickstarts/tree/master/distributed-calculator">分布式计算器&lt;/a>已经配置了这些设置，因此，如果您在使用这些时，则不需要进行其他的设置&lt;/p>
&lt;p>就这么简单！ 没有必要包含任何的 SDK 或分析您的应用程序代码来确定是否能够支持。 Dapr 自动为您的程序负责了分布式跟踪。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>备注&lt;/strong>: 您可以同时注册多个的应用痕迹跟踪导出器，并且跟踪日志转发到所有已注册的导出器中。&lt;/p>
&lt;/blockquote>
&lt;p>部署并运行一些应用程序。 等待应用痕迹信息推送到您的分布式跟踪后端中，并在那里查看它们。&lt;/p>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;ul>
&lt;li>尝试访问&lt;a href="https://github.com/dapr/quickstarts/tree/master/observability/README.md">可观察性快速入门&lt;/a>&lt;/li>
&lt;li>如何设置&lt;a href="https://docs.dapr.io/operations/configuration/configuration-overview/#tracing">应用跟踪配置选项&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: 使用 OpenTelemetry Collector 来收集追踪信息，发送至 AppInsights</title><link>https://docs.dapr.io/operations/monitoring/tracing/open-telemetry-collector-appinsights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/monitoring/tracing/open-telemetry-collector-appinsights/</guid><description>
&lt;p>Dapr 使用 Zipkin API 与&lt;a href="https://github.com/open-telemetry/opentelemetry-collector">OpenTelemetry Collector &lt;/a> 进行集成。 本指南通过一个示例，使用 Dapr 通过 OpenTelemetry Collector 将跟踪事件推送到 Azure Application Insights。&lt;/p>
&lt;h2 id="必备条件">必备条件&lt;/h2>
&lt;p>在 Kubernetes 上安装 Dapr&lt;/p>
&lt;h2 id="如何配置分布式跟踪与-application-insights">如何配置分布式跟踪与 Application Insights&lt;/h2>
&lt;h3 id="设置-application-insights">设置 Application Insights&lt;/h3>
&lt;ol>
&lt;li>首先，您需要一个 Azure 帐户。 请参阅 &lt;a href="https://azure.microsoft.com/free/">此处&lt;/a> 申请 &lt;strong>免费&lt;/strong> Azure 帐户的说明。&lt;/li>
&lt;li>请按照 &lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/app/create-new-resource">此处&lt;/a> 的说明创建新的 Application Insights 资源。&lt;/li>
&lt;li>从 Application Insights 页面获取 Application Insights Intrumentation key。&lt;/li>
&lt;/ol>
&lt;h3 id="运行-opentelemetry-collector-来推送到您的-application-insights-实例">运行 OpenTelemetry Collector 来推送到您的 Application Insights 实例&lt;/h3>
&lt;p>安装 OpenTelemetry Collector 到您的 Kubernetes 集群，将事件推送到 Application Insights 实例中&lt;/p>
&lt;ol>
&lt;li>
&lt;p>查看 &lt;a href="https://docs.dapr.io/docs/open-telemetry-collector/open-telemetry-collector-appinsights.yaml">open-telemetry-collector-appinsights.yaml&lt;/a>文件 ，用您的 Application Insights Instrumentation key替换 &lt;code>&amp;lt;INSTRUMENTATION-KEY&amp;gt;&lt;/code> 占位符。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>kubectl apply -f open-telemetry-collector-appinsights.yaml&lt;/code> 来应用配置。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>接下来，设置 Dapr 的配置文件以启用应用分布式追踪并部署一个使用 OpenTelemetry Collector 的应用追踪信息导出组件。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>创建具有&lt;a href="https://docs.dapr.io/docs/open-telemetry-collector/collector-config.yaml">此内容的&lt;/a> 的 collector-config.yaml 文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>kubectl apply -f collector-config.yaml&lt;/code>来应用配置&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="部署你的应用并启用应用跟踪功能">部署你的应用，并启用应用跟踪功能&lt;/h3>
&lt;p>在 Kubernetes 模式下运行时，通过将&lt;code>dapr.io/config&lt;/code>注解添加到要参与分布式跟踪的容器中，从而来应用&lt;code>appconfig&lt;/code>配置，示例配置如下所示&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#ae81ff">...&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#ae81ff">...&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#ae81ff">...&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;MyApp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;8080&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;appconfig&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一些快速入门案例，例如&lt;a href="https://github.com/dapr/quickstarts/tree/master/distributed-calculator">分布式计算器&lt;/a>已经配置了这些设置，因此，如果您在使用这些时，则不需要进行其他的设置&lt;/p>
&lt;p>就这么简单！ 没有必要包含任何的 SDK 或分析您的应用程序代码来确定是否能够支持。 Dapr 自动为您的程序负责了分布式跟踪。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>备注&lt;/strong>: 您可以同时注册多个的应用痕迹跟踪导出器，并且跟踪日志转发到所有已注册的导出器中。&lt;/p>
&lt;/blockquote>
&lt;p>部署并运行一些应用程序。 几分钟后，您应该看到在 Application Insights 资源中出现追踪日志。 您也可以使用 &lt;strong>Application Map&lt;/strong> 来检查您服务的拓扑，如下所示：&lt;/p>
&lt;p>&lt;img src="https://docs.dapr.io/images/open-telemetry-app-insights.png" alt="Application map">&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>注&lt;/strong>：只有通过 Dapr sidecar 暴露的 Dapr API 操作（如服务调用或事件发布）才会显示在 Application Map 拓扑中。&lt;/p>
&lt;/blockquote>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;ul>
&lt;li>尝试访问&lt;a href="https://github.com/dapr/quickstarts/tree/master/observability/README.md">可观察性快速入门&lt;/a>&lt;/li>
&lt;li>如何设置&lt;a href="https://docs.dapr.io/operations/configuration/configuration-overview/#tracing">应用跟踪配置选项&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: 常见追踪后端</title><link>https://docs.dapr.io/operations/monitoring/tracing/supported-tracing-backends/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/monitoring/tracing/supported-tracing-backends/</guid><description/></item></channel></rss>