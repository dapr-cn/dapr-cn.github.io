<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr 中文文档 – 指标</title><link>https://dapr-cn.github.io/operations/monitoring/metrics/</link><description>Recent content in 指标 on Dapr 中文文档</description><generator>Hugo -- gohugo.io</generator><language>zh</language><atom:link href="https://dapr-cn.github.io/operations/monitoring/metrics/index.xml" rel="self" type="application/rss+xml"/><item><title>Operations: How-To: Set up Azure Monitor to search logs and collect metrics</title><link>https://dapr-cn.github.io/operations/monitoring/metrics/azure-monitor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dapr-cn.github.io/operations/monitoring/metrics/azure-monitor/</guid><description>
&lt;h2 id="前期准备">前期准备&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/">Azure Kubernetes Service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview">Enable Azure Monitor For containers in AKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">kubectl&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://helm.sh/">Helm 3&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="enable-prometheus-metric-scrape-using-config-map">Enable Prometheus metric scrape using config map&lt;/h2>
&lt;ol>
&lt;li>Make sure that omsagents are running&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl get pods -n kube-system
NAME READY STATUS RESTARTS AGE
...
omsagent-75qjs 1/1 Running &lt;span style="color:#ae81ff">1&lt;/span> 44h
omsagent-c7c4t 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 44h
omsagent-rs-74f488997c-dshpx 1/1 Running &lt;span style="color:#ae81ff">1&lt;/span> 44h
omsagent-smtk7 1/1 Running &lt;span style="color:#ae81ff">1&lt;/span> 44h
...
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Apply config map to enable Prometheus metrics endpoint scrape.&lt;/li>
&lt;/ol>
&lt;p>You can use &lt;a href="https://dapr-cn.github.io/docs/azm-config-map.yaml">azm-config-map.yaml&lt;/a> to enable prometheus metrics endpoint scrape.&lt;/p>
&lt;p>If you installed Dapr to the different namespace, you need to change the &lt;code>monitor_kubernetes_pod_namespaces&lt;/code> array values. For example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">...
&lt;span style="color:#f92672">prometheus-data-collection-settings&lt;/span>: |-&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> [prometheus_data_collection_settings.cluster]
&lt;/span>&lt;span style="color:#e6db74"> interval = &amp;#34;1m&amp;#34;
&lt;/span>&lt;span style="color:#e6db74"> monitor_kubernetes_pods = true
&lt;/span>&lt;span style="color:#e6db74"> monitor_kubernetes_pods_namespaces = [&amp;#34;dapr-system&amp;#34;, &amp;#34;default&amp;#34;]
&lt;/span>&lt;span style="color:#e6db74"> [prometheus_data_collection_settings.node]
&lt;/span>&lt;span style="color:#e6db74"> interval = &amp;#34;1m&amp;#34;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Apply config map:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f ./azm-config.map.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-dapr-with-json-formatted-logs">Install Dapr with JSON formatted logs&lt;/h2>
&lt;ol>
&lt;li>Install Dapr with enabling JSON-formatted logs&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install dapr dapr/dapr --namespace dapr-system --set global.logAsJson&lt;span style="color:#f92672">=&lt;/span>true
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Enable JSON formatted log in Dapr sidecar and add Prometheus annotations.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Note: OMS Agent scrapes the metrics only if replicaset has Prometheus annotations.&lt;/p>
&lt;/blockquote>
&lt;p>Add &lt;code>dapr.io/log-as-json: &amp;quot;true&amp;quot;&lt;/code> annotation to your deployment yaml.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">pythonapp&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">python&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">python&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">python&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;pythonapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/log-as-json&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">prometheus.io/scrape&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">prometheus.io/port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;9090&amp;#34;&lt;/span>
&lt;span style="color:#f92672">prometheus.io/path&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="search-metrics-and-logs-with-azure-monitor">Search metrics and logs with Azure Monitor&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Go to Azure Monitor&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Search Dapr logs&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Here is an example query, to parse JSON formatted logs and query logs from dapr system processes.&lt;/p>
&lt;pre>&lt;code>ContainerLog
| extend parsed=parse_json(LogEntry)
| project Time=todatetime(parsed['time']), app_id=parsed['app_id'], scope=parsed['scope'],level=parsed['level'], msg=parsed['msg'], type=parsed['type'], ver=parsed['ver'], instance=parsed['instance']
| where level != &amp;quot;&amp;quot;
| sort by Time
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>Search metrics&lt;/li>
&lt;/ol>
&lt;p>This query, queries process_resident_memory_bytes Prometheus metrics for Dapr system processes and renders timecharts&lt;/p>
&lt;pre>&lt;code>InsightsMetrics
| where Namespace == &amp;quot;prometheus&amp;quot; and Name == &amp;quot;process_resident_memory_bytes&amp;quot;
| extend tags=parse_json(Tags)
| project TimeGenerated, Name, Val, app=tostring(tags['app'])
| summarize memInBytes=percentile(Val, 99) by bin(TimeGenerated, 1m), app
| where app startswith &amp;quot;dapr-&amp;quot;
| render timechart
&lt;/code>&lt;/pre>&lt;h1 id="references">References&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-prometheus-integration">Configure scraping of Prometheus metrics with Azure Monitor for containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-agent-config">Configure agent data collection for Azure Monitor for containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/query-language">Azure Monitor Query&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: 指标</title><link>https://dapr-cn.github.io/operations/monitoring/metrics/metrics-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dapr-cn.github.io/operations/monitoring/metrics/metrics-overview/</guid><description>
&lt;p>Dapr 公开了一个 &lt;a href="https://prometheus.io/">Prometheus&lt;/a> 指标终结点，您可以扫描该终结点，以更深入地了解 Dapr 的行为方式，针对特定条件设置警报。&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;p>默认情况下，指标终结点处于启用状态，您可以通过命令行参数 &lt;code>--enable-metrics=false&lt;/code> 传递给 Dapr 系统进程来禁用它。&lt;/p>
&lt;p>默认指标端口为 &lt;code>9090&lt;/code>。 This can be overridden by passing the command line argument &lt;code>--metrics-port&lt;/code> to Daprd.&lt;/p>
&lt;p>要禁用 Dapr 边车中的指标，您可以使用 &lt;code>metric&lt;/code> 规范配置并启用设置 &lt;code>enabled: false&lt;/code> 以禁用 Dapr 运行时中的指标。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">tracing&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">metric&lt;/span>:
&lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="指标">指标&lt;/h2>
&lt;p>默认情况下，每个 Dapr 系统进程都会发出 Go 运行时/进程指标，并有自己的指标：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dapr/dapr/blob/master/docs/development/dapr-metrics.md">Dapr metric list&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="参考文档">参考文档&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://dapr-cn.github.io/operations/monitoring/metrics/prometheus/">如何：在本地运行Prometheus&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dapr-cn.github.io/operations/monitoring/metrics/grafana/">如何：设置 Prometheus 和 Grafana 以获取指标&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dapr-cn.github.io/operations/monitoring/metrics/azure-monitor/">如何: 设置 Azure 监视器以搜索日志并收集 Dapr 的指标&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: How-To: Observe metrics with Prometheus</title><link>https://dapr-cn.github.io/operations/monitoring/metrics/prometheus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dapr-cn.github.io/operations/monitoring/metrics/prometheus/</guid><description>
&lt;h2 id="setup-prometheus-locally">Setup Prometheus Locally&lt;/h2>
&lt;p>To run Prometheus on your local machine, you can either &lt;a href="#install">install and run it as a process&lt;/a> or run it as a &lt;a href="#Run-as-Container">Docker container&lt;/a>.&lt;/p>
&lt;h3 id="install">Install&lt;/h3>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
You don&amp;rsquo;t need to install Prometheus if you plan to run it as a Docker container. Please refer to the &lt;a href="#run-as-container">Container&lt;/a> instructions.
&lt;/div>
&lt;p>To install Prometheus, follow the steps outlined &lt;a href="https://prometheus.io/docs/prometheus/latest/getting_started/">here&lt;/a> for your OS.&lt;/p>
&lt;h3 id="configure">Configure&lt;/h3>
&lt;p>Now you&amp;rsquo;ve installed Prometheus, you need to create a configuration.&lt;/p>
&lt;p>Below is an example Prometheus configuration, save this to a file i.e. &lt;code>/tmp/prometheus.yml&lt;/code> or &lt;code>C:\Temp\prometheus.yml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">global&lt;/span>:
&lt;span style="color:#f92672">scrape_interval&lt;/span>: &lt;span style="color:#ae81ff">15s&lt;/span> &lt;span style="color:#75715e"># By default, scrape targets every 15 seconds.&lt;/span>
&lt;span style="color:#75715e"># A scrape configuration containing exactly one endpoint to scrape:&lt;/span>
&lt;span style="color:#75715e"># Here it&amp;#39;s Prometheus itself.&lt;/span>
&lt;span style="color:#f92672">scrape_configs&lt;/span>:
- &lt;span style="color:#f92672">job_name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;dapr&amp;#39;&lt;/span>
&lt;span style="color:#75715e"># Override the global default and scrape targets from this job every 5 seconds.&lt;/span>
&lt;span style="color:#f92672">scrape_interval&lt;/span>: &lt;span style="color:#ae81ff">5s&lt;/span>
&lt;span style="color:#f92672">static_configs&lt;/span>:
- &lt;span style="color:#f92672">targets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;localhost:9090&amp;#39;&lt;/span>] &lt;span style="color:#75715e"># Replace with Dapr metrics port if not default&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="run-as-process">Run as Process&lt;/h3>
&lt;p>Run Prometheus with your configuration to start it collecting metrics from the specified targets.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">./prometheus --config.file&lt;span style="color:#f92672">=&lt;/span>/tmp/prometheus.yml --web.listen-address&lt;span style="color:#f92672">=&lt;/span>:8080
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>We change the port so it doesn&amp;rsquo;t conflict with Dapr&amp;rsquo;s own metrics endpoint.&lt;/p>
&lt;/blockquote>
&lt;p>If you are not currently running a Dapr application, the target will show as offline. In order to start collecting metrics you must start Dapr with the metrics port matching the one provided as the target in the configuration.&lt;/p>
&lt;p>Once Prometheus is running, you&amp;rsquo;ll be able to visit its dashboard by visiting &lt;code>http://localhost:8080&lt;/code>.&lt;/p>
&lt;h3 id="run-as-container">Run as Container&lt;/h3>
&lt;p>To run Prometheus as a Docker container on your local machine, first ensure you have &lt;a href="https://docs.docker.com/install/">Docker&lt;/a> installed and running.&lt;/p>
&lt;p>Then you can run Prometheus as a Docker container using:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker run &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --net&lt;span style="color:#f92672">=&lt;/span>host &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -v /tmp/prometheus.yml:/etc/prometheus/prometheus.yml &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> prom/prometheus --config.file&lt;span style="color:#f92672">=&lt;/span>/etc/prometheus/prometheus.yml --web.listen-address&lt;span style="color:#f92672">=&lt;/span>:8080
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>--net=host&lt;/code> ensures that the Prometheus instance will be able to connect to any Dapr instances running on the host machine. If you plan to run your Dapr apps in containers as well, you&amp;rsquo;ll need to run them on a shared Docker network and update the configuration with the correct target address.&lt;/p>
&lt;p>Once Prometheus is running, you&amp;rsquo;ll be able to visit its dashboard by visiting &lt;code>http://localhost:8080&lt;/code>.&lt;/p>
&lt;h2 id="setup-prometheus-on-kubernetes">Setup Prometheus on Kubernetes&lt;/h2>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>Kubernetes (&amp;gt; 1.14)&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">kubectl&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://helm.sh/">Helm 3&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="install-prometheus">Install Prometheus&lt;/h3>
&lt;ol>
&lt;li>First create namespace that can be used to deploy the Grafana and Prometheus monitoring tools&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl create namespace dapr-monitoring
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Install Prometheus&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm install dapr-prom prometheus-community/prometheus -n dapr-monitoring
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are Minikube user or want to disable persistent volume for development purposes, you can disable it by using the following command.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install dapr-prom prometheus-community/prometheus -n dapr-monitoring
--set alertmanager.persistentVolume.enable&lt;span style="color:#f92672">=&lt;/span>false --set pushgateway.persistentVolume.enabled&lt;span style="color:#f92672">=&lt;/span>false --set server.persistentVolume.enabled&lt;span style="color:#f92672">=&lt;/span>false
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Validation&lt;/li>
&lt;/ol>
&lt;p>Ensure Prometheus is running in your cluster.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods -n dapr-monitoring
NAME READY STATUS RESTARTS AGE
dapr-prom-kube-state-metrics-9849d6cc6-t94p8 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-alertmanager-749cc46f6-9b5t8 2/2 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-node-exporter-5jh8p 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-node-exporter-88gbg 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-node-exporter-bjp9f 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-pushgateway-688665d597-h4xx2 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-server-694fd8d7c-q5d59 2/2 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="example--iframe-width560-height315-srchttpswwwyoutubecomembed8w-ibdnvcumstart2577-frameborder0-allowaccelerometer-autoplay-clipboard-write-encrypted-media-gyroscope-picture-in-picture-allowfullscreen-markcrwd-markiframe">Example &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8W-iBDNvCUM?start=2577" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/h2>
&lt;h2 id="参考文档">参考文档&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/prometheus-community/helm-charts">Prometheus Installation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/basics/">Prometheus Query Language&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: How-To: Observe metrics with Grafana</title><link>https://dapr-cn.github.io/operations/monitoring/metrics/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dapr-cn.github.io/operations/monitoring/metrics/grafana/</guid><description>
&lt;h2 id="available-dashboards">Available dashboards&lt;/h2>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">&lt;li class="nav-item">&lt;a class="nav-link active"
id="tabs-0-system-service-tab" data-toggle="tab" href="#tabs-0-system-service" role="tab"
aria-controls="tabs-0-system-service" aria-selected="true">
System Service
&lt;/a>
&lt;/li>&lt;li class="nav-item">&lt;a class="nav-link"
id="tabs-0-sidecars-tab" data-toggle="tab" href="#tabs-0-sidecars" role="tab"
aria-controls="tabs-0-sidecars" aria-selected="false">
Sidecars
&lt;/a>
&lt;/li>&lt;li class="nav-item">&lt;a class="nav-link"
id="tabs-0-actors-tab" data-toggle="tab" href="#tabs-0-actors" role="tab"
aria-controls="tabs-0-actors" aria-selected="false">
Actors
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">
&lt;div class="tab-pane fade show active" id="tabs-0-system-service" role="tabpanel" aria-labelled-by="tabs-0-system-service-tab">
&lt;br />&lt;p>The &lt;code>grafana-system-services-dashboard.json&lt;/code> template shows Dapr system component status, dapr-operator, dapr-sidecar-injector, dapr-sentry, and dapr-placement:&lt;/p>
&lt;img src="https://dapr-cn.github.io/images/grafana-system-service-dashboard.png" alt="Screenshot of the system service dashboard" width=1200>
&lt;/div>
&lt;div class="tab-pane fade" id="tabs-0-sidecars" role="tabpanel" aria-labelled-by="tabs-0-sidecars-tab">
&lt;br />&lt;p>The &lt;code>grafana-sidecar-dashboard.json&lt;/code> template shows Dapr sidecar status, including sidecar health/resources, throughput/latency of HTTP and gRPC, Actor, mTLS, etc.:&lt;/p>
&lt;img src="https://dapr-cn.github.io/images/grafana-sidecar-dashboard.png" alt="Screenshot of the sidecar dashboard" width=1200>
&lt;/div>
&lt;div class="tab-pane fade" id="tabs-0-actors" role="tabpanel" aria-labelled-by="tabs-0-actors-tab">
&lt;br />&lt;p>The &lt;code>grafana-actor-dashboard.json&lt;/code> template shows Dapr Sidecar status, actor invocation throughput/latency, timer/reminder triggers, and turn-based concurrnecy:&lt;/p>
&lt;img src="https://dapr-cn.github.io/images/grafana-actor-dashboard.png" alt="Screenshot of the actor dashboard" width=1200>
&lt;/div>
&lt;/div>
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="%7B%7BX%1A16X%7D%7D">Setup Prometheus&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="setup-on-kubernetes">Setup on Kubernetes&lt;/h2>
&lt;h3 id="install-grafana">Install Grafana&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Add the Grafana Helm repo:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add grafana https://grafana.github.io/helm-charts
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install the chart:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install grafana grafana/grafana -n dapr-monitoring
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>If you are Minikube user or want to disable persistent volume for development purpose, you can disable it by using the following command instead:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install grafana grafana/grafana -n dapr-monitoring --set persistence.enabled&lt;span style="color:#f92672">=&lt;/span>false
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Retrieve the admin password for Grafana login:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get secret --namespace dapr-monitoring grafana -o jsonpath&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{.data.admin-password}&amp;#34;&lt;/span> | base64 --decode ; echo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will get a password similar to &lt;code>cj3m0OfBNx8SLzUlTx91dEECgzRlYJb60D2evof1%&lt;/code>. Remove the &lt;code>%&lt;/code> character from the password to get &lt;code>cj3m0OfBNx8SLzUlTx91dEECgzRlYJb60D2evof1&lt;/code> as the admin password.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Validation Grafana is running in your cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods -n dapr-monitoring
NAME READY STATUS RESTARTS AGE
dapr-prom-kube-state-metrics-9849d6cc6-t94p8 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-alertmanager-749cc46f6-9b5t8 2/2 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-node-exporter-5jh8p 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-node-exporter-88gbg 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-node-exporter-bjp9f 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-pushgateway-688665d597-h4xx2 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
dapr-prom-prometheus-server-694fd8d7c-q5d59 2/2 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m58s
grafana-c49889cff-x56vj 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 5m10s
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="configure-prometheus-as-data-source">Configure Prometheus as data source&lt;/h3>
&lt;p>First you need to connect Prometheus as a data source to Grafana.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Port-forward to svc/grafana:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl port-forward svc/grafana 8080:80 -n dapr-monitoring
Forwarding from 127.0.0.1:8080 -&amp;gt; &lt;span style="color:#ae81ff">3000&lt;/span>
Forwarding from &lt;span style="color:#f92672">[&lt;/span>::1&lt;span style="color:#f92672">]&lt;/span>:8080 -&amp;gt; &lt;span style="color:#ae81ff">3000&lt;/span>
Handling connection &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">8080&lt;/span>
Handling connection &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Open a browser to &lt;code>http://localhost:8080&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Login to Grafana&lt;/p>
&lt;ul>
&lt;li>Username = &lt;code>admin&lt;/code>&lt;/li>
&lt;li>Password = Password from above&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Select &lt;code>Configuration&lt;/code> and &lt;code>Data Sources&lt;/code>&lt;/p>
&lt;img src="https://dapr-cn.github.io/images/grafana-datasources.png" alt="Screenshot of the Grafana add Data Source menu" width=200>
&lt;/li>
&lt;li>
&lt;p>Add Prometheus as a data source.&lt;/p>
&lt;pre>&lt;code>&amp;lt;img src=&amp;quot;/images/grafana-add-datasources.png&amp;quot; alt=&amp;quot;Screenshot of the Prometheus add Data Source&amp;quot; width=600&amp;gt;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Get your Prometheus HTTP URL&lt;/p>
&lt;p>The Prometheus HTTP URL follows the format &lt;code>http://&amp;lt;prometheus service endpoint&amp;gt;.&amp;lt;namespace&amp;gt;&lt;/code>&lt;/p>
&lt;p>Start by getting the Prometheus server endpoint by running the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get svc -n dapr-monitoring
NAME TYPE CLUSTER-IP EXTERNAL-IP PORT&lt;span style="color:#f92672">(&lt;/span>S&lt;span style="color:#f92672">)&lt;/span> AGE
dapr-prom-kube-state-metrics ClusterIP 10.0.174.177 &amp;lt;none&amp;gt; 8080/TCP 7d9h
dapr-prom-prometheus-alertmanager ClusterIP 10.0.255.199 &amp;lt;none&amp;gt; 80/TCP 7d9h
dapr-prom-prometheus-node-exporter ClusterIP None &amp;lt;none&amp;gt; 9100/TCP 7d9h
dapr-prom-prometheus-pushgateway ClusterIP 10.0.190.59 &amp;lt;none&amp;gt; 9091/TCP 7d9h
dapr-prom-prometheus-server ClusterIP 10.0.172.191 &amp;lt;none&amp;gt; 80/TCP 7d9h
elasticsearch-master ClusterIP 10.0.36.146 &amp;lt;none&amp;gt; 9200/TCP,9300/TCP 7d10h
elasticsearch-master-headless ClusterIP None &amp;lt;none&amp;gt; 9200/TCP,9300/TCP 7d10h
grafana ClusterIP 10.0.15.229 &amp;lt;none&amp;gt; 80/TCP 5d5h
kibana-kibana ClusterIP 10.0.188.224 &amp;lt;none&amp;gt; 5601/TCP 7d10h
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this guide the server name is &lt;code>dapr-prom-prometheus-server&lt;/code> and the namespace is &lt;code>dapr-monitoring&lt;/code>, so the HTTP URL will be &lt;code>http://dapr-prom-prometheus-server.dapr-monitoring&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill in the following settings:&lt;/p>
&lt;ul>
&lt;li>Name: &lt;code>Dapr&lt;/code>&lt;/li>
&lt;li>HTTP URL: &lt;code>http://dapr-prom-prometheus-server.dapr-monitoring&lt;/code>&lt;/li>
&lt;li>Default: On&lt;/li>
&lt;/ul>
&lt;img src="https://dapr-cn.github.io/images/grafana-prometheus-dapr-server-url.png" alt="Screenshot of the Prometheus Data Source configuration" width=600>
&lt;/li>
&lt;li>
&lt;p>Click &lt;code>Save &amp;amp; Test&lt;/code> button to verify that the connection succeeded.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="import-dashboards-in-grafana">Import dashboards in Grafana&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>In the upper left corner of the Grafana home screen, click the &amp;ldquo;+&amp;rdquo; option, then &amp;ldquo;Import&amp;rdquo;.&lt;/p>
&lt;p>You can now import &lt;a href="https://github.com/dapr/dapr/tree/master/grafana">Grafana dashboard templates&lt;/a> from &lt;a href="https://github.com/dapr/dapr/releases">release assets&lt;/a> for your Dapr version:&lt;/p>
&lt;img src="https://dapr-cn.github.io/images/grafana-uploadjson.png" alt="Screenshot of the Grafana dashboard upload option" width=700>
&lt;/li>
&lt;li>
&lt;p>Find the dashboard that you imported and enjoy&lt;/p>
&lt;img src="https://dapr-cn.github.io/images/system-service-dashboard.png" alt="Screenshot of Dapr service dashbaord" width=900>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>
Hover your mouse over the &lt;code>i&lt;/code> in the corner to the description of each chart:&lt;/p>
&lt;img src="https://dapr-cn.github.io/images/grafana-tooltip.png" alt="Screenshot of the tooltip for graphs" width=700>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="%7B%7BX%1A25X%7D%7D">Dapr Observability&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/prometheus-community/helm-charts">Prometheus Installation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/coreos/kube-prometheus">Prometheus on Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/basics/">Prometheus Query Language&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dapr/dapr/blob/master/docs/development/dapr-metrics.md">Supported Dapr metrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="example-iframe-width560-height315-srchttpswwwyoutubecomembed8w-ibdnvcumstart2577-frameborder0-allowaccelerometer-autoplay-clipboard-write-encrypted-media-gyroscope-picture-in-picture-allowfullscreen-markcrwd-markiframe">Example &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8W-iBDNvCUM?start=2577" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/h2></description></item></channel></rss>