<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr 文档库 – 管理 Dapr 配置</title><link>https://docs.dapr.io/operations/configuration/</link><description>Recent content in 管理 Dapr 配置 on Dapr 文档库</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.dapr.io/operations/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>Operations: Dapr 配置选项概述</title><link>https://docs.dapr.io/operations/configuration/configuration-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/configuration/configuration-overview/</guid><description>
&lt;h2 id="sidecar-配置">Sidecar 配置&lt;/h2>
&lt;h3 id="设置-sidecar-选项配置">设置 Sidecar 选项配置&lt;/h3>
&lt;h4 id="自托管模式的-sidecar">自托管模式的 Sidecar&lt;/h4>
&lt;p>在自托管模式下，Dapr 配置通过配置文件进行定义，如 &lt;code>config.yaml&lt;/code>。 默认情况下，Dapr sidecar 会在默认的 Dapr 目录下寻找运行时配置，在 Linux / MacOS操作系统下，位置为 &lt;code>$HOME/.dapr/config.yaml&lt;/code> ， Windows操作系统下则为 &lt;code>%USERPROFILE%\.dapr\config.yaml&lt;/code>&lt;/p>
&lt;p>也可以在运行 &lt;code>dapr run&lt;/code> CLI 命令时，通过使用 &lt;code>--config&lt;/code> 标志来制定 Dapr sidecar 所读取的配置文件所在的位置。&lt;/p>
&lt;h4 id="kubernetes-模式的-sidecar">Kubernetes 模式的 Sidecar&lt;/h4>
&lt;p>在 Kubernetes 模式下，Dapr 可以通过集群中的一个配置 CRD 进行配置。 例如：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f myappconfig.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>您也可以使用 Dapr CLI 工具列举查看当前的配置 CRD 列表：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr configurations -k
&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以使用 &lt;code>dapr.io/config&lt;/code> 注解对指定的 Dapr sidecar 应用特定的配置。 例如:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml"> &lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;nodeapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;3000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;myappconfig&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意: 还有更多的 &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-annotations/">Kubernetes 注解&lt;/a> 可以用来配置 Dapr sidecar，通过 sidecar injector 系统服务来激活。&lt;/p>
&lt;h3 id="sidecar-配置-1">Sidecar 配置&lt;/h3>
&lt;p>Dapr 应用 sidecar 提供以下配置选项；&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#tracing">Tracing（调用链追踪）&lt;/a>&lt;/li>
&lt;li>&lt;a href="#metrics">指标&lt;/a>&lt;/li>
&lt;li>&lt;a href="#middleware">中间件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#scoping-secrets-for-secret-stores">限定范围的密钥储存&lt;/a>&lt;/li>
&lt;li>&lt;a href="#access-control-allow-lists-for-service-invocation">服务间调用的访问控制&lt;/a>&lt;/li>
&lt;li>&lt;a href="#example-application-sidecar-configuration">Sidecar 配置示例&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="tracing调用链追踪">Tracing（调用链追踪）&lt;/h4>
&lt;p>链路追踪配置用于为应用程序开启调用链追踪功能。&lt;/p>
&lt;p>&lt;code>Configuration&lt;/code> sepc下的 &lt;code>tracing&lt;/code> 部分包含以下属性：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">zipkin&lt;/span>:
&lt;span style="color:#f92672">endpointAddress&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;http://zipkin.default.svc.cluster.local:9411/api/v2/spans&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的表格给出了调用链追踪功能可配置的属性&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>samplingRate&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>设置采样率，可以用来控制追踪功能是否开启。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>zipkin.endpointAddress&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>设置 Zipkin 服务器地址。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>samplingRate&lt;/code> 用来控制调用链追踪是否启用。 要禁用采样率 , 可以在配置文件中设置 &lt;code>samplingRate : &amp;quot;0&amp;quot;&lt;/code> 。 SamplingRate 的有效值在0到1之间。 系统将根据采样率配置的数值决定一条 trace span 是否要被采样。 如果设置 &lt;code>samplingRate : &amp;quot;1&amp;quot;&lt;/code> ，将会对所有的调用链进行采样。 默认情况下，采样率配置为 (0.0001)，即每10,000条请求中会有一条被采样。&lt;/p>
&lt;p>请参阅 &lt;a href="https://docs.dapr.io/developing-applications/building-blocks/observability/tracing-overview/">分布式可观测性追踪&lt;/a> 了解更多信息。&lt;/p>
&lt;h4 id="指标">指标&lt;/h4>
&lt;p>配置中的 metrics 部分用来为应用开启或禁用度量功能。&lt;/p>
&lt;p>&lt;code>Configuration&lt;/code> sepc下的 &lt;code>metrics&lt;/code> 部分包含以下属性：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">metrics&lt;/span>:
&lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的表格给出了度量功能可配置的属性&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>enabled&lt;/code>&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>是否启用度量功能。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>请参阅 &lt;a href="https://docs.dapr.io/operations/monitoring/metrics/metrics-overview/">度量文档&lt;/a> 了解更多信息。&lt;/p>
&lt;h4 id="中间件">中间件&lt;/h4>
&lt;p>中间件配置用于配置一系列可命名的HTTP管道处理器。&lt;code>Configuration&lt;/code> spec 下的&lt;code>httpPipeline&lt;/code> 部分包含以下的配置属性：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">httpPipeline&lt;/span>:
&lt;span style="color:#f92672">handlers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">oauth2&lt;/span>
&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">middleware.http.oauth2&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">uppercase&lt;/span>
&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">middleware.http.uppercase&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的表格给出了HTTP 处理器可配置的属性&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>name&lt;/td>
&lt;td>string&lt;/td>
&lt;td>中间件组件的名称。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>type&lt;/td>
&lt;td>string&lt;/td>
&lt;td>中间件组件的类型。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>请参阅 &lt;a href="https://docs.dapr.io/concepts/middleware-concept/">中间件管道&lt;/a> 一节以获取更多信息。&lt;/p>
&lt;h4 id="限定作用域的密钥储存控制">限定作用域的密钥储存控制&lt;/h4>
&lt;p>请参阅 &lt;a href="https://docs.dapr.io/operations/configuration/secret-scope/">Scoping secrets&lt;/a> 指南查看更多信息，以及如何为应用程序设置密钥作用域的例子。&lt;/p>
&lt;h4 id="服务间调用的访问控制">服务间调用的访问控制&lt;/h4>
&lt;p>请参阅 &lt;a href="https://docs.dapr.io/operations/configuration/invoke-allowlist/">服务间调用允许列表&lt;/a> 了解更多信息，以及如何设置允许列表的例子。&lt;/p>
&lt;h3 id="sidecar-配置示例">Sidecar 配置示例&lt;/h3>
&lt;p>下面的yaml内容展示了一个可以被应用于Dapr sidecar的配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">myappconfig&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">httpPipeline&lt;/span>:
&lt;span style="color:#f92672">handlers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">oauth2&lt;/span>
&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">middleware.http.oauth2&lt;/span>
&lt;span style="color:#f92672">secrets&lt;/span>:
&lt;span style="color:#f92672">scopes&lt;/span>:
- &lt;span style="color:#f92672">storeName&lt;/span>: &lt;span style="color:#ae81ff">localstore&lt;/span>
&lt;span style="color:#f92672">defaultAccess&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">deniedSecrets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;redis-password&amp;#34;&lt;/span>]
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;span style="color:#f92672">policies&lt;/span>:
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app1&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;public&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;span style="color:#f92672">operations&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">/op1&lt;/span>
&lt;span style="color:#f92672">httpVerb&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;POST&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;GET&amp;#39;&lt;/span>]
&lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">/op2/*&lt;/span>
&lt;span style="color:#f92672">httpVerb&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>]
&lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="控制平面配置">控制平面配置&lt;/h2>
&lt;p>在 Dapr 控制平面系统中，安装了一个名为&lt;code>default&lt;/code> 的配置文件，用于应用全局配置。 这个配置仅在Dapr部署到Kubernetes中时生效。&lt;/p>
&lt;h3 id="控制平面配置列表">控制平面配置列表&lt;/h3>
&lt;p>在 Dapr 控制平面中，可以使用以下配置项：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>配置mtls是否开启&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>allowedClockSkew&lt;/td>
&lt;td>string&lt;/td>
&lt;td>证书到期时，基于本地时钟偏差给出的额外过期时间。 默认值为15分钟。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>workloadCertTTL&lt;/td>
&lt;td>string&lt;/td>
&lt;td>证书有效时间。 默认值为 24 小时。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>请参阅 &lt;a href="https://docs.dapr.io/operations/security/mtls/">Mutual TLS&lt;/a> 和 &lt;a href="https://docs.dapr.io/concepts/security-concept/">安全概念&lt;/a> 了解更多信息。&lt;/p>
&lt;h3 id="控制平面配置示例">控制平面配置示例&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">mtls&lt;/span>:
&lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;span style="color:#f92672">allowedClockSkew&lt;/span>: &lt;span style="color:#ae81ff">15m&lt;/span>
&lt;span style="color:#f92672">workloadCertTTL&lt;/span>: &lt;span style="color:#ae81ff">24h&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Operations: How-To: Control concurrency and rate limit applications</title><link>https://docs.dapr.io/operations/configuration/control-concurrency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/configuration/control-concurrency/</guid><description>
&lt;p>A common scenario in distributed computing is to only allow for a given number of requests to execute concurrently. Using Dapr, you can control how many requests and events will invoke your application simultaneously.&lt;/p>
&lt;p>&lt;em>Note that this rate limiing is guaranteed for every event that&amp;rsquo;s coming from Dapr, meaning Pub/Sub events, direct invocation from other services, bindings events etc. Dapr can&amp;rsquo;t enforce the concurrency policy on requests that are coming to your app externally.&lt;/em>&lt;/p>
&lt;p>*Note that rate limiting per second can be achieved by using the &lt;strong>middleware.http.ratelimit&lt;/strong> middleware. However, there is an imporant difference between the two approaches. The rate limit middlware is time bound and limits the number of requests per second, while the &lt;code>app-max-concurrency&lt;/code> flag specifies the number of concurrent requests (and events) at any point of time. See &lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-rate-limit/">Rate limit middleware&lt;/a>. * However, there is an imporant difference between the two approaches. The rate limit middlware is time bound and limits the number of requests per second, while the &lt;code>app-max-concurrency&lt;/code> flag specifies the number of concurrent requests (and events) at any point of time. See &lt;a href="https://docs.dapr.io/developing-applications/middleware/supported-middleware/middleware-rate-limit/">Rate limit middleware&lt;/a>. *&lt;/p>
&lt;p>Watch this &lt;a href="https://youtu.be/yRI5g6o_jp8?t=1710">video&lt;/a> on how to control concurrency and rate limiting &amp;ldquo;. &lt;iframe width="764" height="430" src="https://www.youtube.com/embed/yRI5g6o_jp8?t=1710" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/p>
&lt;h2 id="setting-app-max-concurrency">Setting app-max-concurrency&lt;/h2>
&lt;p>Without using Dapr, a developer would need to create some sort of a semaphore in the application and take care of acquiring and releasing it. Using Dapr, there are no code changes needed to an app.&lt;/p>
&lt;h3 id="setting-app-max-concurrency-in-kubernetes">Setting app-max-concurrency in Kubernetes&lt;/h3>
&lt;p>To set app-max-concurrency in Kubernetes, add the following annotation to your pod:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nodesubscriber&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">nodesubscriber&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">nodesubscriber&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">nodesubscriber&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;nodesubscriber&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;3000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;b&amp;gt;dapr.io/app-max-concurrency&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">&amp;lt;/b&amp;gt;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setting-app-max-concurrency-using-the-dapr-cli">Setting app-max-concurrency using the Dapr CLI&lt;/h3>
&lt;p>To set app-max-concurrency with the Dapr CLI for running on your local dev machine, add the &lt;code>app-max-concurrency&lt;/code> flag:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --app-max-concurrency &lt;span style="color:#ae81ff">1&lt;/span> --app-port &lt;span style="color:#ae81ff">5000&lt;/span> python ./app.py
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above examples will effectively turn your app into a single concurrent service.&lt;/p></description></item><item><title>Operations: How-To: Limit the secrets that can be read from secret stores</title><link>https://docs.dapr.io/operations/configuration/secret-scope/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/configuration/secret-scope/</guid><description>
&lt;p>In addition to scoping which applications can access a given component, for example a secret store component (see &lt;a href="https://docs.dapr.io/operations/components/component-scopes/">Scoping components&lt;/a>), a named secret store component itself can be scoped to one or more secrets for an application. By defining &lt;code>allowedSecrets&lt;/code> and/or &lt;code>deniedSecrets&lt;/code> list, applications can be restricted to access only specific secrets.&lt;/p>
&lt;p>Follow &lt;a href="https://docs.dapr.io/operations/configuration/configuration-overview/">these instructions&lt;/a> to define a configuration CRD.&lt;/p>
&lt;h2 id="configure-secrets-access">Configure secrets access&lt;/h2>
&lt;p>The &lt;code>secrets&lt;/code> section under the &lt;code>Configuration&lt;/code> spec contains the following properties:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">secrets&lt;/span>:
&lt;span style="color:#f92672">scopes&lt;/span>:
- &lt;span style="color:#f92672">storeName&lt;/span>: &lt;span style="color:#ae81ff">kubernetes&lt;/span>
&lt;span style="color:#f92672">defaultAccess&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">allowedSecrets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;redis-password&amp;#34;&lt;/span>]
- &lt;span style="color:#f92672">storeName&lt;/span>: &lt;span style="color:#ae81ff">localstore&lt;/span>
&lt;span style="color:#f92672">defaultAccess&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">deniedSecrets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;redis-password&amp;#34;&lt;/span>]
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following table lists the properties for secret scopes:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>storeName&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Name of the secret store component. Name of the secret store component. storeName must be unique within the list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>默认权限&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Access modifier. Accepted values &amp;ldquo;allow&amp;rdquo; (default) or &amp;ldquo;deny&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>允许的密钥&lt;/td>
&lt;td>list&lt;/td>
&lt;td>List of secret keys that can be accessed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>被拒绝的密钥&lt;/td>
&lt;td>list&lt;/td>
&lt;td>List of secret keys that cannot be accessed&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>When an &lt;code>allowedSecrets&lt;/code> list is present with at least one element, only those secrets defined in the list can be accessed by the application.&lt;/p>
&lt;h2 id="权限优先级">权限优先级&lt;/h2>
&lt;p>The &lt;code>allowedSecrets&lt;/code> and &lt;code>deniedSecrets&lt;/code> list values take priorty over the &lt;code>defaultAccess&lt;/code>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>场景&lt;/th>
&lt;th>默认权限&lt;/th>
&lt;th>允许的密钥&lt;/th>
&lt;th>被拒绝的密钥&lt;/th>
&lt;th>权限&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1 - 仅默认访问&lt;/td>
&lt;td>拒绝/允许&lt;/td>
&lt;td>为空&lt;/td>
&lt;td>为空&lt;/td>
&lt;td>拒绝/允许&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2 - 默认拒绝允许列表&lt;/td>
&lt;td>拒绝&lt;/td>
&lt;td>[&amp;ldquo;s1&amp;rdquo;]&lt;/td>
&lt;td>为空&lt;/td>
&lt;td>只能访问&amp;quot;s1&amp;quot;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3 - 默认允许拒绝列表&lt;/td>
&lt;td>允许&lt;/td>
&lt;td>为空&lt;/td>
&lt;td>[&amp;ldquo;s1&amp;rdquo;]&lt;/td>
&lt;td>仅限&amp;quot;s1&amp;quot;无法访问&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4 - 默认允许允许列表&lt;/td>
&lt;td>允许&lt;/td>
&lt;td>[&amp;ldquo;s1&amp;rdquo;]&lt;/td>
&lt;td>为空&lt;/td>
&lt;td>只能访问&amp;quot;s1&amp;quot;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5 - 默认拒绝拒绝列表&lt;/td>
&lt;td>拒绝&lt;/td>
&lt;td>为空&lt;/td>
&lt;td>[&amp;ldquo;s1&amp;rdquo;]&lt;/td>
&lt;td>拒绝&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6 - 两个列表的默认拒绝/允许&lt;/td>
&lt;td>拒绝/允许&lt;/td>
&lt;td>[&amp;ldquo;s1&amp;rdquo;]&lt;/td>
&lt;td>[&amp;ldquo;s2&amp;rdquo;]&lt;/td>
&lt;td>只能访问&amp;quot;s1&amp;quot;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="示例">示例&lt;/h2>
&lt;h3 id="场景1拒绝访问所有密钥仓库">场景1：拒绝访问所有密钥仓库&lt;/h3>
&lt;p>In Kubernetes cluster, the native Kubernetes secret store is added to Dapr application by default. 在某些情况下，可能有必要拒绝某个应用程序访问 Dapr 密钥。 要添加此配置，请按照下面的步骤：&lt;/p>
&lt;p>Define the following &lt;code>appconfig.yaml&lt;/code> and apply it to the Kubernetes cluster using the command &lt;code>kubectl apply -f appconfig.yaml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">secrets&lt;/span>:
&lt;span style="color:#f92672">scopes&lt;/span>:
- &lt;span style="color:#f92672">storeName&lt;/span>: &lt;span style="color:#ae81ff">kubernetes&lt;/span>
&lt;span style="color:#f92672">defaultAccess&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For applications that need to be deined access to the Kubernetes secret store, follow &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-overview/">these instructions&lt;/a>, and add the following annotation to the application pod.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>With this defined, the application no longer has access to Kubernetes secret store.&lt;/p>
&lt;h3 id="场景2只允许访问密钥仓库中的某些密钥">场景2：只允许访问密钥仓库中的某些密钥&lt;/h3>
&lt;p>To allow a Dapr application to have access to only certain secrets, define the following &lt;code>config.yaml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">secrets&lt;/span>:
&lt;span style="color:#f92672">scopes&lt;/span>:
- &lt;span style="color:#f92672">storeName&lt;/span>: &lt;span style="color:#ae81ff">vault&lt;/span>
&lt;span style="color:#f92672">defaultAccess&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">allowedSecrets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;secret1&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;secret2&amp;#34;&lt;/span>]
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This example defines configuration for secret store named vault. 密钥仓库的默认访问权限是&lt;code>deny&lt;/code>，而有些密钥可以通过应用程序基于&lt;code>allowedSecrets&lt;/code>列表访问。 Follow &lt;a href="https://docs.dapr.io/operations/configuration/configuration-overview/">these instructions&lt;/a> to apply configuration to the sidecar.&lt;/p>
&lt;h3 id="scenario-3-deny-access-to-certain-senstive-secrets-in-a-secret-store">Scenario 3: Deny access to certain senstive secrets in a secret store&lt;/h3>
&lt;p>定义以下 &lt;code>config.yaml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">secrets&lt;/span>:
&lt;span style="color:#f92672">scopes&lt;/span>:
- &lt;span style="color:#f92672">storeName&lt;/span>: &lt;span style="color:#ae81ff">vault&lt;/span>
&lt;span style="color:#f92672">defaultAccess&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span> &lt;span style="color:#75715e"># this is the default value, line can be omitted&lt;/span>
&lt;span style="color:#f92672">deniedSecrets&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;secret1&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;secret2&amp;#34;&lt;/span>]
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的配置明确禁止从名为 vault 的密钥仓库访问 &lt;code>secret1&lt;/code> 和 &lt;code>secret2&lt;/code> ，但允许访问所有其他密钥。 Follow &lt;a href="https://docs.dapr.io/operations/configuration/configuration-overview/">these instructions&lt;/a> to apply configuration to the sidecar.&lt;/p></description></item><item><title>Operations: How-To: Apply access control list configuration for service invocation</title><link>https://docs.dapr.io/operations/configuration/invoke-allowlist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/configuration/invoke-allowlist/</guid><description>
&lt;p>Access control enables the configuration of policies that restrict what operations &lt;em>calling&lt;/em> applications can perform, via service invocation, on the &lt;em>called&lt;/em> application. To limit access to a called applications from specific operations and HTTP verbs from the calling applications, you can define an access control policy specification in configuration.&lt;/p>
&lt;p>An access control policy is specified in configuration and be applied to Dapr sidecar for the &lt;em>called&lt;/em> application. Example access policies are shown below and access to the called app is based on the matched policy action. You can provide a default global action for all calling applications and if no access control policy is specified, the default behavior is to allow all calling applicatons to access to the called app.&lt;/p>
&lt;p>Watch this &lt;a href="https://youtu.be/j99RN_nxExA?t=1108">video&lt;/a> on how to apply access control list for service invocation. &lt;iframe width="688" height="430" src="https://www.youtube.com/embed/j99RN_nxExA?start=1108" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen mark="crwd-mark">&lt;/iframe>&lt;/p>
&lt;h2 id="基础概念">基础概念&lt;/h2>
&lt;p>&lt;strong>TrustDomain&lt;/strong> - A &amp;ldquo;trust domain&amp;rdquo; is a logical group to manage trust relationships. Every application is assigned a trust domain which can be specified in the access control list policy spec. If no policy spec is defined or an empty trust domain is specified, then a default value &amp;ldquo;public&amp;rdquo; is used. This trust domain is used to generate the identity of the application in the TLS cert.&lt;/p>
&lt;p>&lt;strong>App Identity&lt;/strong> - Dapr requests the sentry service to generate a &lt;a href="https://spiffe.io/">SPIFFE&lt;/a> id for all applications and this id is attached in the TLS cert. The SPIFFE id is of the format: &lt;code>**spiffe://\&amp;lt;trustdomain&amp;gt;/ns/\&amp;lt;namespace\&amp;gt;/\&amp;lt;appid\&amp;gt;**&lt;/code>. For matching policies, the trust domain, namespace and app ID values of the calling app are extracted from the SPIFFE id in the TLS cert of the calling app. These values are matched against the trust domain, namespace and app ID values specified in the policy spec. If all three of these match, then more specific policies are further matched. The SPIFFE id is of the format: &lt;code>**spiffe://\&amp;lt;trustdomain&amp;gt;/ns/\&amp;lt;namespace\&amp;gt;/\&amp;lt;appid\&amp;gt;**&lt;/code>. For matching policies, the trust domain, namespace and app ID values of the calling app are extracted from the SPIFFE id in the TLS cert of the calling app. These values are matched against the trust domain, namespace and app ID values specified in the policy spec. If all three of these match, then more specific policies are further matched. The SPIFFE id is of the format: &lt;code>**spiffe://\&amp;lt;trustdomain&amp;gt;/ns/\&amp;lt;namespace\&amp;gt;/\&amp;lt;appid\&amp;gt;**&lt;/code>. For matching policies, the trust domain, namespace and app ID values of the calling app are extracted from the SPIFFE id in the TLS cert of the calling app. These values are matched against the trust domain, namespace and app ID values specified in the policy spec. If all three of these match, then more specific policies are further matched.&lt;/p>
&lt;h2 id="configuration-properties">Configuration properties&lt;/h2>
&lt;p>The following tables lists the different properties for access control, policies and operations:&lt;/p>
&lt;h3 id="access-control">Access Control&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>defaultAction&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Global default action when no other policy is matched&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>trustDomain&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Trust domain assigned to the application. Default is &amp;ldquo;public&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>policies&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Policies to determine what operations the calling app can do on the called app&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="policies">Policies&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>app&lt;/td>
&lt;td>string&lt;/td>
&lt;td>AppId of the calling app to allow/deny service invocation from&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>namespace&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Namespace value that needs to be matched with the namespace of the calling app&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>trustDomain&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Trust domain that needs to be matched with the trust domain of the calling app. Default is &amp;ldquo;public&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>defaultAction&lt;/td>
&lt;td>string&lt;/td>
&lt;td>App level default action in case the app is found but no specific operation is matched&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>operations&lt;/td>
&lt;td>string&lt;/td>
&lt;td>operations that are allowed from the calling app&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="功能操作">功能操作&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>数据类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>name&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Path name of the operations allowed on the called app. Wildcard &amp;ldquo;*&amp;rdquo; can be used to under a path to match&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>httpVerb&lt;/td>
&lt;td>list&lt;/td>
&lt;td>List specific http verbs that can be used by the calling app. Wildcard &amp;ldquo;*&amp;rdquo; can be used to match any http verb. Unused for grpc invocation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>action&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Access modifier. Accepted values &amp;ldquo;allow&amp;rdquo; (default) or &amp;ldquo;deny&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="policy-rules">Policy rules&lt;/h2>
&lt;ol>
&lt;li>If no access policy is specified, the default behavior is to allow all apps to access to all methods on the called app&lt;/li>
&lt;li>If no global default action is specified and no app specific policies defined, the empty access policy is treated like no access policy specified and the default behavior is to allow all apps to access to all methods on the called app.&lt;/li>
&lt;li>If no global default action is specified but some app specific policies have been defined, then we resort to a more secure option of assuming the global default action to deny access to all methods on the called app.&lt;/li>
&lt;li>If an access policy is defined and if the incoming app credentials cannot be verified, then the global default action takes effect.&lt;/li>
&lt;li>If either the trust domain or namespace of the incoming app do not match the values specified in the app policy, the app policy is ignored and the global default action takes effect.&lt;/li>
&lt;/ol>
&lt;h2 id="policy-priority">Policy priority&lt;/h2>
&lt;p>The action corresponding to the most specific policy matched takes effect as ordered below:&lt;/p>
&lt;ol>
&lt;li>Specific HTTP verbs in the case of HTTP or the operation level action in the case of GRPC.&lt;/li>
&lt;li>The default action at the app level&lt;/li>
&lt;li>The default action at the global level&lt;/li>
&lt;/ol>
&lt;h2 id="example-scenarios">Example scenarios&lt;/h2>
&lt;p>Below are some example scenarios for using access control list for service invocation. See &lt;a href="https://docs.dapr.io/concepts/configuration-concept/">configuration guidance&lt;/a> to understand the available configuration settings for an application sidecar.&lt;/p>
&lt;p>&lt;font size=5>Scenario 1: Deny access to all apps except where trustDomain = public, namespace = default, appId = app1&lt;/font>&lt;/p>
&lt;p>With this configuration, all calling methods with appId = app1 are allowed and all other invocation requests from other applications are denied&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;span style="color:#f92672">policies&lt;/span>:
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app1&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;public&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;font size=5>Scenario 2: Deny access to all apps except trustDomain = public, namespace = default, appId = app1, operation = op1&lt;/font>&lt;/p>
&lt;p>With this configuration, only method op1 from appId = app1 is allowed and all other method requests from all other apps, including other methods on app1, are denied&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;span style="color:#f92672">policies&lt;/span>:
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app1&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;public&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;span style="color:#f92672">operations&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">/op1&lt;/span>
&lt;span style="color:#f92672">httpVerb&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>]
&lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;font size=5>Scenario 3: Deny access to all apps except when a specific verb for HTTP and operation for GRPC is matched&lt;/font>&lt;/p>
&lt;p>With this configuration, the only scenarios below are allowed access and and all other method requests from all other apps, including other methods on app1 or app2, are denied&lt;/p>
&lt;ul>
&lt;li>trustDomain = public, namespace = default, appID = app1, operation = op1, http verb = POST/PUT&lt;/li>
&lt;li>trustDomain = &amp;ldquo;myDomain&amp;rdquo;, namespace = &amp;ldquo;ns1&amp;rdquo;, appID = app2, operation = op2 and application protocol is GRPC , only HTTP verbs POST/PUT on method op1 from appId = app1 are allowed and all other method requests from all other apps, including other methods on app1, are denied&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;span style="color:#f92672">policies&lt;/span>:
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app1&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;public&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;span style="color:#f92672">operations&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">/op1&lt;/span>
&lt;span style="color:#f92672">httpVerb&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;POST&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;PUT&amp;#39;&lt;/span>]
&lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app2&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;myDomain&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ns1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">operations&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">/op2&lt;/span>
&lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;font size=5>Scenario 4: Allow access to all methods except trustDomain = public, namespace = default, appId = app1, operation = /op1/*, all http verbs&lt;/font>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;span style="color:#f92672">policies&lt;/span>:
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app1&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;public&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;span style="color:#f92672">operations&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">/op1/*&lt;/span>
&lt;span style="color:#f92672">httpVerb&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>]
&lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;font size=5>Scenario 5: Allow access to all methods for trustDomain = public, namespace = ns1, appId = app1 and deny access to all methods for trustDomain = public, namespace = ns2, appId = app1&lt;/font>&lt;/p>
&lt;p>This scenario shows how applications with the same app ID but belonging to different namespaces can be specified&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">appconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;span style="color:#f92672">policies&lt;/span>:
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app1&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;public&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ns1&amp;#34;&lt;/span>
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">app1&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;public&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ns2&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="hello-world-examples">Hello world examples&lt;/h2>
&lt;p>These examples show how to apply access control to the &lt;a href="https://github.com/dapr/quickstarts#quickstarts">hello world&lt;/a> quickstart samples where a python app invokes a node.js app. Access control lists rely on the Dapr &lt;a href="https://docs.dapr.io/concepts/security-concept/">Sentry service&lt;/a> to generate the TLS certificates with a SPIFFE id for authentication, which means the Sentry service either has to be running locally or deployed to your hosting enviroment such as a Kubernetes cluster.&lt;/p>
&lt;p>The nodeappconfig example below shows how to &lt;strong>deny&lt;/strong> access to the &lt;code>neworder&lt;/code> method from the &lt;code>pythonapp&lt;/code>, where the python app is in the &lt;code>myDomain&lt;/code> trust domain and &lt;code>default&lt;/code> namespace. The nodeapp is in the &lt;code>public&lt;/code> trust domain.&lt;/p>
&lt;p>&lt;strong>nodeappconfig.yaml&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nodeappconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>
&lt;span style="color:#f92672">policies&lt;/span>:
- &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">pythonapp&lt;/span>
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;myDomain&amp;#39;&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;span style="color:#f92672">operations&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">/neworder&lt;/span>
&lt;span style="color:#f92672">httpVerb&lt;/span>: [&lt;span style="color:#e6db74">&amp;#39;POST&amp;#39;&lt;/span>]
&lt;span style="color:#f92672">action&lt;/span>: &lt;span style="color:#ae81ff">deny&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>pythonappconfig.yaml&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">dapr.io/v1alpha1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Configuration&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">pythonappconfig&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">tracing&lt;/span>:
&lt;span style="color:#f92672">samplingRate&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">accessControl&lt;/span>:
&lt;span style="color:#f92672">defaultAction&lt;/span>: &lt;span style="color:#ae81ff">allow&lt;/span>
&lt;span style="color:#f92672">trustDomain&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;myDomain&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="self-hosted-mode">Self-hosted mode&lt;/h3>
&lt;p>This example uses the &lt;a href="https://github.com/dapr/quickstarts/tree/master/hello-world/README.md">hello world&lt;/a> quickstart.&lt;/p>
&lt;p>The following steps run the Sentry service locally with mTLS enabled, set up necessary environment variables to access certificates, and then launch both the node app and python app each referencing the Sentry service to apply the ACLs.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Follow these steps to run the &lt;a href="https://docs.dapr.io/operations/security/mtls/">Sentry service in self-hosted mode&lt;/a> with mTLS enabled&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In a command prompt, set these environment variables:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">&lt;li class="nav-item">&lt;a class="nav-link active"
id="tabs-3-linuxmacos-tab" data-toggle="tab" href="#tabs-3-linuxmacos" role="tab"
aria-controls="tabs-3-linuxmacos" aria-selected="true">
Linux/MacOS
&lt;/a>
&lt;/li>&lt;li class="nav-item">&lt;a class="nav-link"
id="tabs-3-windows-tab" data-toggle="tab" href="#tabs-3-windows" role="tab"
aria-controls="tabs-3-windows" aria-selected="false">
Windows
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-3-content">
&lt;div class="tab-pane fade show active" id="tabs-3-linuxmacos" role="tabpanel" aria-labelled-by="tabs-3-linuxmacos-tab">
&lt;br />&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">export DAPR_TRUST_ANCHORS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>cat $HOME/.dapr/certs/ca.crt&lt;span style="color:#e6db74">`&lt;/span>
export DAPR_CERT_CHAIN&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>cat $HOME/.dapr/certs/issuer.crt&lt;span style="color:#e6db74">`&lt;/span>
export DAPR_CERT_KEY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>cat $HOME/.dapr/certs/issuer.key&lt;span style="color:#e6db74">`&lt;/span>
export NAMESPACE&lt;span style="color:#f92672">=&lt;/span>default
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade" id="tabs-3-windows" role="tabpanel" aria-labelled-by="tabs-3-windows-tab">
&lt;br />&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-powershell" data-lang="powershell">$env:DAPR_TRUST_ANCHORS=$(Get-Content $env:USERPROFILE\.dapr\certs\ca.crt)
$env:DAPR_CERT_CHAIN=$(Get-Content $env:USERPROFILE\.dapr\certs\issuer.crt)
$env:DAPR_CERT_KEY=$(Get-Content $env:USERPROFILE\.dapr\certs\issuer.key)
$env:NAMESPACE=&lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Run daprd to launch a Dapr sidecar for the node.js app with mTLS enabled, referencing the local Sentry service:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">daprd --app-id nodeapp --dapr-grpc-port &lt;span style="color:#ae81ff">50002&lt;/span> -dapr-http-port &lt;span style="color:#ae81ff">3501&lt;/span> --log-level debug --app-port &lt;span style="color:#ae81ff">3000&lt;/span> --enable-mtls --sentry-address localhost:50001 --config nodeappconfig.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Run the node app in a separate command prompt:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">node app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>In another command prompt, set these environment variables:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">&lt;li class="nav-item">&lt;a class="nav-link active"
id="tabs-4-linuxmacos-tab" data-toggle="tab" href="#tabs-4-linuxmacos" role="tab"
aria-controls="tabs-4-linuxmacos" aria-selected="true">
Linux/MacOS
&lt;/a>
&lt;/li>&lt;li class="nav-item">&lt;a class="nav-link"
id="tabs-4-windows-tab" data-toggle="tab" href="#tabs-4-windows" role="tab"
aria-controls="tabs-4-windows" aria-selected="false">
Windows
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-4-content">
&lt;div class="tab-pane fade show active" id="tabs-4-linuxmacos" role="tabpanel" aria-labelled-by="tabs-4-linuxmacos-tab">
&lt;br />&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">export DAPR_TRUST_ANCHORS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>cat $HOME/.dapr/certs/ca.crt&lt;span style="color:#e6db74">`&lt;/span>
export DAPR_CERT_CHAIN&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>cat $HOME/.dapr/certs/issuer.crt&lt;span style="color:#e6db74">`&lt;/span>
export DAPR_CERT_KEY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>cat $HOME/.dapr/certs/issuer.key&lt;span style="color:#e6db74">`&lt;/span>
export NAMESPACE&lt;span style="color:#f92672">=&lt;/span>default
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade" id="tabs-4-windows" role="tabpanel" aria-labelled-by="tabs-4-windows-tab">
&lt;br />&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-powershell" data-lang="powershell">$env:DAPR_TRUST_ANCHORS=$(Get-Content $env:USERPROFILE\.dapr\certs\ca.crt)
$env:DAPR_CERT_CHAIN=$(Get-Content $env:USERPROFILE\.dapr\certs\issuer.crt)
$env:DAPR_CERT_KEY=$(Get-Content $env:USERPROFILE\.dapr\certs\issuer.key)
$env:NAMESPACE=&lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Run daprd to launch a Dapr sidecar for the python app with mTLS enabled, referencing the local Sentry service:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">daprd --app-id pythonapp --dapr-grpc-port &lt;span style="color:#ae81ff">50003&lt;/span> --metrics-port &lt;span style="color:#ae81ff">9092&lt;/span> --log-level debug --enable-mtls --sentry-address localhost:50001 --config pythonappconfig.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Run the python app in a separate command prompt:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">python app.py
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>You should see the calls to the node app fail in the python app command prompt based due to the &lt;strong>deny&lt;/strong> operation action in the nodeappconfig file. Change this action to &lt;strong>allow&lt;/strong> and re-run the apps and you should then see this call succeed.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="kubernetes-mode">Kubernetes mode&lt;/h3>
&lt;p>This example uses the &lt;a href="https://github.com/dapr/quickstarts/tree/master/hello-kubernetes/README.md">hello kubernetes&lt;/a> quickstart.&lt;/p>
&lt;p>You can create and apply the above configuration files &lt;code>nodeappconfig.yaml&lt;/code> and &lt;code>pythonappconfig.yaml&lt;/code> as described in the &lt;a href="https://docs.dapr.io/concepts/configuration-concept/">configuration&lt;/a> to the Kubernetes deployments.&lt;/p>
&lt;p>For example, below is how the pythonapp is deployed to Kubernetes in the default namespace with this pythonappconfig configuration file. Do the same for the nodeapp deployment and then look at the logs for the pythonapp to see the calls fail due to the &lt;strong>deny&lt;/strong> operation action set in the nodeappconfig file. Change this action to &lt;strong>allow&lt;/strong> and re-deploy the apps and you should then see this call succeed.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">pythonapp&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">python&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">python&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">python&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;pythonapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;pythonappconfig&amp;#34;&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">containers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">python&lt;/span>
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">dapriosamples/hello-k8s-python:edge&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Operations: 指南：配置 Dapr 来使用 gRPC</title><link>https://docs.dapr.io/operations/configuration/grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/configuration/grpc/</guid><description>
&lt;p>Dapr 为本地调用实现 HTTP 和 gRPC API 。 gRPC适用于低延迟、高性能的场景，并且使用原生客户端进行语言集成。&lt;/p>
&lt;p>You can find a list of auto-generated clients &lt;a href="https://docs.dapr.io/developing-applications/sdks/">here&lt;/a>.&lt;/p>
&lt;p>Dapr 运行时实现 &lt;a href="https://github.com/dapr/dapr/blob/master/dapr/proto/runtime/v1/dapr.proto">服务&lt;/a> ，应用程序可以通过 gRPC 进行通信。&lt;/p>
&lt;p>除了通过 gRPC 调用 Dapr ， Dapr 还可以通过 gRPC 与应用程序通信。 要做到这一点，应用程序需要托管一个gRPC服务器，并实现&lt;a href="https://github.com/dapr/dapr/blob/master/dapr/proto/runtime/v1/appcallback.proto">Dapr appcallback服务&lt;/a>。&lt;/p>
&lt;h2 id="配置-dapr-以通过-grpc-与应用程序通信">配置 dapr 以通过 gRPC 与应用程序通信&lt;/h2>
&lt;h3 id="自托管">自托管&lt;/h3>
&lt;p>当在自己托管模式下运行时，使用 &lt;code>--app-protocol&lt;/code> 标志告诉Dapr 使用 gRPC 来与应用程序对话：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --app-protocol grpc --app-port &lt;span style="color:#ae81ff">5005&lt;/span> node app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这将告诉Dapr通过gRPC与您的应用程序通过&lt;code>5005&lt;/code>端口进行通信。&lt;/p>
&lt;h3 id="kubernetes">Kubernetes&lt;/h3>
&lt;p>在Kubernetes上，在你的deployment YAML中设置以下注解:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;myapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-protocol&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;grpc&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;5005&amp;#34;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Operations: How-To: Handle large http body requests</title><link>https://docs.dapr.io/operations/configuration/increase-request-size/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/configuration/increase-request-size/</guid><description>
&lt;p>By default Dapr has a limit for the request body size which is set to 4 MB, however you can change this by defining &lt;code>dapr.io/http-max-request-size&lt;/code> annotation or &lt;code>--dapr-http-max-request-size&lt;/code> flag.&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">&lt;li class="nav-item">&lt;a class="nav-link active"
id="tabs-0-self-hosted-tab" data-toggle="tab" href="#tabs-0-self-hosted" role="tab"
aria-controls="tabs-0-self-hosted" aria-selected="true">
Self-hosted
&lt;/a>
&lt;/li>&lt;li class="nav-item">&lt;a class="nav-link"
id="tabs-0-kubernetes-tab" data-toggle="tab" href="#tabs-0-kubernetes" role="tab"
aria-controls="tabs-0-kubernetes" aria-selected="false">
Kubernetes
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">
&lt;div class="tab-pane fade show active" id="tabs-0-self-hosted" role="tabpanel" aria-labelled-by="tabs-0-self-hosted-tab">
&lt;br />&lt;p>When running in self hosted mode, use the &lt;code>--dapr-http-max-request-size&lt;/code> flag to configure Dapr to use non-default request body size:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr run --dapr-http-max-request-size &lt;span style="color:#ae81ff">16&lt;/span> node app.js
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This tells Dapr to set maximum request body size to &lt;code>16&lt;/code> MB.&lt;/p>
&lt;/div>
&lt;div class="tab-pane fade" id="tabs-0-kubernetes" role="tabpanel" aria-labelled-by="tabs-0-kubernetes-tab">
&lt;br />&lt;p>在Kubernetes上，在你的deployment YAML中设置以下注解:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">myapp&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;myapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;8000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/http-max-request-size&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-annotations/">Dapr Kubernetes pod annotations spec&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>