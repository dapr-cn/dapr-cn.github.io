<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr 文档库 – 在 Kubernetes 模式中部署和运行 Dapr</title><link>https://docs.dapr.io/operations/hosting/kubernetes/</link><description>Recent content in 在 Kubernetes 模式中部署和运行 Dapr on Dapr 文档库</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.dapr.io/operations/hosting/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Operations: Kubernetes上的 Dapr 概述</title><link>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-overview/</guid><description>
&lt;h2 id="kubernetes上的-dapr">Kubernetes上的 Dapr&lt;/h2>
&lt;p>Dapr 可以配置为在任何 Kubernetes 集群上运行。 为了实现这一目标，Dapr首先部署了&lt;code>dapr-sidecar-injector&lt;/code>、&lt;code>dapr-operator&lt;/code>、&lt;code>dapr-placement&lt;/code>和&lt;code>dapr-sentry&lt;/code>Kubernetes服务。 这些都提供了一流的集成，使Dapr的应用运行变得简单。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>dapr-operator:&lt;/strong> 管理 &lt;a href="https://docs.dapr.io/operations/components/">组件&lt;/a> 更新和 Dapr 的 Kubernetes 服务终结点(状态存储、发布/订阅 等)。&lt;/li>
&lt;li>&lt;strong>dapr-sidecar-injector:&lt;/strong> 将 Dapr 注入 &lt;a href="#adding-dapr-to-a-kubernetes-cluster">annotated&lt;/a> deployment pods，并添加环境变量 &lt;code>DAPR_HTTP_PORT&lt;/code> 和 &lt;code>DAPR_GRPC_PORT&lt;/code>，以使用户定义的应用程序能够轻松地与 Dapr 通信，而无需硬编码 Dapr 端口值。&lt;/li>
&lt;li>&lt;strong>dapr-placement:&lt;/strong> 仅用于 &lt;a href="https://docs.dapr.io/developing-applications/building-blocks/actors/">Actors&lt;/a>。 创建映射表，将 actor 实例映射到 pods。&lt;/li>
&lt;li>&lt;strong>dapr-sentry:&lt;/strong> 管理服务之间的mTLS并作为证书颁发机构。 有关详细信息，请阅读&lt;a href="https://docs.dapr.io/concepts/security-concept/">安全概述&lt;/a>。&lt;/li>
&lt;/ul>
&lt;img src="https://docs.dapr.io/images/overview_kubernetes.png" width=800>
&lt;h2 id="在-kubernetes-集群上部署-dapr">在 Kubernetes 集群上部署 Dapr&lt;/h2>
&lt;p>阅读 &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-deploy/">本指南&lt;/a> 来学习如何将 Dapr 部署到您的 Kubernetes 集群。&lt;/p>
&lt;h2 id="将-dapr-添加到-kubernetes-deployment">将 Dapr 添加到 Kubernetes deployment&lt;/h2>
&lt;p>在你的 Kubernetes 集群中部署和运行一个启用了 Dapr 的应用程序很简单，只需在部署方案中添加一些注释即可。 要给您的服务提供一个 &lt;code>id&lt;/code> 和 &lt;code>port&lt;/code> 已知的 Dapr, 通过配置进行追踪并启动 Dapr sidecar 容器, 你要像这样注释你的 Kubernetes deployment。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml"> &lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;nodeapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;3000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;tracing&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="快速入门">快速入门&lt;/h2>
&lt;p>您可以 &lt;a href="https://github.com/dapr/quickstarts/tree/master/hello-kubernetes">在这里&lt;/a> 看到一些例子，在 Kubernetes 的入门示例中。&lt;/p>
&lt;h2 id="相关链接">相关链接&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-deploy/">将 Dapr 部署到 Kubernetes 集群&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-upgrade/">更新 Kubernetes 集群中的 Dapr&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-production/">Kubernetes 的 Dapr 生产环境配置指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dapr/quickstarts/tree/master/hello-kubernetes">Dapr Kubernetes 快速入门&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: 在Kubernetes集群上部署Dapr</title><link>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-deploy/</guid><description>
&lt;p>你可以使用 Dapr CLI 或 Helm 在 Kubernetes 中部署 Dapr&lt;/p>
&lt;p>有关部署到Kubernetes集群的内容的更多信息，请阅读&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-overview/">Kubernetes概述&lt;/a>。&lt;/p>
&lt;h2 id="前期准备">前期准备&lt;/h2>
&lt;ul>
&lt;li>安装 &lt;a href="https://docs.dapr.io/getting-started/install-dapr-cli/">Dapr CLI&lt;/a>&lt;/li>
&lt;li>安装&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">kubectl&lt;/a>&lt;/li>
&lt;li>Kubernetes 集群 (如有需要可参考下文)&lt;/li>
&lt;/ul>
&lt;h3 id="创建集群">创建集群&lt;/h3>
&lt;p>你可以在任何 Kubernetes 集群上安装 Dapr. 下面的链接可以提供帮助:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/cluster/setup-minikube/">Setup Minikube Cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/cluster/setup-aks/">Setup Azure Kubernetes Service Cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/quickstart">Setup Google Cloud Kubernetes Engine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html">Setup Amazon Elastic Kubernetes Service&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Hybrid clusters&lt;/h4>
Dapr CLI 和 Dapr Helm 图表都会自动关联地部署到带有标签&lt;code>kubernetes.io/os=linux&lt;/code>的节点上。 如果你的应用程序有需要，你也可以将 Dapr 部署到 Windows 节点。 更多信息参见 &lt;a href="%7B%7BX%1A49X%7D%7D">部署到Linux/Windows混合型Kubernetes集群&lt;/a>.
&lt;/div>
&lt;h2 id="使用-dapr-cli-安装">使用 Dapr CLI 安装&lt;/h2>
&lt;p>你可以使用 &lt;a href="https://docs.dapr.io/getting-started/install-dapr-cli/">Dapr CLI&lt;/a> 来把 Dapr 安装到 Kubernetes 集群上。&lt;/p>
&lt;h3 id="安装-dapr">安装 Dapr&lt;/h3>
&lt;p>&lt;code>-k&lt;/code> 标志在当前上下文中初始化 Kubernetes 集群上的 Dapr.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Ensure correct cluster is set&lt;/h4>
请确保设置了正确的 &amp;ldquo;目标&amp;rdquo; 集群。 检查 &lt;code>kubectl 上下文 (kubectl config kubectl config get-contexts)&lt;/code> 以进行验证。 你可以使用 &lt;code>kubectl config use-context &amp;lt;CONTEXT&amp;gt;&lt;/code>来设置其他的上下文。
&lt;/div>
&lt;p>在您的本地机器上运行以下命令，在您的集群上启动Dapr:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">⌛ Making the jump to hyperspace...
✅ Deploying the Dapr control plane to your cluster...
✅ Success! Dapr has been installed to namespace dapr-system. To verify, run &lt;span style="color:#e6db74">&amp;#34;dapr status -k&amp;#34;&lt;/span> in your terminal. To get started, go here: https://aka.ms/dapr-getting-started
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="在自定义命名空间安装">在自定义命名空间安装&lt;/h3>
&lt;p>初始化 Dapr 时默认的命名空间是&lt;code>dapr-system&lt;/code>。 你可以用 &lt;code>-n&lt;/code> 标志来覆盖它。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k -n mynamespace
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="以高可用方式安装">以高可用方式安装:&lt;/h3>
&lt;p>你可以在 &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-production/">生产环境&lt;/a> 中，为在dapr-system 命名空间里的每个控制平面 pod 设置3个副本的方式运行 Dapr。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k --enable-ha&lt;span style="color:#f92672">=&lt;/span>true
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="关闭-mtls">关闭 mTLS&lt;/h3>
&lt;p>Dapr初始化默认开启[mTLS]({&amp;lt; ref &amp;ldquo;security-concept.md#sidecar-to-sidecar-communication&amp;rdquo; &amp;gt;}})。 你可以用下面的命令关闭:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k --enable-mtls&lt;span style="color:#f92672">=&lt;/span>false
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用-cli-卸载-kubernetes-上的-dapr">使用 CLI 卸载 Kubernetes 上的 Dapr&lt;/h3>
&lt;p>在您的本地机器上运行以下命令，以卸载你的集群上的 Dapr:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr uninstall -k
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用-helm-安装推荐">使用 Helm 安装(推荐)&lt;/h2>
&lt;p>你可以使用 Helm 3 图表在 Kubernetes 上安装 Dapr 。&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Ensure you are on Helm v3&lt;/h4>
最新的 Dapr Helm 图表不再支持 Helm v2。 请按照这篇文章 &lt;a href="https://helm.sh/blog/migrate-from-helm-v2-to-helm-v3/">Helm迁移指南&lt;/a> 从Helm v2 迁移到Helm v3。
&lt;/div>
&lt;h3 id="添加和安装-dapr-helm-图表">添加和安装 Dapr Helm 图表&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>请确保你的机器已经安装了 &lt;a href="https://github.com/helm/helm/releases">Helm 3&lt;/a> 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>添加 Helm 库并更新&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add dapr https://dapr.github.io/helm-charts/
helm repo update
&lt;span style="color:#75715e"># See which chart versions are available&lt;/span>
helm search repo dapr --devel --versions
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>将 Dapr 图表安装在你的集群的 &lt;code>dapr-system&lt;/code>命名空间中。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm upgrade --install dapr dapr/dapr &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--version&lt;span style="color:#f92672">=&lt;/span>1.0.1 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--namespace dapr-system &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--create-namespace &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--wait
&lt;/code>&lt;/pre>&lt;/div>&lt;p>以高可用的方式安装:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm upgrade --install dapr dapr/dapr &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--version&lt;span style="color:#f92672">=&lt;/span>1.0.1 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--namespace dapr-system &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--create-namespace &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--set global.ha.enabled&lt;span style="color:#f92672">=&lt;/span>true &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--wait
&lt;/code>&lt;/pre>&lt;/div>&lt;p>有关使用 Helm 安装和升级 Dapr 的更多信息，请参阅 &lt;a href="%7B%7BX%1A69X%7D%7D">Kubernetes上的生产环境部署指南&lt;/a>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="卸载-kubernetes-上的-dapr">卸载 Kubernetes 上的 Dapr&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm uninstall dapr --namespace dapr-system
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="更多信息">更多信息&lt;/h3>
&lt;ul>
&lt;li>阅读&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-production/">本指南&lt;/a>，了解生产环境中推荐的 Helm 图表值。&lt;/li>
&lt;li>请参阅&lt;a href="https://github.com/dapr/dapr/blob/master/charts/dapr/README.md">本页面&lt;/a>，了解有关Dapr Helm图表的详细信息。&lt;/li>
&lt;/ul>
&lt;h2 id="安装验证">安装验证&lt;/h2>
&lt;p>当图表安装完成后，验证dapr-operator、dapr-placement、dapr-sidecar-injector和dapr-sentry 的pods是否在&lt;code>dapr-system&lt;/code>命名空间中运行。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods --namespace dapr-system
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">NAME READY STATUS RESTARTS AGE
dapr-dashboard-7bd6cbf5bf-xglsr 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-operator-7bd6cbf5bf-xglsr 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-placement-7f8f76778f-6vhl2 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-sidecar-injector-8555576b6f-29cqm 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-sentry-9435776c7f-8f7yd 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下一步">下一步&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/getting-started/configure-state-pubsub/">如何操作：配置 状态存储 和 发布/订阅 消息代理&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: Deploy to hybrid Linux/Windows Kubernetes clusters</title><link>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-hybrid-clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-hybrid-clusters/</guid><description>
&lt;p>Dapr supports running on kubernetes clusters with windows nodes. You can run your Dapr microservices exclusively on Windows, exclusively on Linux, or a combination of both. This is helpful to users who may be doing a piecemeal migration of a legacy application into a Dapr Kubernetes cluster. You can run your Dapr microservices exclusively on Windows, exclusively on Linux, or a combination of both. This is helpful to users who may be doing a piecemeal migration of a legacy application into a Dapr Kubernetes cluster.&lt;/p>
&lt;p>Kubernetes uses a concept called node affinity so that you can denote whether you want your application to be launched on a Linux node or a Windows node. Kubernetes uses a concept called node affinity so that you can denote whether you want your application to be launched on a Linux node or a Windows node. When deploying to a cluster which has both Windows and Linux nodes, you must provide affinity rules for your applications, otherwise the Kubernetes scheduler might launch your application on the wrong type of node.&lt;/p>
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;p>You will need a Kubernetes cluster with Windows nodes. You will need a Kubernetes cluster with Windows nodes. Many Kubernetes providers support the automatic provisioning of Windows enabled Kubernetes clusters.&lt;/p>
&lt;ol>
&lt;li>Follow your preferred provider&amp;rsquo;s instructions for setting up a cluster with Windows enabled&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/windows-container-cli">Setting up Windows on Azure AKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/windows-support.html">Setting up Windows on AWS EKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster-windows">Setting up Windows on Google Cloud GKE&lt;/a>&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>
&lt;p>Once you have set up the cluster, you should see that it has both Windows and Linux nodes available&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get nodes -o wide
NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME
aks-nodepool1-11819434-vmss000000 Ready agent 6d v1.17.9 10.240.0.4 &amp;lt;none&amp;gt; Ubuntu 16.04.6 LTS 4.15.0-1092-azure docker://3.0.10+azure
aks-nodepool1-11819434-vmss000001 Ready agent 6d v1.17.9 10.240.0.35 &amp;lt;none&amp;gt; Ubuntu 16.04.6 LTS 4.15.0-1092-azure docker://3.0.10+azure
aks-nodepool1-11819434-vmss000002 Ready agent 5d10h v1.17.9 10.240.0.129 &amp;lt;none&amp;gt; Ubuntu 16.04.6 LTS 4.15.0-1092-azure docker://3.0.10+azure
akswin000000 Ready agent 6d v1.17.9 10.240.0.66 &amp;lt;none&amp;gt; Windows Server &lt;span style="color:#ae81ff">2019&lt;/span> Datacenter 10.0.17763.1339 docker://19.3.5
akswin000001 Ready agent 6d v1.17.9 10.240.0.97 &amp;lt;none&amp;gt; Windows Server &lt;span style="color:#ae81ff">2019&lt;/span> Datacenter 10.0.17763.1339 docker://19.3.5
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="installing-the-dapr-control-plane">Installing the Dapr control plane&lt;/h2>
&lt;p>If you are installing using the Dapr CLI or via a helm chart, simply follow the normal deployment procedures: &lt;a href="https://docs.dapr.io/getting-started/install-dapr-selfhost/#installing-Dapr-on-a-kubernetes-cluster">Installing Dapr on a Kubernetes cluster&lt;/a>&lt;/p>
&lt;p>Affinity will be automatically set for &lt;code>kubernetes.io/os=linux&lt;/code>. Affinity will be automatically set for kubernetes.io/os=linux. This will be sufficient for most users, as Kubernetes requires at least one Linux node pool.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> Dapr control plane containers are built and tested for both windows and linux, however, we generally recommend using the linux control plane containers. They tend to be smaller and have a much larger user base. They tend to be smaller and have a much larger user base.&lt;/p>
&lt;/blockquote>
&lt;p>If you understand the above, but want to deploy the Dapr control plane to Windows, you can do so by setting:&lt;/p>
&lt;pre>&lt;code>helm install dapr dapr/dapr --set global.daprControlPlaneOs=windows
&lt;/code>&lt;/pre>&lt;h2 id="installing-dapr-applications">Installing Dapr applications&lt;/h2>
&lt;h3 id="windows-applications">Windows applications&lt;/h3>
&lt;p>In order to launch a Dapr application on Windows, you&amp;rsquo;ll first need to create a Docker container with your application installed. For a step by step guide see &lt;a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/set-up-environment">Get started: Prep Windows for containers&lt;/a>. Once you have a docker container with your application, create a deployment YAML file with node affinity set to kubernetes.io/os: windows. For a step by step guide see &lt;a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/set-up-environment">Get started: Prep Windows for containers&lt;/a>. Once you have a docker container with your application, create a deployment YAML file with node affinity set to kubernetes.io/os: windows.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a deployment YAML&lt;/p>
&lt;p>Here is a sample deployment with nodeAffinity set to &amp;ldquo;windows&amp;rdquo;. Modify as needed for your application.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yourwinapp&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">applabel&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">applablel&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">applabel&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;addapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;6000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;appconfig&amp;#34;&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">containers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">add&lt;/span>
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">yourreponsitory/your-windows-dapr-container:your-tag&lt;/span>
&lt;span style="color:#f92672">ports&lt;/span>:
- &lt;span style="color:#f92672">containerPort&lt;/span>: &lt;span style="color:#ae81ff">6000&lt;/span>
&lt;span style="color:#f92672">imagePullPolicy&lt;/span>: &lt;span style="color:#ae81ff">Always&lt;/span>
&lt;span style="color:#f92672">affinity&lt;/span>:
&lt;span style="color:#f92672">nodeAffinity&lt;/span>:
&lt;span style="color:#f92672">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>:
&lt;span style="color:#f92672">nodeSelectorTerms&lt;/span>:
- &lt;span style="color:#f92672">matchExpressions&lt;/span>:
- &lt;span style="color:#f92672">key&lt;/span>: &lt;span style="color:#ae81ff">kubernetes.io/os&lt;/span>
&lt;span style="color:#f92672">operator&lt;/span>: &lt;span style="color:#ae81ff">In&lt;/span>
&lt;span style="color:#f92672">values&lt;/span>:
- &lt;span style="color:#ae81ff">windows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This deployment yaml will be the same as any other dapr application, with an additional spec.template.spec.affinity section as shown above.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deploy to your Kubernetes cluster&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f deploy_windows.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="linux-applications">Linux applications&lt;/h3>
&lt;p>If you have already got a dapr application with runs on Linux, you&amp;rsquo;ll still need to add affinity rules as above, but choose linux affinity instead.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a deployment YAML&lt;/p>
&lt;p>Here is a sample deployment with nodeAffinity set to &amp;ldquo;linux&amp;rdquo;. Modify as needed for your application.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yourlinuxapp&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yourlabel&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yourlabel&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yourlabel&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;addapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;6000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;appconfig&amp;#34;&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">containers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">add&lt;/span>
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">yourreponsitory/your-application:your-tag&lt;/span>
&lt;span style="color:#f92672">ports&lt;/span>:
- &lt;span style="color:#f92672">containerPort&lt;/span>: &lt;span style="color:#ae81ff">6000&lt;/span>
&lt;span style="color:#f92672">imagePullPolicy&lt;/span>: &lt;span style="color:#ae81ff">Always&lt;/span>
&lt;span style="color:#f92672">affinity&lt;/span>:
&lt;span style="color:#f92672">nodeAffinity&lt;/span>:
&lt;span style="color:#f92672">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>:
&lt;span style="color:#f92672">nodeSelectorTerms&lt;/span>:
- &lt;span style="color:#f92672">matchExpressions&lt;/span>:
- &lt;span style="color:#f92672">key&lt;/span>: &lt;span style="color:#ae81ff">kubernetes.io/os&lt;/span>
&lt;span style="color:#f92672">operator&lt;/span>: &lt;span style="color:#ae81ff">In&lt;/span>
&lt;span style="color:#f92672">values&lt;/span>:
- &lt;span style="color:#ae81ff">linux&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Deploy to your Kubernetes cluster&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f deploy_linux.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="cleanup">Cleanup&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl delete -f deploy_linux.yaml
kubectl delete -f deploy_windows.yaml
helm uninstall dapr
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="related-links">Related links&lt;/h2>
&lt;ul>
&lt;li>See the &lt;a href="https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/">official Kubernetes documentation&lt;/a> for examples of more advanced configuration via node affinity&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/set-up-environment">Get started: Prep Windows for containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/windows-container-cli">Setting up a Windows enabled Kubernetes cluster on Azure AKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/windows-support.html">Setting up a Windows enabled Kubernetes cluster on AWS EKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster-windows">Setting up Windows on Google Cloud GKE&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: Dapr Kubernetes pod annotations spec</title><link>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-annotations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-annotations/</guid><description>
&lt;p>The following table shows all the supported pod Spec annotations supported by Dapr.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Annotation&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>dapr.io/enabled&lt;/code>&lt;/td>
&lt;td>Setting this paramater to &lt;code>true&lt;/code> injects the Dapr sidecar into the pod&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-port&lt;/code>&lt;/td>
&lt;td>This parameter tells Dapr which port your application is listening on&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-id&lt;/code>&lt;/td>
&lt;td>The unique ID of the application. The unique ID of the application. Used for service discovery, state encapsulation and the pub/sub consumer ID&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/log-level&lt;/code>&lt;/td>
&lt;td>Sets the log level for the Dapr sidecar. Sets the log level for the Dapr sidecar. Allowed values are &lt;code>debug&lt;/code>, &lt;code>info&lt;/code>, &lt;code>warn&lt;/code>, &lt;code>error&lt;/code>. Default is &lt;code>info&lt;/code> Default is &lt;code>info&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/config&lt;/code>&lt;/td>
&lt;td>Tells Dapr which Configuration CRD to use&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/log-as-json&lt;/code>&lt;/td>
&lt;td>Setting this parameter to &lt;code>true&lt;/code> outputs logs in JSON format. Default is &lt;code>false&lt;/code> Default is &lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/enable-profiling&lt;/code>&lt;/td>
&lt;td>Setting this paramater to &lt;code>true&lt;/code> starts the Dapr profiling server on port &lt;code>7777&lt;/code>. Default is &lt;code>false&lt;/code> Default is &lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/api-token-secret&lt;/code>&lt;/td>
&lt;td>Tells Dapr which Kubernetes secret to use for token based API authentication. By default this is not set. By default this is not set.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-protocol&lt;/code>&lt;/td>
&lt;td>Tells Dapr which protocol your application is using. Tells Dapr which protocol your application is using. Valid options are &lt;code>http&lt;/code> and &lt;code>grpc&lt;/code>. Default is &lt;code>http&lt;/code> Default is &lt;code>http&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-max-concurrency&lt;/code>&lt;/td>
&lt;td>Limit the concurrency of your application. Limit the concurrency of your application. A valid value is any number larger than &lt;code>0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-ssl&lt;/code>&lt;/td>
&lt;td>Tells Dapr to invoke the app over an insecure SSL connection. Applies to both HTTP and gRPC. Default is &lt;code>false&lt;/code>. Applies to both HTTP and gRPC. Default is &lt;code>false&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/metrics-port&lt;/code>&lt;/td>
&lt;td>Sets the port for the sidecar metrics server. Default is &lt;code>9090&lt;/code> Default is &lt;code>9090&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-cpu-limit&lt;/code>&lt;/td>
&lt;td>Maximum amount of CPU that the Dapr sidecar can use. See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-memory-limit&lt;/code>&lt;/td>
&lt;td>Maximum amount of Memory that the Dapr sidecar can use. See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-cpu-request&lt;/code>&lt;/td>
&lt;td>Amount of CPU that the Dapr sidecar requests. See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-memory-request&lt;/code>&lt;/td>
&lt;td>Amount of Memory that the Dapr sidecar requests .See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-delay-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after the sidecar container has started before liveness probe is initiated. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code> Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-timeout-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after which the sidecar liveness probe times out. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-period-seconds&lt;/code>&lt;/td>
&lt;td>How often (in seconds) to perform the sidecar liveness probe. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>6&lt;/code> Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>6&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-threshold&lt;/code>&lt;/td>
&lt;td>When the sidecar liveness probe fails, Kubernetes will try N times before giving up. In this case, the Pod will be marked Unhealthy. Read more about &lt;code>failureThreshold&lt;/code> &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-delay-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after the sidecar container has started before readiness probe is initiated. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code> Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-timeout-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after which the sidecar readiness probe times out. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code> Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-period-seconds&lt;/code>&lt;/td>
&lt;td>How often (in seconds) to perform the sidecar readiness probe. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>6&lt;/code> Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>6&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-threshold&lt;/code>&lt;/td>
&lt;td>When the sidecar readiness probe fails, Kubernetes will try N times before giving up. In this case, the Pod will be marked Unready. Read more about &lt;code>failureThreshold&lt;/code> &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/http-max-request-size&lt;/code>&lt;/td>
&lt;td>Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is &lt;code>4&lt;/code> MB Default is &lt;code>4&lt;/code> MB&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Operations: Kubernetes生产环境配置指南</title><link>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-production/</guid><description>
&lt;h2 id="集群能力要求">集群能力要求&lt;/h2>
&lt;p>对于生产环境部署的Kubernetes集群，建议你运行一个至少由3个工作节点组成的集群，以支持高可用的控制平面安装。 可以以下面的资源设置起步。 要求会根据集群大小和其他因素而有所不同，因此需要进行单独测试，以找到适合你的环境的值。&lt;/p>
&lt;p>&lt;em>注：有关 CPU 和内存资源单位及其含义的更多信息，请参见&lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes">这个&lt;/a>链接。&lt;/em>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Deployment&lt;/th>
&lt;th>CPU&lt;/th>
&lt;th>Memory&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Operator&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 100m&lt;/td>
&lt;td>Limit: 200Mi, Request: 100Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sidecar Injector&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 100m&lt;/td>
&lt;td>Limit: 200Mi, Request: 30Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sentry&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 100m&lt;/td>
&lt;td>Limit: 200Mi, Request: 30Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Placement&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 250m&lt;/td>
&lt;td>Limit: 150Mi, Request: 75Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Dashboard&lt;/strong>&lt;/td>
&lt;td>Limit: 200m, Request: 50m&lt;/td>
&lt;td>Limit: 200Mi, Request: 20Mi&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="helm">Helm&lt;/h3>
&lt;p>使用 Helm 安装 Dapr 时，没有默认限制/请求值。 每个组件都有一个&lt;code>resources&lt;/code>选项(例如，&lt;code>dapr_dashboard.resources&lt;/code>)，你可以用它来调整Dapr控制平面以适应你的环境。 &lt;a href="https://github.com/dapr/dapr/blob/master/charts/dapr/README.md">Helm chart readme&lt;/a>有详细的信息和示例。 在本机/开发环境安装的时候，你可以跳过配置&lt;code>resources&lt;/code>选项。&lt;/p>
&lt;h3 id="可选组件">可选组件&lt;/h3>
&lt;p>下面的 Dapr 控制平面deployment是可选的：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Placement&lt;/strong>-用于Dapr Actors&lt;/li>
&lt;li>&lt;strong>Sentry&lt;/strong> - 用于服务间调用的mTLS&lt;/li>
&lt;li>&lt;strong>Dashboard&lt;/strong> - 用于集群的操作视图&lt;/li>
&lt;/ul>
&lt;h2 id="sidecar-资源设置">Sidecar 资源设置&lt;/h2>
&lt;p>请参见 &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-annotations/">这里&lt;/a>来为 Dapr sidecar设置资源分配， 与资源约束相关的具体注解如下:&lt;/p>
&lt;ul>
&lt;li>&lt;code>dapr.io/sidecar-cpu-limit&lt;/code>&lt;/li>
&lt;li>&lt;code>dapr.io/sidecar-memory-limit&lt;/code>&lt;/li>
&lt;li>&lt;code>dapr.io/sidecar-cpu-request&lt;/code>&lt;/li>
&lt;li>&lt;code>dapr.io/sidecar-memory-request&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>如果没有设置，dapr 边车将在没有资源配置的情况下运行，这可能会引起问题。 在生产环境下安装时，强烈建议调整这些配置。&lt;/p>
&lt;p>有关在 Kubernetes 中配置资源的详细信息，请参见 &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/">将内存资源分配给容器和 Pods&lt;/a>和 &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/">将 CPU 资源分配给容器和 Pods&lt;/a>。&lt;/p>
&lt;p>在生产环境中，dapr 边车的设置示例:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>CPU&lt;/th>
&lt;th>Memory&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Limit: 300m, Request: 100m&lt;/td>
&lt;td>Limit: 1000Mi, Request: 250Mi&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;em>注意：由于Dapr的目的是为了替你的应用程序完成大部分的I/O任务，因此给Dapr的资源能让您大幅减少其他应用程序的资源分配。&lt;/em>&lt;/p>
&lt;p>上面的CPU和内存限制是出于Dapr存在大量的I/O密集型操作的考虑。 强烈建议你使用工具监控工具对边车（和应用）容器进行基准监控，并根据基准来调整这些设置。&lt;/p>
&lt;h2 id="高可用模式">高可用模式&lt;/h2>
&lt;p>当在生产环境中部署Dapr时，建议使用控制平面的高可用配置进行部署，在dapr-system命名空间中为每个控制平面pod创建3个副本。&lt;/p>
&lt;h2 id="用helm部署dapr">用Helm部署Dapr&lt;/h2>
&lt;p>有关使用 Helm 部署 Dapr 的完整指南，请访问 &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-deploy/#install-with-helm-advanced">本指南&lt;/a>。&lt;/p>
&lt;h3 id="参数文件">参数文件&lt;/h3>
&lt;p>建议创建一个文件来存储值，而不是在命令行中指定参数。 这个文件应当应用代码版本控制，这样你就可以跟踪对它的修改。&lt;/p>
&lt;p>关于您可以在 值文件中设置的所有可用选项的完整列表（或使用 &lt;code>--set&lt;/code> 命令行选项），请参阅 &lt;a href="https://github.com/dapr/dapr/blob/master/charts/dapr/README.md">https://github.com/dapr/dapr/blob/master/charts/dapr/README.md&lt;/a>。&lt;/p>
&lt;p>你也可以不使用&lt;code>helm install&lt;/code>或&lt;code>helm upgrade&lt;/code>，如下图所示，你可以运行&lt;code>helm upgrade --install&lt;/code> - 这将动态地决定是安装还是升级。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e"># add/update the helm repo&lt;/span>
helm repo add dapr https://dapr.github.io/helm-charts/
helm repo update
&lt;span style="color:#75715e"># See which chart versions are available&lt;/span>
helm search repo dapr --devel --versions
&lt;span style="color:#75715e"># create a values file to store variables&lt;/span>
touch values.yml
cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt; EOF &amp;gt;&amp;gt; values.yml
&lt;/span>&lt;span style="color:#e6db74">global.ha.enabled: true
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;span style="color:#75715e"># run install/upgrade&lt;/span>
helm install dapr dapr/dapr &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --version&lt;span style="color:#f92672">=&lt;/span>&amp;lt;Dapr chart version&amp;gt; &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --namespace dapr-system &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --create-namespace &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --values values.yml &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --wait
&lt;span style="color:#75715e"># verify the installation&lt;/span>
kubectl get pods --namespace dapr-system
&lt;/code>&lt;/pre>&lt;/div>&lt;p>该命令将为dapr-system命名空间中每个控制平面service创建3个副本。&lt;/p>
&lt;p>&lt;em>Dapr Cli 和 Dapr Helm 图表都会自动关联地部署到带有标签&lt;code>kubernetes.io/os=linux&lt;/code>的节点上。 你可以将Dapr控制平面部署到Windows节点，但大多数用户应该不需要。 更多信息参见&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-hybrid-clusters/">部署到Linux/Windows混合型Kubernetes集群&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="用-helm-升级-dapr">用 Helm 升级 Dapr&lt;/h2>
&lt;p>Dapr支持零停机升级， 升级包括以下步骤：&lt;/p>
&lt;ol>
&lt;li>升级CLI版本(可选但推荐)&lt;/li>
&lt;li>更新Dapr control plane&lt;/li>
&lt;li>更新数据平面(Dapr sidecars)&lt;/li>
&lt;/ol>
&lt;h3 id="升级cli">升级CLI&lt;/h3>
&lt;p>要升级 Dapr CLI，&lt;a href="https://github.com/dapr/cli/releases">下载 CLI 的最新版本&lt;/a>，并确保它在您的当前路径中。&lt;/p>
&lt;h3 id="更新dapr-control-plane">更新Dapr control plane&lt;/h3>
&lt;p>请参阅 &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-upgrade/#helm">在 Kubernetes 集群上升级 Dapr 的步骤&lt;/a>。&lt;/p>
&lt;h3 id="更新数据平面sidecar">更新数据平面(sidecar)&lt;/h3>
&lt;p>最后一步是更新正在运行Dapr的pod，以接替新版本的Dapr运行时。 要完成这一步，只需对有&lt;code>dapr.io/enabled&lt;/code>注解的任何deployment发送rollout restart命令即可。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl rollout restart deploy/&amp;lt;Application deployment name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>要查看所有已启用Dapr的deployment列表，您可以使用&lt;a href="https://github.com/dapr/dashboard">Dapr Dashboard&lt;/a>或使用Dapr CLI运行以下命令。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr list -k
APP ID APP PORT AGE CREATED
nodeapp &lt;span style="color:#ae81ff">3000&lt;/span> 16h 2020-07-29 17:16.22
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="建议的安全配置">建议的安全配置&lt;/h2>
&lt;p>当正确配置时，Dapr可确保安全通信， 它还可以通过一些内置的功能使你的应用更加安全。&lt;/p>
&lt;p>建议生产环境的部署涵盖以下设置：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>启用相互验证 (mTLS)&lt;/strong>。 请注意，Dapr默认开启了mTLS。 有关如何携带自定义证书的详细信息，请参见 &lt;a href="https://docs.dapr.io/operations/security/mtls/#bringing-your-own-certificates">这里&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>启用App to Dapr API认证&lt;/strong>。 这是你的应用程序和Dapr边车之间的通信。 为了防止未经授权的应用程序访问Dapr API，建议启用Dapr的基于令牌的认证。 请参阅&lt;a href="https://docs.dapr.io/operations/security/api-token/">在 Dapr 中启用 API 令牌认证。&lt;/a> 以了解详情&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>启用Dapr to App API验证&lt;/strong>。 这是Dapr和你的应用程序之间的通信。 这能确保Dapr知道它正在与授权的应用程序通信。 请参阅&lt;a href="https://docs.dapr.io/operations/security/app-api-token/">使用令牌认证对来自Dapr的请求进行认证&lt;/a> 了解详情&lt;/p>
&lt;/li>
&lt;li>
&lt;p>所有的组件YAML都应该把&lt;strong>密钥数据配置在密钥存储中&lt;/strong>，而不是硬编码在YAML文件中。 请参阅 &lt;a href="https://docs.dapr.io/operations/components/component-secrets/">这里&lt;/a>，了解如何在Dapr组件中使用秘密。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dapr &lt;strong>控制平面安装在一个专用的命名空间&lt;/strong>上，如&lt;code>dapr-system&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dapr还支持&lt;strong>框定应用程序的组件范围&lt;/strong>。 这不是必要的，可以根据您的安全需求启用。 请参阅 &lt;a href="https://docs.dapr.io/operations/components/component-scopes/">这里&lt;/a> 以获取更多信息。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="追踪和度量配置">追踪和度量配置&lt;/h2>
&lt;p>Dapr 默认启用追踪和度量。 &lt;em>建议&lt;/em>在生产环境中为您的应用程序和Dapr控制平面设置分布式追踪和度量。&lt;/p>
&lt;p>如果你已经有了自己的可观察测性支持组件，你可以禁用Dapr的追踪和度量。&lt;/p>
&lt;h3 id="追踪">追踪&lt;/h3>
&lt;p>要为 Dapr 配置后台追踪，请访问&lt;a href="https://docs.dapr.io/operations/monitoring/tracing/setup-tracing/">这个&lt;/a>链接。&lt;/p>
&lt;h3 id="度量">度量&lt;/h3>
&lt;p>对于度量，Dapr在9090端口上暴露了一个Prometheus端点，可以被Prometheus收集。&lt;/p>
&lt;p>要为 Dapr 配置Prometheus、Grafana 和其他监控工具，请访问 &lt;a href="https://docs.dapr.io/operations/monitoring/">这个&lt;/a>链接。&lt;/p></description></item><item><title>Operations: Upgrade Dapr on a Kubernetes cluster</title><link>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-upgrade/</guid><description>
&lt;h2 id="前期准备">前期准备&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/getting-started/install-dapr-cli/">Dapr CLI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/helm/helm/releases">Helm 3&lt;/a> (if using Helm)&lt;/li>
&lt;/ul>
&lt;h2 id="upgrade-existing-cluster-to-101">Upgrade existing cluster to 1.0.1&lt;/h2>
&lt;p>There are two ways to upgrade the Dapr control plane on a Kubernetes cluster using either the Dapr CLI or Helm.&lt;/p>
&lt;h3 id="dapr-cli">Dapr CLI&lt;/h3>
&lt;p>The example below shows how to upgrade to version 1.0.1:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr upgrade -k --runtime-version&lt;span style="color:#f92672">=&lt;/span>1.0.1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can provide all the available Helm chart configurations using the Dapr CLI. See &lt;a href="https://github.com/dapr/cli#supplying-helm-values">here&lt;/a> for more info. See &lt;a href="https://github.com/dapr/cli#supplying-helm-values">here&lt;/a> for more info.&lt;/p>
&lt;h3 id="helm">Helm&lt;/h3>
&lt;p>From version 1.0.0 onwards, upgrading Dapr using Helm is no longer a disruptive action since existing certificate values will automatically be re-used.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Upgrade Dapr from 1.0.0 (or newer) to any [NEW VERSION] &amp;gt; v1.0.0:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo update
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm upgrade dapr dapr/dapr --version &lt;span style="color:#f92672">[&lt;/span>NEW VERSION&lt;span style="color:#f92672">]&lt;/span> --namespace dapr-system --wait
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>If you&amp;rsquo;re using a values file, remember to add the &lt;code>--values&lt;/code> option when running the upgrade command.&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ensure all pods are running:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods -n dapr-system -w
NAME READY STATUS RESTARTS AGE
dapr-dashboard-69f5c5c867-mqhg4 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 42s
dapr-operator-5cdd6b7f9c-9sl7g 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 41s
dapr-placement-server-0 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 41s
dapr-sentry-84565c747b-7bh8h 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 35s
dapr-sidecar-injector-68f868668f-6xnbt 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 41s
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Restart your application deployments to update the Dapr runtime:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl rollout restart deploy/&amp;lt;DEPLOYMENT-NAME&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>All done!&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="下一步">下一步&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-overview/">Dapr on Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-production/">Dapr production guidelines&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: Kubernetes 集群配置</title><link>https://docs.dapr.io/operations/hosting/kubernetes/cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/operations/hosting/kubernetes/cluster/</guid><description/></item></channel></rss>