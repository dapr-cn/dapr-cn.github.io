<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dapr Docs – Deploy and run Dapr in Kubernetes mode</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/</link><description>Recent content in Deploy and run Dapr in Kubernetes mode on Dapr Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.dapr.io/en/operations/hosting/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Operations: Overview of Dapr on Kubernetes</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-overview/</guid><description>
&lt;h2 id="dapr-on-kubernetes">Dapr on Kubernetes&lt;/h2>
&lt;p>Dapr can be configured to run on any Kubernetes cluster. To achieve this, Dapr begins by deploying the &lt;code>dapr-sidecar-injector&lt;/code>, &lt;code>dapr-operator&lt;/code>, &lt;code>dapr-placement&lt;/code>, and &lt;code>dapr-sentry&lt;/code> Kubernetes services. These provide first-class integration to make running applications with Dapr easy.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>dapr-operator:&lt;/strong> Manages &lt;a href="https://docs.dapr.io/en/operations/components/">component&lt;/a> updates and Kubernetes services endpoints for Dapr (state stores, pub/subs, etc.)&lt;/li>
&lt;li>&lt;strong>dapr-sidecar-injector:&lt;/strong> Injects Dapr into &lt;a href="#adding-dapr-to-a-kubernetes-deployment">annotated&lt;/a> deployment pods and adds the environment variables &lt;code>DAPR_HTTP_PORT&lt;/code> and &lt;code>DAPR_GRPC_PORT&lt;/code> to enable user-defined applications to easily communicate with Dapr without hard-coding Dapr port values.&lt;/li>
&lt;li>&lt;strong>dapr-placement:&lt;/strong> Used for &lt;a href="https://docs.dapr.io/en/developing-applications/building-blocks/actors/">actors&lt;/a> only. Creates mapping tables that map actor instances to pods&lt;/li>
&lt;li>&lt;strong>dapr-sentry:&lt;/strong> Manages mTLS between services and acts as a certificate authority. For more information read the &lt;a href="https://docs.dapr.io/en/concepts/security-concept/">security overview&lt;/a>.&lt;/li>
&lt;/ul>
&lt;img src="https://docs.dapr.io/images/overview_kubernetes.png" width=800>
&lt;h2 id="deploying-dapr-to-a-kubernetes-cluster">Deploying Dapr to a Kubernetes cluster&lt;/h2>
&lt;p>Read &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-deploy/">this guide&lt;/a> to learn how to deploy Dapr to your Kubernetes cluster.&lt;/p>
&lt;h2 id="adding-dapr-to-a-kubernetes-deployment">Adding Dapr to a Kubernetes deployment&lt;/h2>
&lt;p>Deploying and running a Dapr enabled application into your Kubernetes cluster is as simple as adding a few annotations to the deployment schemes. To give your service an &lt;code>id&lt;/code> and &lt;code>port&lt;/code> known to Dapr, turn on tracing through configuration and launch the Dapr sidecar container, you annotate your Kubernetes deployment like this. For more information check &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-annotations/">dapr annotations&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml"> &lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;nodeapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;3000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;tracing&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;p>You can see some examples &lt;a href="https://github.com/dapr/quickstarts/tree/master/hello-kubernetes">here&lt;/a> in the Kubernetes getting started quickstart.&lt;/p>
&lt;h2 id="related-links">Related links&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-deploy/">Deploy Dapr to a Kubernetes cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-upgrade/">Upgrade Dapr on a Kubernetes cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-production/">Production guidelines for Dapr on Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dapr/quickstarts/tree/master/hello-kubernetes">Dapr Kubernetes Quickstart&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: Deploy Dapr on a Kubernetes cluster</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-deploy/</guid><description>
&lt;p>When setting up Kubernetes you can use either the Dapr CLI or Helm.&lt;/p>
&lt;p>For more information on what is deployed to your Kubernetes cluster read the &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-overview/">Kubernetes overview&lt;/a>&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Install &lt;a href="https://docs.dapr.io/en/getting-started/install-dapr-cli/">Dapr CLI&lt;/a>&lt;/li>
&lt;li>Install &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">kubectl&lt;/a>&lt;/li>
&lt;li>Kubernetes cluster (see below if needed)&lt;/li>
&lt;/ul>
&lt;h3 id="create-cluster">Create cluster&lt;/h3>
&lt;p>You can install Dapr on any Kubernetes cluster. Here are some helpful links:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/cluster/setup-minikube/">Setup Minikube Cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/cluster/setup-aks/">Setup Azure Kubernetes Service Cluster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/quickstart">Setup Google Cloud Kubernetes Engine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html">Setup Amazon Elastic Kubernetes Service&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Hybrid clusters&lt;/h4>
Both the Dapr CLI and the Dapr Helm chart automatically deploy with affinity for nodes with the label &lt;code>kubernetes.io/os=linux&lt;/code>. You can deploy Dapr to Windows nodes if your application requires it. For more information see &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-hybrid-clusters/">Deploying to a hybrid Linux/Windows Kubernetes cluster&lt;/a>.
&lt;/div>
&lt;h2 id="install-with-dapr-cli">Install with Dapr CLI&lt;/h2>
&lt;p>You can install Dapr to a Kubernetes cluster using the &lt;a href="https://docs.dapr.io/en/getting-started/install-dapr-cli/">Dapr CLI&lt;/a>.&lt;/p>
&lt;h3 id="install-dapr">Install Dapr&lt;/h3>
&lt;p>The &lt;code>-k&lt;/code> flag initializes Dapr on the Kubernetes cluster in your current context.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Ensure correct cluster is set&lt;/h4>
Make sure the correct &amp;ldquo;target&amp;rdquo; cluster is set. Check &lt;code>kubectl context (kubectl config get-contexts)&lt;/code> to verify. You can set a different context using &lt;code>kubectl config use-context &amp;lt;CONTEXT&amp;gt;&lt;/code>.
&lt;/div>
&lt;p>Run the following command on your local machine to init Dapr on your cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">⌛ Making the jump to hyperspace...
✅ Deploying the Dapr control plane to your cluster...
✅ Success! Dapr has been installed to namespace dapr-system. To verify, run &lt;span style="color:#e6db74">&amp;#34;dapr status -k&amp;#34;&lt;/span> in your terminal. To get started, go here: https://aka.ms/dapr-getting-started
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-in-custom-namespace">Install in custom namespace&lt;/h3>
&lt;p>The default namespace when initializing Dapr is &lt;code>dapr-system&lt;/code>. You can override this with the &lt;code>-n&lt;/code> flag.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k -n mynamespace
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-in-highly-available-mode">Install in highly available mode&lt;/h3>
&lt;p>You can run Dapr with 3 replicas of each control plane pod in the dapr-system namespace for &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-production/">production scenarios&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k --enable-ha&lt;span style="color:#f92672">=&lt;/span>true
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="disable-mtls">Disable mTLS&lt;/h3>
&lt;p>Dapr is initialized by default with &lt;a href="https://docs.dapr.io/en/concepts/security-concept/#sidecar-to-sidecar-communication">mTLS&lt;/a>. You can disable it with:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k --enable-mtls&lt;span style="color:#f92672">=&lt;/span>false
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="wait-for-the-installation-to-complete">Wait for the installation to complete&lt;/h3>
&lt;p>You can wait for the installation to complete its deployment with the &lt;code>--wait&lt;/code> flag.&lt;/p>
&lt;p>The default timeout is 300s (5 min), but can be customized with the &lt;code>--timeout&lt;/code> flag.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr init -k --wait --timeout &lt;span style="color:#ae81ff">600&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="uninstall-dapr-on-kubernetes-with-cli">Uninstall Dapr on Kubernetes with CLI&lt;/h3>
&lt;p>Run the following command on your local machine to uninstall Dapr on your cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr uninstall -k
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-with-helm-advanced">Install with Helm (advanced)&lt;/h2>
&lt;p>You can install Dapr on Kubernetes using a Helm 3 chart.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Ensure you are on Helm v3&lt;/h4>
The latest Dapr helm chart no longer supports Helm v2. Please migrate from Helm v2 to Helm v3 by following &lt;a href="https://helm.sh/blog/migrate-from-helm-v2-to-helm-v3/">this guide&lt;/a>.
&lt;/div>
&lt;h3 id="add-and-install-dapr-helm-chart">Add and install Dapr Helm chart&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Make sure &lt;a href="https://github.com/helm/helm/releases">Helm 3&lt;/a> is installed on your machine&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add Helm repo and update&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add dapr https://dapr.github.io/helm-charts/
helm repo update
&lt;span style="color:#75715e"># See which chart versions are available&lt;/span>
helm search repo dapr --devel --versions
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install the Dapr chart on your cluster in the &lt;code>dapr-system&lt;/code> namespace.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm upgrade --install dapr dapr/dapr &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--version&lt;span style="color:#f92672">=&lt;/span>1.1.0 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--namespace dapr-system &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--create-namespace &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--wait
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To install in high availability mode:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm upgrade --install dapr dapr/dapr &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--version&lt;span style="color:#f92672">=&lt;/span>1.1.0 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--namespace dapr-system &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--create-namespace &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--set global.ha.enabled&lt;span style="color:#f92672">=&lt;/span>true &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>--wait
&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-production/">Guidelines for production ready deployments on Kubernetes&lt;/a> for more information on installing and upgrading Dapr using Helm.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="uninstall-dapr-on-kubernetes">Uninstall Dapr on Kubernetes&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm uninstall dapr --namespace dapr-system
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="more-information">More information&lt;/h3>
&lt;ul>
&lt;li>Read &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-production/">this guide&lt;/a> for recommended Helm chart values for production setups&lt;/li>
&lt;li>See &lt;a href="https://github.com/dapr/dapr/blob/master/charts/dapr/README.md">this page&lt;/a> for details on Dapr Helm charts.&lt;/li>
&lt;/ul>
&lt;h2 id="verify-installation">Verify installation&lt;/h2>
&lt;p>Once the installation is complete, verify that the dapr-operator, dapr-placement, dapr-sidecar-injector and dapr-sentry pods are running in the &lt;code>dapr-system&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods --namespace dapr-system
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">NAME READY STATUS RESTARTS AGE
dapr-dashboard-7bd6cbf5bf-xglsr 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-operator-7bd6cbf5bf-xglsr 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-placement-7f8f76778f-6vhl2 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-sidecar-injector-8555576b6f-29cqm 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
dapr-sentry-9435776c7f-8f7yd 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 40s
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/en/getting-started/configure-state-pubsub/">Configure state store &amp;amp; pubsub message broker&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: Upgrade Dapr on a Kubernetes cluster</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-upgrade/</guid><description>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/en/getting-started/install-dapr-cli/">Dapr CLI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/helm/helm/releases">Helm 3&lt;/a> (if using Helm)&lt;/li>
&lt;/ul>
&lt;h2 id="upgrade-existing-cluster-to-110">Upgrade existing cluster to 1.1.0&lt;/h2>
&lt;p>There are two ways to upgrade the Dapr control plane on a Kubernetes cluster using either the Dapr CLI or Helm.&lt;/p>
&lt;h3 id="dapr-cli">Dapr CLI&lt;/h3>
&lt;p>The example below shows how to upgrade to version 1.1.0:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr upgrade -k --runtime-version&lt;span style="color:#f92672">=&lt;/span>1.0.1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can provide all the available Helm chart configurations using the Dapr CLI.
See &lt;a href="https://github.com/dapr/cli#supplying-helm-values">here&lt;/a> for more info.&lt;/p>
&lt;h4 id="troubleshooting-upgrade-using-the-cli">Troubleshooting upgrade using the CLI&lt;/h4>
&lt;p>There is a known issue running upgrades on clusters that may have previously had a version prior to 1.0.0-rc.2 installed on a cluster.&lt;/p>
&lt;p>Most users should not encounter this issue, but there are a few upgrade path edge cases that may leave an incompatible CustomResourceDefinition installed on your cluster. The error message for this case looks like this:&lt;/p>
&lt;pre>&lt;code>❌ Failed to upgrade Dapr: Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply
The CustomResourceDefinition &amp;quot;configurations.dapr.io&amp;quot; is invalid: spec.preserveUnknownFields: Invalid value: true: must be false in order to use defaults in the schema
&lt;/code>&lt;/pre>&lt;p>To resolve this issue please run the follow command to upgrade the CustomResourceDefinition to a compatible version:&lt;/p>
&lt;pre>&lt;code>kubectl replace -f https://raw.githubusercontent.com/dapr/dapr/5a15b3e0f093d2d0938b12f144c7047474a290fe/charts/dapr/crds/configuration.yaml
&lt;/code>&lt;/pre>&lt;p>Then proceed with the &lt;code>dapr upgrade --runtime-version 1.1.0 -k&lt;/code> command as above.&lt;/p>
&lt;h3 id="helm">Helm&lt;/h3>
&lt;p>From version 1.0.0 onwards, upgrading Dapr using Helm is no longer a disruptive action since existing certificate values will automatically be re-used.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Upgrade Dapr from 1.0.0 (or newer) to any [NEW VERSION] &amp;gt; v1.0.0:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo update
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm upgrade dapr dapr/dapr --version &lt;span style="color:#f92672">[&lt;/span>NEW VERSION&lt;span style="color:#f92672">]&lt;/span> --namespace dapr-system --wait
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>If you&amp;rsquo;re using a values file, remember to add the &lt;code>--values&lt;/code> option when running the upgrade command.&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ensure all pods are running:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods -n dapr-system -w
NAME READY STATUS RESTARTS AGE
dapr-dashboard-69f5c5c867-mqhg4 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 42s
dapr-operator-5cdd6b7f9c-9sl7g 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 41s
dapr-placement-server-0 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 41s
dapr-sentry-84565c747b-7bh8h 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 35s
dapr-sidecar-injector-68f868668f-6xnbt 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 41s
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Restart your application deployments to update the Dapr runtime:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl rollout restart deploy/&amp;lt;DEPLOYMENT-NAME&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>All done!&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-overview/">Dapr on Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-production/">Dapr production guidelines&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: Production guidelines on Kubernetes</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-production/</guid><description>
&lt;h2 id="cluster-capacity-requirements">Cluster capacity requirements&lt;/h2>
&lt;p>For a production ready Kubernetes cluster deployment, it is recommended you run a cluster of at least 3 worker nodes to support a highly-available control plane installation.
Use the following resource settings might serve as a starting point. Requirements will vary depending on cluster size and other factors, so individual testing is needed to find the right values for your environment:&lt;/p>
&lt;p>&lt;em>Note: For more info on CPU and Memory resource units and their meaning, see &lt;a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes">this&lt;/a> link&lt;/em>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Deployment&lt;/th>
&lt;th>CPU&lt;/th>
&lt;th>Memory&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Operator&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 100m&lt;/td>
&lt;td>Limit: 200Mi, Request: 100Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sidecar Injector&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 100m&lt;/td>
&lt;td>Limit: 200Mi, Request: 30Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sentry&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 100m&lt;/td>
&lt;td>Limit: 200Mi, Request: 30Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Placement&lt;/strong>&lt;/td>
&lt;td>Limit: 1, Request: 250m&lt;/td>
&lt;td>Limit: 150Mi, Request: 75Mi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Dashboard&lt;/strong>&lt;/td>
&lt;td>Limit: 200m, Request: 50m&lt;/td>
&lt;td>Limit: 200Mi, Request: 20Mi&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="helm">Helm&lt;/h3>
&lt;p>When installing Dapr using Helm, no default limit/request values are set. Each component has a &lt;code>resources&lt;/code> option (for example, &lt;code>dapr_dashboard.resources&lt;/code>), which you can use to tune the Dapr control plane to fit your environment. The &lt;a href="https://github.com/dapr/dapr/blob/master/charts/dapr/README.md">Helm chart readme&lt;/a> has detailed information and examples. For local/dev installations, you might simply want to skip configuring the &lt;code>resources&lt;/code> options.&lt;/p>
&lt;h3 id="optional-components">Optional components&lt;/h3>
&lt;p>The following Dapr control plane deployments are optional:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Placement&lt;/strong> - Needed for Dapr Actors&lt;/li>
&lt;li>&lt;strong>Sentry&lt;/strong> - Needed for mTLS for service to service invocation&lt;/li>
&lt;li>&lt;strong>Dashboard&lt;/strong> - Needed for operational view of the cluster&lt;/li>
&lt;/ul>
&lt;h2 id="sidecar-resource-settings">Sidecar resource settings&lt;/h2>
&lt;p>To set the resource assignments for the Dapr sidecar, see the annotations &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-annotations/">here&lt;/a>.
The specific annotations related to resource constraints are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>dapr.io/sidecar-cpu-limit&lt;/code>&lt;/li>
&lt;li>&lt;code>dapr.io/sidecar-memory-limit&lt;/code>&lt;/li>
&lt;li>&lt;code>dapr.io/sidecar-cpu-request&lt;/code>&lt;/li>
&lt;li>&lt;code>dapr.io/sidecar-memory-request&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>If not set, the dapr sidecar will run without resource settings, which may lead to issues. For a production-ready setup it is strongly recommended to configure these settings.&lt;/p>
&lt;p>For more details on configuring resource in Kubernetes see &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/">Assign Memory Resources to Containers and Pods&lt;/a> and &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/">Assign CPU Resources to Containers and Pods&lt;/a>.&lt;/p>
&lt;p>Example settings for the dapr sidecar in a production-ready setup:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>CPU&lt;/th>
&lt;th>Memory&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Limit: 300m, Request: 100m&lt;/td>
&lt;td>Limit: 1000Mi, Request: 250Mi&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;em>Note: Since Dapr is intended to do much of the I/O heavy lifting for your app, it&amp;rsquo;s expected that the resources given to Dapr enable you to drastically reduce the resource allocations for the application&lt;/em>&lt;/p>
&lt;p>The CPU and memory limits above account for the fact that Dapr is intended to a high number of I/O bound operations. It is strongly recommended that you use a tool monitoring tool to baseline the sidecar (and app) containers and tune these settings based on those baselines.&lt;/p>
&lt;h2 id="highly-available-mode">Highly-available mode&lt;/h2>
&lt;p>When deploying Dapr in a production-ready configuration, it&amp;rsquo;s recommended to deploy with a highly available configuration of the control plane, which creates 3 replicas of each control plane pod in the dapr-system namespace.&lt;/p>
&lt;h2 id="deploying-dapr-with-helm">Deploying Dapr with Helm&lt;/h2>
&lt;p>For a full guide on deploying Dapr with Helm visit &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-deploy/#install-with-helm-advanced">this guide&lt;/a>.&lt;/p>
&lt;h3 id="parameters-file">Parameters file&lt;/h3>
&lt;p>It is recommended to create a values file instead of specifying parameters on the command-line. This file should be checked in to source control so that you can track changes made to it.&lt;/p>
&lt;p>For a full list of all available options you can set in the values file (or by using the &lt;code>--set&lt;/code> command-line option), see &lt;a href="https://github.com/dapr/dapr/blob/master/charts/dapr/README.md">https://github.com/dapr/dapr/blob/master/charts/dapr/README.md&lt;/a>.&lt;/p>
&lt;p>Instead of using either &lt;code>helm install&lt;/code> or &lt;code>helm upgrade&lt;/code> as shown below, you can also run &lt;code>helm upgrade --install&lt;/code> - this will dynamically determine whether to install or upgrade.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e"># add/update the helm repo&lt;/span>
helm repo add dapr https://dapr.github.io/helm-charts/
helm repo update
&lt;span style="color:#75715e"># See which chart versions are available&lt;/span>
helm search repo dapr --devel --versions
&lt;span style="color:#75715e"># create a values file to store variables&lt;/span>
touch values.yml
cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt; EOF &amp;gt;&amp;gt; values.yml
&lt;/span>&lt;span style="color:#e6db74">global.ha.enabled: true
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;span style="color:#75715e"># run install/upgrade&lt;/span>
helm install dapr dapr/dapr &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --version&lt;span style="color:#f92672">=&lt;/span>&amp;lt;Dapr chart version&amp;gt; &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --namespace dapr-system &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --create-namespace &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --values values.yml &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> --wait
&lt;span style="color:#75715e"># verify the installation&lt;/span>
kubectl get pods --namespace dapr-system
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command will run 3 replicas of each control plane service in the dapr-system namespace.&lt;/p>
&lt;p>&lt;em>Note: The Dapr Helm chart automatically deploys with affinity for nodes with the label &lt;code>kubernetes.io/os=linux&lt;/code>. You can deploy the Dapr control plane to Windows nodes, but most users should not need to. For more information see &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-hybrid-clusters/">Deploying to a Hybrid Linux/Windows K8s Cluster&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="upgrading-dapr-with-helm">Upgrading Dapr with Helm&lt;/h2>
&lt;p>Dapr supports zero downtime upgrades. The upgrade path includes the following steps:&lt;/p>
&lt;ol>
&lt;li>Upgrading a CLI version (optional but recommended)&lt;/li>
&lt;li>Updating the Dapr control plane&lt;/li>
&lt;li>Updating the data plane (Dapr sidecars)&lt;/li>
&lt;/ol>
&lt;h3 id="upgrading-the-cli">Upgrading the CLI&lt;/h3>
&lt;p>To upgrade the Dapr CLI, &lt;a href="https://github.com/dapr/cli/releases">download the latest version&lt;/a> of the CLI and ensure it&amp;rsquo;s in your path.&lt;/p>
&lt;h3 id="upgrading-the-control-plane">Upgrading the control plane&lt;/h3>
&lt;p>See &lt;a href="https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-upgrade/#helm">steps to upgrade Dapr on a Kubernetes cluster&lt;/a>.&lt;/p>
&lt;h3 id="updating-the-data-plane-sidecars">Updating the data plane (sidecars)&lt;/h3>
&lt;p>The last step is to update pods that are running Dapr to pick up the new version of the Dapr runtime.
To do that, simply issue a rollout restart command for any deployment that has the &lt;code>dapr.io/enabled&lt;/code> annotation:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl rollout restart deploy/&amp;lt;Application deployment name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To see a list of all your Dapr enabled deployments, you can either use the &lt;a href="https://github.com/dapr/dashboard">Dapr Dashboard&lt;/a> or run the following command using the Dapr CLI:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">dapr list -k
APP ID APP PORT AGE CREATED
nodeapp &lt;span style="color:#ae81ff">3000&lt;/span> 16h 2020-07-29 17:16.22
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="recommended-security-configuration">Recommended security configuration&lt;/h2>
&lt;p>When properly configured, Dapr ensures secure communication. It can also make your application more secure with a number of built-in features.&lt;/p>
&lt;p>It is recommended that a production-ready deployment includes the following settings:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Mutual Authentication (mTLS)&lt;/strong> should be enabled. Note that Dapr has mTLS on by default. For details on how to bring your own certificates, see &lt;a href="https://docs.dapr.io/en/operations/security/mtls/#bringing-your-own-certificates">here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>App to Dapr API authentication&lt;/strong> is enabled. This is the communication between your application and the Dapr sidecar. To secure the Dapr API from unauthorized application access, it is recommended to enable Dapr&amp;rsquo;s token based auth. See &lt;a href="https://docs.dapr.io/en/operations/security/api-token/">enable API token authentication in Dapr&lt;/a> for details&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dapr to App API authentication&lt;/strong> is enabled. This is the communication between Dapr and your application. This ensures that Dapr knows that it is communicating with an authorized application. See &lt;a href="https://docs.dapr.io/en/operations/security/app-api-token/">Authenticate requests from Dapr using token authentication&lt;/a> for details&lt;/p>
&lt;/li>
&lt;li>
&lt;p>All component YAMLs should have &lt;strong>secret data configured in a secret store&lt;/strong> and not hard-coded in the YAML file. See &lt;a href="https://docs.dapr.io/en/operations/components/component-secrets/">here&lt;/a> on how to use secrets with Dapr components&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The Dapr &lt;strong>control plane is installed on a dedicated namespace&lt;/strong> such as &lt;code>dapr-system&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dapr also supports &lt;strong>scoping components for certain applications&lt;/strong>. This is not a required practice, and can be enabled according to your security needs. See &lt;a href="https://docs.dapr.io/en/operations/components/component-scopes/">here&lt;/a> for more info.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="tracing-and-metrics-configuration">Tracing and metrics configuration&lt;/h2>
&lt;p>Dapr has tracing and metrics enabled by default. It is &lt;em>recommended&lt;/em> that you set up distributed tracing and metrics for your applications and the Dapr control plane in production.&lt;/p>
&lt;p>If you already have your own observability set-up, you can disable tracing and metrics for Dapr.&lt;/p>
&lt;h3 id="tracing">Tracing&lt;/h3>
&lt;p>To configure a tracing backend for Dapr visit &lt;a href="https://docs.dapr.io/en/operations/monitoring/tracing/setup-tracing/">this&lt;/a> link.&lt;/p>
&lt;h3 id="metrics">Metrics&lt;/h3>
&lt;p>For metrics, Dapr exposes a Prometheus endpoint listening on port 9090 which can be scraped by Prometheus.&lt;/p>
&lt;p>To setup Prometheus, Grafana and other monitoring tools with Dapr, visit &lt;a href="https://docs.dapr.io/en/operations/monitoring/">this&lt;/a> link.&lt;/p></description></item><item><title>Operations: Dapr Kubernetes pod annotations spec</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-annotations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-annotations/</guid><description>
&lt;p>The following table shows all the supported pod Spec annotations supported by Dapr.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Annotation&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>dapr.io/enabled&lt;/code>&lt;/td>
&lt;td>Setting this paramater to &lt;code>true&lt;/code> injects the Dapr sidecar into the pod&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-port&lt;/code>&lt;/td>
&lt;td>This parameter tells Dapr which port your application is listening on&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-id&lt;/code>&lt;/td>
&lt;td>The unique ID of the application. Used for service discovery, state encapsulation and the pub/sub consumer ID&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/log-level&lt;/code>&lt;/td>
&lt;td>Sets the log level for the Dapr sidecar. Allowed values are &lt;code>debug&lt;/code>, &lt;code>info&lt;/code>, &lt;code>warn&lt;/code>, &lt;code>error&lt;/code>. Default is &lt;code>info&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/config&lt;/code>&lt;/td>
&lt;td>Tells Dapr which Configuration CRD to use&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/log-as-json&lt;/code>&lt;/td>
&lt;td>Setting this parameter to &lt;code>true&lt;/code> outputs logs in JSON format. Default is &lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/enable-profiling&lt;/code>&lt;/td>
&lt;td>Setting this paramater to &lt;code>true&lt;/code> starts the Dapr profiling server on port &lt;code>7777&lt;/code>. Default is &lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/api-token-secret&lt;/code>&lt;/td>
&lt;td>Tells Dapr which Kubernetes secret to use for token based API authentication. By default this is not set.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-protocol&lt;/code>&lt;/td>
&lt;td>Tells Dapr which protocol your application is using. Valid options are &lt;code>http&lt;/code> and &lt;code>grpc&lt;/code>. Default is &lt;code>http&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-max-concurrency&lt;/code>&lt;/td>
&lt;td>Limit the concurrency of your application. A valid value is any number larger than &lt;code>0&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/app-ssl&lt;/code>&lt;/td>
&lt;td>Tells Dapr to invoke the app over an insecure SSL connection. Applies to both HTTP and gRPC. Traffic between your app and the Dapr sidecar is encrypted with a certificate issued by a non-trusted certificate authority, which is considered insecure. Default is &lt;code>false&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/metrics-port&lt;/code>&lt;/td>
&lt;td>Sets the port for the sidecar metrics server. Default is &lt;code>9090&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-cpu-limit&lt;/code>&lt;/td>
&lt;td>Maximum amount of CPU that the Dapr sidecar can use. See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-memory-limit&lt;/code>&lt;/td>
&lt;td>Maximum amount of Memory that the Dapr sidecar can use. See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-cpu-request&lt;/code>&lt;/td>
&lt;td>Amount of CPU that the Dapr sidecar requests. See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-memory-request&lt;/code>&lt;/td>
&lt;td>Amount of Memory that the Dapr sidecar requests .See valid values &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/">here&lt;/a>. By default this is not set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-delay-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after the sidecar container has started before liveness probe is initiated. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-timeout-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after which the sidecar liveness probe times out. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-period-seconds&lt;/code>&lt;/td>
&lt;td>How often (in seconds) to perform the sidecar liveness probe. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>6&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-liveness-probe-threshold&lt;/code>&lt;/td>
&lt;td>When the sidecar liveness probe fails, Kubernetes will try N times before giving up. In this case, the Pod will be marked Unhealthy. Read more about &lt;code>failureThreshold&lt;/code> &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-delay-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after the sidecar container has started before readiness probe is initiated. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-timeout-seconds&lt;/code>&lt;/td>
&lt;td>Number of seconds after which the sidecar readiness probe times out. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-period-seconds&lt;/code>&lt;/td>
&lt;td>How often (in seconds) to perform the sidecar readiness probe. Read more &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>6&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/sidecar-readiness-probe-threshold&lt;/code>&lt;/td>
&lt;td>When the sidecar readiness probe fails, Kubernetes will try N times before giving up. In this case, the Pod will be marked Unready. Read more about &lt;code>failureThreshold&lt;/code> &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">here&lt;/a>. Default is &lt;code>3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/http-max-request-size&lt;/code>&lt;/td>
&lt;td>Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is &lt;code>4&lt;/code> MB&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>dapr.io/env&lt;/code>&lt;/td>
&lt;td>List of environment variable to be injected into the sidecar. Strings consisting of key=value pairs separated by a comma.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Operations: Deploy to hybrid Linux/Windows Kubernetes clusters</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-hybrid-clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-hybrid-clusters/</guid><description>
&lt;p>Dapr supports running on kubernetes clusters with windows nodes. You can run your Dapr microservices exclusively on Windows, exclusively on Linux, or a combination of both. This is helpful to users who may be doing a piecemeal migration of a legacy application into a Dapr Kubernetes cluster.&lt;/p>
&lt;p>Kubernetes uses a concept called node affinity so that you can denote whether you want your application to be launched on a Linux node or a Windows node. When deploying to a cluster which has both Windows and Linux nodes, you must provide affinity rules for your applications, otherwise the Kubernetes scheduler might launch your application on the wrong type of node.&lt;/p>
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;p>You will need a Kubernetes cluster with Windows nodes. Many Kubernetes providers support the automatic provisioning of Windows enabled Kubernetes clusters.&lt;/p>
&lt;ol>
&lt;li>Follow your preferred provider&amp;rsquo;s instructions for setting up a cluster with Windows enabled&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/windows-container-cli">Setting up Windows on Azure AKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/windows-support.html">Setting up Windows on AWS EKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster-windows">Setting up Windows on Google Cloud GKE&lt;/a>&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>
&lt;p>Once you have set up the cluster, you should see that it has both Windows and Linux nodes available&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get nodes -o wide
NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME
aks-nodepool1-11819434-vmss000000 Ready agent 6d v1.17.9 10.240.0.4 &amp;lt;none&amp;gt; Ubuntu 16.04.6 LTS 4.15.0-1092-azure docker://3.0.10+azure
aks-nodepool1-11819434-vmss000001 Ready agent 6d v1.17.9 10.240.0.35 &amp;lt;none&amp;gt; Ubuntu 16.04.6 LTS 4.15.0-1092-azure docker://3.0.10+azure
aks-nodepool1-11819434-vmss000002 Ready agent 5d10h v1.17.9 10.240.0.129 &amp;lt;none&amp;gt; Ubuntu 16.04.6 LTS 4.15.0-1092-azure docker://3.0.10+azure
akswin000000 Ready agent 6d v1.17.9 10.240.0.66 &amp;lt;none&amp;gt; Windows Server &lt;span style="color:#ae81ff">2019&lt;/span> Datacenter 10.0.17763.1339 docker://19.3.5
akswin000001 Ready agent 6d v1.17.9 10.240.0.97 &amp;lt;none&amp;gt; Windows Server &lt;span style="color:#ae81ff">2019&lt;/span> Datacenter 10.0.17763.1339 docker://19.3.5
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="installing-the-dapr-control-plane">Installing the Dapr control plane&lt;/h2>
&lt;p>If you are installing using the Dapr CLI or via a helm chart, simply follow the normal deployment procedures:
&lt;a href="https://docs.dapr.io/en/getting-started/install-dapr-selfhost/#installing-Dapr-on-a-kubernetes-cluster">Installing Dapr on a Kubernetes cluster&lt;/a>&lt;/p>
&lt;p>Affinity will be automatically set for &lt;code>kubernetes.io/os=linux&lt;/code>. This will be sufficient for most users, as Kubernetes requires at least one Linux node pool.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> Dapr control plane containers are built and tested for both windows and linux, however, we generally recommend using the linux control plane containers. They tend to be smaller and have a much larger user base.&lt;/p>
&lt;/blockquote>
&lt;p>If you understand the above, but want to deploy the Dapr control plane to Windows, you can do so by setting:&lt;/p>
&lt;pre>&lt;code>helm install dapr dapr/dapr --set global.daprControlPlaneOs=windows
&lt;/code>&lt;/pre>&lt;h2 id="installing-dapr-applications">Installing Dapr applications&lt;/h2>
&lt;h3 id="windows-applications">Windows applications&lt;/h3>
&lt;p>In order to launch a Dapr application on Windows, you&amp;rsquo;ll first need to create a Docker container with your application installed. For a step by step guide see &lt;a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/set-up-environment">Get started: Prep Windows for containers&lt;/a>. Once you have a docker container with your application, create a deployment YAML file with node affinity set to kubernetes.io/os: windows.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a deployment YAML&lt;/p>
&lt;p>Here is a sample deployment with nodeAffinity set to &amp;ldquo;windows&amp;rdquo;. Modify as needed for your application.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yourwinapp&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">applabel&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">applablel&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">applabel&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;addapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;6000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;appconfig&amp;#34;&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">containers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">add&lt;/span>
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">yourreponsitory/your-windows-dapr-container:your-tag&lt;/span>
&lt;span style="color:#f92672">ports&lt;/span>:
- &lt;span style="color:#f92672">containerPort&lt;/span>: &lt;span style="color:#ae81ff">6000&lt;/span>
&lt;span style="color:#f92672">imagePullPolicy&lt;/span>: &lt;span style="color:#ae81ff">Always&lt;/span>
&lt;span style="color:#f92672">affinity&lt;/span>:
&lt;span style="color:#f92672">nodeAffinity&lt;/span>:
&lt;span style="color:#f92672">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>:
&lt;span style="color:#f92672">nodeSelectorTerms&lt;/span>:
- &lt;span style="color:#f92672">matchExpressions&lt;/span>:
- &lt;span style="color:#f92672">key&lt;/span>: &lt;span style="color:#ae81ff">kubernetes.io/os&lt;/span>
&lt;span style="color:#f92672">operator&lt;/span>: &lt;span style="color:#ae81ff">In&lt;/span>
&lt;span style="color:#f92672">values&lt;/span>:
- &lt;span style="color:#ae81ff">windows&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This deployment yaml will be the same as any other dapr application, with an additional spec.template.spec.affinity section as shown above.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deploy to your Kubernetes cluster&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f deploy_windows.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="linux-applications">Linux applications&lt;/h3>
&lt;p>If you have already got a dapr application with runs on Linux, you&amp;rsquo;ll still need to add affinity rules as above, but choose linux affinity instead.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a deployment YAML&lt;/p>
&lt;p>Here is a sample deployment with nodeAffinity set to &amp;ldquo;linux&amp;rdquo;. Modify as needed for your application.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yourlinuxapp&lt;/span>
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yourlabel&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#f92672">selector&lt;/span>:
&lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yourlabel&lt;/span>
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">labels&lt;/span>:
&lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yourlabel&lt;/span>
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;addapp&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/port&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;6000&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/config&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;appconfig&amp;#34;&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">containers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">add&lt;/span>
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">yourreponsitory/your-application:your-tag&lt;/span>
&lt;span style="color:#f92672">ports&lt;/span>:
- &lt;span style="color:#f92672">containerPort&lt;/span>: &lt;span style="color:#ae81ff">6000&lt;/span>
&lt;span style="color:#f92672">imagePullPolicy&lt;/span>: &lt;span style="color:#ae81ff">Always&lt;/span>
&lt;span style="color:#f92672">affinity&lt;/span>:
&lt;span style="color:#f92672">nodeAffinity&lt;/span>:
&lt;span style="color:#f92672">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>:
&lt;span style="color:#f92672">nodeSelectorTerms&lt;/span>:
- &lt;span style="color:#f92672">matchExpressions&lt;/span>:
- &lt;span style="color:#f92672">key&lt;/span>: &lt;span style="color:#ae81ff">kubernetes.io/os&lt;/span>
&lt;span style="color:#f92672">operator&lt;/span>: &lt;span style="color:#ae81ff">In&lt;/span>
&lt;span style="color:#f92672">values&lt;/span>:
- &lt;span style="color:#ae81ff">linux&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Deploy to your Kubernetes cluster&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f deploy_linux.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="cleanup">Cleanup&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl delete -f deploy_linux.yaml
kubectl delete -f deploy_windows.yaml
helm uninstall dapr
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="related-links">Related links&lt;/h2>
&lt;ul>
&lt;li>See the &lt;a href="https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/">official Kubernetes documentation&lt;/a> for examples of more advanced configuration via node affinity&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/set-up-environment">Get started: Prep Windows for containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/windows-container-cli">Setting up a Windows enabled Kubernetes cluster on Azure AKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/windows-support.html">Setting up a Windows enabled Kubernetes cluster on AWS EKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster-windows">Setting up Windows on Google Cloud GKE&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Operations: Running Dapr with a Kubernetes Job</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-job/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/kubernetes-job/</guid><description>
&lt;h1 id="kubernetes-job">Kubernetes Job&lt;/h1>
&lt;p>The Dapr sidecar is designed to be a long running process, in the context of a &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/job/">Kubernetes Job&lt;/a> this behaviour can block your job completion.
To address this issue the Dapr sidecar has an endpoint to &lt;code>Shutdown&lt;/code> the sidecar.&lt;/p>
&lt;p>When running a basic &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/job/">Kubernetes Job&lt;/a> you will need to call the &lt;code>/shutdown&lt;/code> endpoint for the sidecar to gracefully stop and the job will be considered &lt;code>Completed&lt;/code>.&lt;/p>
&lt;p>When a job is finish without calling &lt;code>Shutdown&lt;/code> your job will be in a &lt;code>NotReady&lt;/code> state with only the &lt;code>daprd&lt;/code> container running endlessly.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">batch/v1&lt;/span>
&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Job&lt;/span>
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">job-with-shutdown&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">template&lt;/span>:
&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;span style="color:#f92672">annotations&lt;/span>:
&lt;span style="color:#f92672">dapr.io/enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;span style="color:#f92672">dapr.io/app-id&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;with-shutdown&amp;#34;&lt;/span>
&lt;span style="color:#f92672">spec&lt;/span>:
&lt;span style="color:#f92672">containers&lt;/span>:
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">job&lt;/span>
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">busybox&lt;/span>
&lt;span style="color:#f92672">command&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;/bin/sh&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;-c&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;sleep 20 &amp;amp;&amp;amp; wget localhost:3500/v1.0/shutdown&amp;#34;&lt;/span>]
&lt;span style="color:#f92672">restartPolicy&lt;/span>: &lt;span style="color:#ae81ff">Never&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also call the &lt;code>Shutdown&lt;/code> from any of the Dapr SDK&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> (
&lt;span style="color:#e6db74">&amp;#34;context&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;log&amp;#34;&lt;/span>
&lt;span style="color:#e6db74">&amp;#34;os&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">dapr&lt;/span> &lt;span style="color:#e6db74">&amp;#34;github.com/dapr/go-sdk/client&amp;#34;&lt;/span>
)
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;span style="color:#a6e22e">client&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">dapr&lt;/span>.&lt;span style="color:#a6e22e">NewClient&lt;/span>()
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Panic&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
}
&lt;span style="color:#66d9ef">defer&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Close&lt;/span>()
&lt;span style="color:#66d9ef">defer&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Shutdown&lt;/span>()
&lt;span style="color:#75715e">// Job
&lt;/span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Operations: Kubernetes cluster setup</title><link>https://docs.dapr.io/en/operations/hosting/kubernetes/cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.dapr.io/en/operations/hosting/kubernetes/cluster/</guid><description/></item></channel></rss>